shadow$provide.module$node_modules$highlight_DOT_js$lib$languages$cal=function(global,require,module,exports){module.exports=function(hljs){var COMMENT_MODES=[hljs.C_LINE_COMMENT_MODE,hljs.COMMENT(/\{/,/\}/,{relevance:0}),hljs.COMMENT(/\(\*/,/\*\)/,{relevance:10})];const STRING={className:"string",begin:/'/,end:/'/,contains:[{begin:/''/}]},CHAR_STRING={className:"string",begin:/(#\d+)+/};COMMENT_MODES={className:"function",beginKeywords:"procedure",end:/[:;]/,keywords:"procedure|10",contains:[hljs.TITLE_MODE,
{className:"params",begin:/\(/,end:/\)/,keywords:"div mod in and or not xor asserterror begin case do downto else end exit for if of repeat then to until while with var",contains:[STRING,CHAR_STRING]}].concat(COMMENT_MODES)};return{name:"C/AL",case_insensitive:!0,keywords:{keyword:"div mod in and or not xor asserterror begin case do downto else end exit for if of repeat then to until while with var",literal:"false true"},illegal:/\/\*/,contains:[STRING,CHAR_STRING,{className:"number",begin:"\\b\\d+(\\.\\d+)?(DT|D|T)",
relevance:0},{className:"string",begin:'"',end:'"'},hljs.NUMBER_MODE,{className:"class",begin:"OBJECT (Table|Form|Report|Dataport|Codeunit|XMLport|MenuSuite|Page|Query) (\\d+) ([^\\r\\n]+)",returnBegin:!0,contains:[hljs.TITLE_MODE,COMMENT_MODES]},COMMENT_MODES]}}}
//# sourceMappingURL=module$node_modules$highlight_DOT_js$lib$languages$cal.js.map
