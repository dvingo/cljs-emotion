{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$haxe.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/highlight_DOT_js/lib/languages/haxe.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$haxe\"] = function(global,require,module,exports) {\n/*\nLanguage: Haxe\nDescription: Haxe is an open source toolkit based on a modern, high level, strictly typed programming language.\nAuthor: Christopher Kaster <ikasoki@gmail.com> (Based on the actionscript.js language file by Alexander Myadzel)\nContributors: Kenton Hamaluik <kentonh@gmail.com>\nWebsite: https://haxe.org\n*/\n\nfunction haxe(hljs) {\n\n  const HAXE_BASIC_TYPES = 'Int Float String Bool Dynamic Void Array ';\n\n  return {\n    name: 'Haxe',\n    aliases: ['hx'],\n    keywords: {\n      keyword: 'break case cast catch continue default do dynamic else enum extern ' +\n               'for function here if import in inline never new override package private get set ' +\n               'public return static super switch this throw trace try typedef untyped using var while ' +\n               HAXE_BASIC_TYPES,\n      built_in:\n        'trace this',\n      literal:\n        'true false null _'\n    },\n    contains: [\n      {\n        className: 'string', // interpolate-able strings\n        begin: '\\'',\n        end: '\\'',\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          {\n            className: 'subst', // interpolation\n            begin: '\\\\$\\\\{',\n            end: '\\\\}'\n          },\n          {\n            className: 'subst', // interpolation\n            begin: '\\\\$',\n            end: /\\W\\}/\n          }\n        ]\n      },\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.C_NUMBER_MODE,\n      {\n        className: 'meta', // compiler meta\n        begin: '@:',\n        end: '$'\n      },\n      {\n        className: 'meta', // compiler conditionals\n        begin: '#',\n        end: '$',\n        keywords: {\n          'meta-keyword': 'if else elseif end error'\n        }\n      },\n      {\n        className: 'type', // function types\n        begin: ':[ \\t]*',\n        end: '[^A-Za-z0-9_ \\t\\\\->]',\n        excludeBegin: true,\n        excludeEnd: true,\n        relevance: 0\n      },\n      {\n        className: 'type', // types\n        begin: ':[ \\t]*',\n        end: '\\\\W',\n        excludeBegin: true,\n        excludeEnd: true\n      },\n      {\n        className: 'type', // instantiation\n        begin: 'new *',\n        end: '\\\\W',\n        excludeBegin: true,\n        excludeEnd: true\n      },\n      {\n        className: 'class', // enums\n        beginKeywords: 'enum',\n        end: '\\\\{',\n        contains: [hljs.TITLE_MODE]\n      },\n      {\n        className: 'class', // abstracts\n        beginKeywords: 'abstract',\n        end: '[\\\\{$]',\n        contains: [\n          {\n            className: 'type',\n            begin: '\\\\(',\n            end: '\\\\)',\n            excludeBegin: true,\n            excludeEnd: true\n          },\n          {\n            className: 'type',\n            begin: 'from +',\n            end: '\\\\W',\n            excludeBegin: true,\n            excludeEnd: true\n          },\n          {\n            className: 'type',\n            begin: 'to +',\n            end: '\\\\W',\n            excludeBegin: true,\n            excludeEnd: true\n          },\n          hljs.TITLE_MODE\n        ],\n        keywords: {\n          keyword: 'abstract from to'\n        }\n      },\n      {\n        className: 'class', // classes\n        begin: '\\\\b(class|interface) +',\n        end: '[\\\\{$]',\n        excludeEnd: true,\n        keywords: 'class interface',\n        contains: [\n          {\n            className: 'keyword',\n            begin: '\\\\b(extends|implements) +',\n            keywords: 'extends implements',\n            contains: [\n              {\n                className: 'type',\n                begin: hljs.IDENT_RE,\n                relevance: 0\n              }\n            ]\n          },\n          hljs.TITLE_MODE\n        ]\n      },\n      {\n        className: 'function',\n        beginKeywords: 'function',\n        end: '\\\\(',\n        excludeEnd: true,\n        illegal: '\\\\S',\n        contains: [hljs.TITLE_MODE]\n      }\n    ],\n    illegal: /<\\//\n  };\n}\n\nmodule.exports = haxe;\n\n};"],
"names":["shadow$provide","global","require","module","exports","haxe","hljs","name","aliases","keywords","keyword","built_in","literal","contains","className","begin","end","BACKSLASH_ESCAPE","QUOTE_STRING_MODE","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","C_NUMBER_MODE","excludeBegin","excludeEnd","relevance","beginKeywords","TITLE_MODE","IDENT_RE","illegal"]
}
