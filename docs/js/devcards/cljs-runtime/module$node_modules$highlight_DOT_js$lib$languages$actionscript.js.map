{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$actionscript.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,+DAAA,CAAoF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAqB5HC,QAASA,OAAM,CAAC,GAAGC,IAAJ,CAAU,CAEvB,MADeA,KAAKC,CAAAA,GAAL,CAAUC,CAAD,EAAO,CAVH,CAAA,CAUUA,CAXtC,CACkB,QAAlB,GAAI,MAUkCA,EAVtC,CAUsCA,CAVtC,CAUsCA,CAR5BC,CAAAA,MAHV,CAAgB,IAWe,OAAA,EAAA,CAAhB,CAA2BC,CAAAA,IAA3BC,CAAgC,EAAhCA,CADQ,CA4FzBR,MAAOC,CAAAA,OAAP,CA/EAQ,QAAqB,CAACC,IAAD,CAAO,CAW1B,MAAO,CACLC,KAAM,cADD,CAELC,QAAS,CAAE,IAAF,CAFJ,CAGLC,SAAU,CACRC,QAAS,kUADD;AAMRC,QAAS,2BAND,CAHL,CAWLC,SAAU,CACRN,IAAKO,CAAAA,gBADG,CAERP,IAAKQ,CAAAA,iBAFG,CAGRR,IAAKS,CAAAA,mBAHG,CAIRT,IAAKU,CAAAA,oBAJG,CAKRV,IAAKW,CAAAA,aALG,CAMR,CACEC,UAAW,OADb,CAEEC,cAAe,SAFjB,CAGEC,IAAK,IAHP,CAIER,SAAU,CAAEN,IAAKe,CAAAA,UAAP,CAJZ,CANQ,CAYR,CACEH,UAAW,OADb,CAEEC,cAAe,iBAFjB,CAGEC,IAAK,IAHP,CAIEE,WAAY,CAAA,CAJd,CAKEV,SAAU,CACR,CAAEO,cAAe,oBAAjB,CADQ,CAERb,IAAKe,CAAAA,UAFG,CALZ,CAZQ,CAsBR,CACEH,UAAW,MADb,CAEEC,cAAe,gBAFjB,CAGEC,IAAK,GAHP,CAIEX,SAAU,CAAE,eAAgB,gBAAlB,CAJZ,CAtBQ,CA4BR,CACES,UAAW,UADb;AAEEC,cAAe,UAFjB,CAGEC,IAAK,MAHP,CAIEE,WAAY,CAAA,CAJd,CAKEC,QAAS,IALX,CAMEX,SAAU,CACRN,IAAKe,CAAAA,UADG,CAER,CACEH,UAAW,QADb,CAEEM,MAAO,IAFT,CAGEJ,IAAK,IAHP,CAIER,SAAU,CACRN,IAAKO,CAAAA,gBADG,CAERP,IAAKQ,CAAAA,iBAFG,CAGRR,IAAKS,CAAAA,mBAHG,CAIRT,IAAKU,CAAAA,oBAJG,CA1DMS,CACxBP,UAAW,UADaO,CAExBD,MAAO,QAFiBC,CAGxBL,IANeM,0BAGSD,CAIxBE,UAAW,EAJaF,CA0DN,CAJZ,CAFQ,CAcR,CAAED,MAAO1B,MAAA,CAAO,MAAP,CApEiB8B,gCAoEjB,CAAT,CAdQ,CANZ,CA5BQ,CAmDRtB,IAAKuB,CAAAA,YAnDG,CAXL,CAgELN,QAAS,GAhEJ,CAXmB,CAlCgG;",
"sources":["node_modules/highlight_DOT_js/lib/languages/actionscript.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$actionscript\"] = function(global,require,module,exports) {\n/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: ActionScript\nAuthor: Alexander Myadzel <myadzel@gmail.com>\nCategory: scripting\nAudit: 2020\n*/\n\n/** @type LanguageFn */\nfunction actionscript(hljs) {\n  const IDENT_RE = /[a-zA-Z_$][a-zA-Z0-9_$]*/;\n  const IDENT_FUNC_RETURN_TYPE_RE = /([*]|[a-zA-Z_$][a-zA-Z0-9_$]*)/;\n\n  const AS3_REST_ARG_MODE = {\n    className: 'rest_arg',\n    begin: /[.]{3}/,\n    end: IDENT_RE,\n    relevance: 10\n  };\n\n  return {\n    name: 'ActionScript',\n    aliases: [ 'as' ],\n    keywords: {\n      keyword: 'as break case catch class const continue default delete do dynamic each ' +\n        'else extends final finally for function get if implements import in include ' +\n        'instanceof interface internal is namespace native new override package private ' +\n        'protected public return set static super switch this throw try typeof use var void ' +\n        'while with',\n      literal: 'true false null undefined'\n    },\n    contains: [\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.C_NUMBER_MODE,\n      {\n        className: 'class',\n        beginKeywords: 'package',\n        end: /\\{/,\n        contains: [ hljs.TITLE_MODE ]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'class interface',\n        end: /\\{/,\n        excludeEnd: true,\n        contains: [\n          { beginKeywords: 'extends implements' },\n          hljs.TITLE_MODE\n        ]\n      },\n      {\n        className: 'meta',\n        beginKeywords: 'import include',\n        end: /;/,\n        keywords: { 'meta-keyword': 'import include' }\n      },\n      {\n        className: 'function',\n        beginKeywords: 'function',\n        end: /[{;]/,\n        excludeEnd: true,\n        illegal: /\\S/,\n        contains: [\n          hljs.TITLE_MODE,\n          {\n            className: 'params',\n            begin: /\\(/,\n            end: /\\)/,\n            contains: [\n              hljs.APOS_STRING_MODE,\n              hljs.QUOTE_STRING_MODE,\n              hljs.C_LINE_COMMENT_MODE,\n              hljs.C_BLOCK_COMMENT_MODE,\n              AS3_REST_ARG_MODE\n            ]\n          },\n          { begin: concat(/:\\s*/, IDENT_FUNC_RETURN_TYPE_RE) }\n        ]\n      },\n      hljs.METHOD_GUARD\n    ],\n    illegal: /#/\n  };\n}\n\nmodule.exports = actionscript;\n\n};"],
"names":["shadow$provide","global","require","module","exports","concat","args","map","x","source","join","joined","actionscript","hljs","name","aliases","keywords","keyword","literal","contains","APOS_STRING_MODE","QUOTE_STRING_MODE","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","C_NUMBER_MODE","className","beginKeywords","end","TITLE_MODE","excludeEnd","illegal","begin","AS3_REST_ARG_MODE","IDENT_RE","relevance","IDENT_FUNC_RETURN_TYPE_RE","METHOD_GUARD"]
}
