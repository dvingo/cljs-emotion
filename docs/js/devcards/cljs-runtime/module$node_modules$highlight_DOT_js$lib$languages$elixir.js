shadow$provide.module$node_modules$highlight_DOT_js$lib$languages$elixir=function(global,require,module,exports){module.exports=function(hljs){const ELIXIR_KEYWORDS={$pattern:"[a-zA-Z_][a-zA-Z0-9_.]*(!|\\?)?",keyword:"and false then defined module in return redo retry end for true self when next until do begin unless nil break not case cond alias while ensure or include use alias fn quote require import with|0"},SUBST={className:"subst",begin:/#\{/,end:/\}/,keywords:ELIXIR_KEYWORDS},NUMBER={className:"number",
begin:"(\\b0o[0-7_]+)|(\\b0b[01_]+)|(\\b0x[0-9a-fA-F_]+)|(-?\\b[1-9][0-9_]*(\\.[0-9_]+([eE][-+]?[0-9]+)?)?)",relevance:0},LOWERCASE_SIGIL={className:"string",begin:"~[a-z](?\x3d[/|([{\x3c\"'])",contains:[{endsParent:!0,contains:[{contains:[hljs.BACKSLASH_ESCAPE,SUBST],variants:[{begin:/"/,end:/"/},{begin:/'/,end:/'/},{begin:/\//,end:/\//},{begin:/\|/,end:/\|/},{begin:/\(/,end:/\)/},{begin:/\[/,end:/\]/},{begin:/\{/,end:/\}/},{begin:/</,end:/>/}]}]}]},STRING={className:"string",contains:[hljs.BACKSLASH_ESCAPE,
SUBST],variants:[{begin:/"""/,end:/"""/},{begin:/'''/,end:/'''/},{begin:/~S"""/,end:/"""/,contains:[]},{begin:/~S"/,end:/"/,contains:[]},{begin:/~S'''/,end:/'''/,contains:[]},{begin:/~S'/,end:/'/,contains:[]},{begin:/'/,end:/'/},{begin:/"/,end:/"/}]},FUNCTION={className:"function",beginKeywords:"def defp defmacro",end:/\B\b/,contains:[hljs.inherit(hljs.TITLE_MODE,{begin:"[a-zA-Z_][a-zA-Z0-9_.]*(!|\\?)?",endsParent:!0})]},CLASS=hljs.inherit(FUNCTION,{className:"class",beginKeywords:"defimpl defmodule defprotocol defrecord",
end:/\bdo\b|$|;/});hljs=[STRING,{className:"string",begin:"~[A-Z](?\x3d[/|([{\x3c\"'])",contains:[{begin:/"/,end:/"/},{begin:/'/,end:/'/},{begin:/\//,end:/\//},{begin:/\|/,end:/\|/},{begin:/\(/,end:/\)/},{begin:/\[/,end:/\]/},{begin:/\{/,end:/\}/},{begin:/</,end:/>/}]},LOWERCASE_SIGIL,hljs.HASH_COMMENT_MODE,CLASS,FUNCTION,{begin:"::"},{className:"symbol",begin:":(?![\\s:])",contains:[STRING,{begin:"[a-zA-Z_]\\w*[!?\x3d]?|[-+~]@|\x3c\x3c|\x3e\x3e|\x3d~|\x3d\x3d\x3d?|\x3c\x3d\x3e|[\x3c\x3e]\x3d?|\\*\\*|[-/+%^\x26*~`|]|\\[\\]\x3d?"}],
relevance:0},{className:"symbol",begin:"[a-zA-Z_][a-zA-Z0-9_.]*(!|\\?)?:(?!:)",relevance:0},NUMBER,{className:"variable",begin:"(\\$\\W)|((\\$|@@?)(\\w+))"},{begin:"-\x3e"},{begin:"("+hljs.RE_STARTERS_RE+")\\s*",contains:[hljs.HASH_COMMENT_MODE,{begin:/\/: (?=\d+\s*[,\]])/,relevance:0,contains:[NUMBER]},{className:"regexp",illegal:"\\n",contains:[hljs.BACKSLASH_ESCAPE,SUBST],variants:[{begin:"/",end:"/[a-z]*"},{begin:"%r\\[",end:"\\][a-z]*"}]}],relevance:0}];SUBST.contains=hljs;return{name:"Elixir",
keywords:ELIXIR_KEYWORDS,contains:hljs}}}
//# sourceMappingURL=module$node_modules$highlight_DOT_js$lib$languages$elixir.js.map
