{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$livescript.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/highlight_DOT_js/lib/languages/livescript.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$livescript\"] = function(global,require,module,exports) {\nconst KEYWORDS = [\n  \"as\", // for exports\n  \"in\",\n  \"of\",\n  \"if\",\n  \"for\",\n  \"while\",\n  \"finally\",\n  \"var\",\n  \"new\",\n  \"function\",\n  \"do\",\n  \"return\",\n  \"void\",\n  \"else\",\n  \"break\",\n  \"catch\",\n  \"instanceof\",\n  \"with\",\n  \"throw\",\n  \"case\",\n  \"default\",\n  \"try\",\n  \"switch\",\n  \"continue\",\n  \"typeof\",\n  \"delete\",\n  \"let\",\n  \"yield\",\n  \"const\",\n  \"class\",\n  // JS handles these with a special rule\n  // \"get\",\n  // \"set\",\n  \"debugger\",\n  \"async\",\n  \"await\",\n  \"static\",\n  \"import\",\n  \"from\",\n  \"export\",\n  \"extends\"\n];\nconst LITERALS = [\n  \"true\",\n  \"false\",\n  \"null\",\n  \"undefined\",\n  \"NaN\",\n  \"Infinity\"\n];\n\nconst TYPES = [\n  \"Intl\",\n  \"DataView\",\n  \"Number\",\n  \"Math\",\n  \"Date\",\n  \"String\",\n  \"RegExp\",\n  \"Object\",\n  \"Function\",\n  \"Boolean\",\n  \"Error\",\n  \"Symbol\",\n  \"Set\",\n  \"Map\",\n  \"WeakSet\",\n  \"WeakMap\",\n  \"Proxy\",\n  \"Reflect\",\n  \"JSON\",\n  \"Promise\",\n  \"Float64Array\",\n  \"Int16Array\",\n  \"Int32Array\",\n  \"Int8Array\",\n  \"Uint16Array\",\n  \"Uint32Array\",\n  \"Float32Array\",\n  \"Array\",\n  \"Uint8Array\",\n  \"Uint8ClampedArray\",\n  \"ArrayBuffer\"\n];\n\nconst ERROR_TYPES = [\n  \"EvalError\",\n  \"InternalError\",\n  \"RangeError\",\n  \"ReferenceError\",\n  \"SyntaxError\",\n  \"TypeError\",\n  \"URIError\"\n];\n\nconst BUILT_IN_GLOBALS = [\n  \"setInterval\",\n  \"setTimeout\",\n  \"clearInterval\",\n  \"clearTimeout\",\n\n  \"require\",\n  \"exports\",\n\n  \"eval\",\n  \"isFinite\",\n  \"isNaN\",\n  \"parseFloat\",\n  \"parseInt\",\n  \"decodeURI\",\n  \"decodeURIComponent\",\n  \"encodeURI\",\n  \"encodeURIComponent\",\n  \"escape\",\n  \"unescape\"\n];\n\nconst BUILT_IN_VARIABLES = [\n  \"arguments\",\n  \"this\",\n  \"super\",\n  \"console\",\n  \"window\",\n  \"document\",\n  \"localStorage\",\n  \"module\",\n  \"global\" // Node.js\n];\n\nconst BUILT_INS = [].concat(\n  BUILT_IN_GLOBALS,\n  BUILT_IN_VARIABLES,\n  TYPES,\n  ERROR_TYPES\n);\n\n/*\nLanguage: LiveScript\nAuthor: Taneli Vatanen <taneli.vatanen@gmail.com>\nContributors: Jen Evers-Corvina <jen@sevvie.net>\nOrigin: coffeescript.js\nDescription: LiveScript is a programming language that transcompiles to JavaScript. For info about language see http://livescript.net/\nWebsite: https://livescript.net\nCategory: scripting\n*/\n\nfunction livescript(hljs) {\n  const LIVESCRIPT_BUILT_INS = [\n    'npm',\n    'print'\n  ];\n  const LIVESCRIPT_LITERALS = [\n    'yes',\n    'no',\n    'on',\n    'off',\n    'it',\n    'that',\n    'void'\n  ];\n  const LIVESCRIPT_KEYWORDS = [\n    'then',\n    'unless',\n    'until',\n    'loop',\n    'of',\n    'by',\n    'when',\n    'and',\n    'or',\n    'is',\n    'isnt',\n    'not',\n    'it',\n    'that',\n    'otherwise',\n    'from',\n    'to',\n    'til',\n    'fallthrough',\n    'case',\n    'enum',\n    'native',\n    'list',\n    'map',\n    '__hasProp',\n    '__extends',\n    '__slice',\n    '__bind',\n    '__indexOf'\n  ];\n  const KEYWORDS$1 = {\n    keyword: KEYWORDS.concat(LIVESCRIPT_KEYWORDS),\n    literal: LITERALS.concat(LIVESCRIPT_LITERALS),\n    built_in: BUILT_INS.concat(LIVESCRIPT_BUILT_INS)\n  };\n  const JS_IDENT_RE = '[A-Za-z$_](?:-[0-9A-Za-z$_]|[0-9A-Za-z$_])*';\n  const TITLE = hljs.inherit(hljs.TITLE_MODE, {\n    begin: JS_IDENT_RE\n  });\n  const SUBST = {\n    className: 'subst',\n    begin: /#\\{/,\n    end: /\\}/,\n    keywords: KEYWORDS$1\n  };\n  const SUBST_SIMPLE = {\n    className: 'subst',\n    begin: /#[A-Za-z$_]/,\n    end: /(?:-[0-9A-Za-z$_]|[0-9A-Za-z$_])*/,\n    keywords: KEYWORDS$1\n  };\n  const EXPRESSIONS = [\n    hljs.BINARY_NUMBER_MODE,\n    {\n      className: 'number',\n      begin: '(\\\\b0[xX][a-fA-F0-9_]+)|(\\\\b\\\\d(\\\\d|_\\\\d)*(\\\\.(\\\\d(\\\\d|_\\\\d)*)?)?(_*[eE]([-+]\\\\d(_\\\\d|\\\\d)*)?)?[_a-z]*)',\n      relevance: 0,\n      starts: {\n        end: '(\\\\s*/)?',\n        relevance: 0\n      } // a number tries to eat the following slash to prevent treating it as a regexp\n    },\n    {\n      className: 'string',\n      variants: [\n        {\n          begin: /'''/,\n          end: /'''/,\n          contains: [hljs.BACKSLASH_ESCAPE]\n        },\n        {\n          begin: /'/,\n          end: /'/,\n          contains: [hljs.BACKSLASH_ESCAPE]\n        },\n        {\n          begin: /\"\"\"/,\n          end: /\"\"\"/,\n          contains: [\n            hljs.BACKSLASH_ESCAPE,\n            SUBST,\n            SUBST_SIMPLE\n          ]\n        },\n        {\n          begin: /\"/,\n          end: /\"/,\n          contains: [\n            hljs.BACKSLASH_ESCAPE,\n            SUBST,\n            SUBST_SIMPLE\n          ]\n        },\n        {\n          begin: /\\\\/,\n          end: /(\\s|$)/,\n          excludeEnd: true\n        }\n      ]\n    },\n    {\n      className: 'regexp',\n      variants: [\n        {\n          begin: '//',\n          end: '//[gim]*',\n          contains: [\n            SUBST,\n            hljs.HASH_COMMENT_MODE\n          ]\n        },\n        {\n          // regex can't start with space to parse x / 2 / 3 as two divisions\n          // regex can't start with *, and it supports an \"illegal\" in the main mode\n          begin: /\\/(?![ *])(\\\\.|[^\\\\\\n])*?\\/[gim]*(?=\\W)/\n        }\n      ]\n    },\n    {\n      begin: '@' + JS_IDENT_RE\n    },\n    {\n      begin: '``',\n      end: '``',\n      excludeBegin: true,\n      excludeEnd: true,\n      subLanguage: 'javascript'\n    }\n  ];\n  SUBST.contains = EXPRESSIONS;\n\n  const PARAMS = {\n    className: 'params',\n    begin: '\\\\(',\n    returnBegin: true,\n    /* We need another contained nameless mode to not have every nested\n    pair of parens to be called \"params\" */\n    contains: [\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: KEYWORDS$1,\n        contains: ['self'].concat(EXPRESSIONS)\n      }\n    ]\n  };\n\n  const SYMBOLS = {\n    begin: '(#=>|=>|\\\\|>>|-?->|!->)'\n  };\n\n  return {\n    name: 'LiveScript',\n    aliases: ['ls'],\n    keywords: KEYWORDS$1,\n    illegal: /\\/\\*/,\n    contains: EXPRESSIONS.concat([\n      hljs.COMMENT('\\\\/\\\\*', '\\\\*\\\\/'),\n      hljs.HASH_COMMENT_MODE,\n      SYMBOLS, // relevance booster\n      {\n        className: 'function',\n        contains: [\n          TITLE,\n          PARAMS\n        ],\n        returnBegin: true,\n        variants: [\n          {\n            begin: '(' + JS_IDENT_RE + '\\\\s*(?:=|:=)\\\\s*)?(\\\\(.*\\\\)\\\\s*)?\\\\B->\\\\*?',\n            end: '->\\\\*?'\n          },\n          {\n            begin: '(' + JS_IDENT_RE + '\\\\s*(?:=|:=)\\\\s*)?!?(\\\\(.*\\\\)\\\\s*)?\\\\B[-~]{1,2}>\\\\*?',\n            end: '[-~]{1,2}>\\\\*?'\n          },\n          {\n            begin: '(' + JS_IDENT_RE + '\\\\s*(?:=|:=)\\\\s*)?(\\\\(.*\\\\)\\\\s*)?\\\\B!?[-~]{1,2}>\\\\*?',\n            end: '!?[-~]{1,2}>\\\\*?'\n          }\n        ]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'class',\n        end: '$',\n        illegal: /[:=\"\\[\\]]/,\n        contains: [\n          {\n            beginKeywords: 'extends',\n            endsWithParent: true,\n            illegal: /[:=\"\\[\\]]/,\n            contains: [TITLE]\n          },\n          TITLE\n        ]\n      },\n      {\n        begin: JS_IDENT_RE + ':',\n        end: ':',\n        returnBegin: true,\n        returnEnd: true,\n        relevance: 0\n      }\n    ])\n  };\n}\n\nmodule.exports = livescript;\n\n};"],
"names":["shadow$provide","global","require","module","exports","KEYWORDS","LITERALS","BUILT_INS","concat","BUILT_IN_GLOBALS","BUILT_IN_VARIABLES","TYPES","ERROR_TYPES","livescript","hljs","KEYWORDS$1","keyword","LIVESCRIPT_KEYWORDS","literal","LIVESCRIPT_LITERALS","built_in","LIVESCRIPT_BUILT_INS","TITLE","inherit","TITLE_MODE","begin","JS_IDENT_RE","SUBST","className","end","keywords","SUBST_SIMPLE","EXPRESSIONS","BINARY_NUMBER_MODE","relevance","starts","variants","contains","BACKSLASH_ESCAPE","excludeEnd","HASH_COMMENT_MODE","excludeBegin","subLanguage","PARAMS","returnBegin","name","aliases","illegal","COMMENT","SYMBOLS","beginKeywords","endsWithParent","returnEnd"]
}
