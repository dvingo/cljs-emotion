{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$vbscript.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,2DAAA,CAAgF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAqBxHC,QAASA,OAAM,CAAC,GAAGC,IAAJ,CAAU,CAEvB,MADeA,KAAKC,CAAAA,GAAL,CAAUC,CAAD,EAAcA,CAXtC,CACkB,QAAlB,GAAI,MAUkCA,EAVtC,CAUsCA,CAVtC,CAUsCA,CAR5BC,CAAAA,MAHV,CAAgB,IAWD,CAA2BC,CAAAA,IAA3BC,CAAgC,EAAhCA,CADQ,CAYzBC,QAASA,OAAM,CAAC,GAAGN,IAAJ,CAAU,CAEvB,MADe,GACf,CADqBA,IAAKC,CAAAA,GAAL,CAAUC,CAAD,EAAcA,CAvB5C,CACkB,QAAlB,GAAI,MAsBwCA,EAtB5C,CAsB4CA,CAtB5C,CAsB4CA,CApBlCC,CAAAA,MAHV,CAAgB,IAuBK,CAA2BC,CAAAA,IAA3B,CAAgC,GAAhC,CACrB,CAD4D,GADrC,CA4EzBP,MAAOC,CAAAA,OAAP,CA7DAS,QAAiB,CAACC,IAAD,CAAO,CACtB,MAAMC,mBAAqB,mpBAAA,CAAA,KAAA,CAAA,GAAA,CA8B3B;MAAO,CACLC,KAAM,UADD,CAELC,QAAS,CAAC,KAAD,CAFJ,CAGLC,iBAAkB,CAAA,CAHb,CAILC,SAAU,CACRC,QACE,kVAFM,CAMRC,SA9BqBC,iHAAAA,CAAAA,KAAAA,CAAAA,GAAAA,CAwBb;AAORC,QACE,+BARM,CAJL,CAcLC,QAAS,IAdJ,CAeLC,SAAU,CAxBUC,CACpBC,MAAOtB,MAAA,CAAOO,MAAA,CAAO,GAAGG,kBAAV,CAAP,CAAsC,SAAtC,CADaW,CAGpBE,UAAU,CAHUF,CAIpBP,SAAU,CACRE,SAAUN,kBADF,CAJUW,CAwBV,CAERZ,IAAKe,CAAAA,OAAL,CAAaf,IAAKgB,CAAAA,iBAAlB,CAAqC,CAACL,SAAU,CAAC,CAACE,MAAO,IAAR,CAAD,CAAX,CAArC,CAFQ,CAGRb,IAAKiB,CAAAA,OAAL,CACE,GADF,CAEE,GAFF,CAGE,CACEH,UAAW,CADb,CAHF,CAHQ,CAURd,IAAKkB,CAAAA,aAVG,CAfL,CA/Be,CAhDgG;",
"sources":["node_modules/highlight_DOT_js/lib/languages/vbscript.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$vbscript\"] = function(global,require,module,exports) {\n/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/**\n * Any of the passed expresssions may match\n *\n * Creates a huge this | this | that | that match\n * @param {(RegExp | string)[] } args\n * @returns {string}\n */\nfunction either(...args) {\n  const joined = '(' + args.map((x) => source(x)).join(\"|\") + \")\";\n  return joined;\n}\n\n/*\nLanguage: VBScript\nDescription: VBScript (\"Microsoft Visual Basic Scripting Edition\") is an Active Scripting language developed by Microsoft that is modeled on Visual Basic.\nAuthor: Nikita Ledyaev <lenikita@yandex.ru>\nContributors: Michal Gabrukiewicz <mgabru@gmail.com>\nWebsite: https://en.wikipedia.org/wiki/VBScript\nCategory: scripting\n*/\n\n/** @type LanguageFn */\nfunction vbscript(hljs) {\n  const BUILT_IN_FUNCTIONS = ('lcase month vartype instrrev ubound setlocale getobject rgb getref string ' +\n  'weekdayname rnd dateadd monthname now day minute isarray cbool round formatcurrency ' +\n  'conversions csng timevalue second year space abs clng timeserial fixs len asc ' +\n  'isempty maths dateserial atn timer isobject filter weekday datevalue ccur isdate ' +\n  'instr datediff formatdatetime replace isnull right sgn array snumeric log cdbl hex ' +\n  'chr lbound msgbox ucase getlocale cos cdate cbyte rtrim join hour oct typename trim ' +\n  'strcomp int createobject loadpicture tan formatnumber mid ' +\n  'split  cint sin datepart ltrim sqr ' +\n  'time derived eval date formatpercent exp inputbox left ascw ' +\n  'chrw regexp cstr err').split(\" \");\n  const BUILT_IN_OBJECTS = [\n    \"server\",\n    \"response\",\n    \"request\",\n    // take no arguments so can be called without ()\n    \"scriptengine\",\n    \"scriptenginebuildversion\",\n    \"scriptengineminorversion\",\n    \"scriptenginemajorversion\"\n  ];\n\n  const BUILT_IN_CALL = {\n    begin: concat(either(...BUILT_IN_FUNCTIONS), \"\\\\s*\\\\(\"),\n    // relevance 0 because this is acting as a beginKeywords really\n    relevance:0,\n    keywords: {\n      built_in: BUILT_IN_FUNCTIONS\n    }\n  };\n\n  return {\n    name: 'VBScript',\n    aliases: ['vbs'],\n    case_insensitive: true,\n    keywords: {\n      keyword:\n        'call class const dim do loop erase execute executeglobal exit for each next function ' +\n        'if then else on error option explicit new private property let get public randomize ' +\n        'redim rem select case set stop sub while wend with end to elseif is or xor and not ' +\n        'class_initialize class_terminate default preserve in me byval byref step resume goto',\n      built_in: BUILT_IN_OBJECTS,\n      literal:\n        'true false null nothing empty'\n    },\n    illegal: '//',\n    contains: [\n      BUILT_IN_CALL,\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {contains: [{begin: '\"\"'}]}),\n      hljs.COMMENT(\n        /'/,\n        /$/,\n        {\n          relevance: 0\n        }\n      ),\n      hljs.C_NUMBER_MODE\n    ]\n  };\n}\n\nmodule.exports = vbscript;\n\n};"],
"names":["shadow$provide","global","require","module","exports","concat","args","map","x","source","join","joined","either","vbscript","hljs","BUILT_IN_FUNCTIONS","name","aliases","case_insensitive","keywords","keyword","built_in","BUILT_IN_OBJECTS","literal","illegal","contains","BUILT_IN_CALL","begin","relevance","inherit","QUOTE_STRING_MODE","COMMENT","C_NUMBER_MODE"]
}
