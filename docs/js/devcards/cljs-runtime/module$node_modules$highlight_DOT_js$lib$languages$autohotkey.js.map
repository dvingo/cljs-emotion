{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$autohotkey.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,6DAAA,CAAkF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAoF1HD,MAAOC,CAAAA,OAAP,CA3EAC,QAAmB,CAACC,IAAD,CAAO,CACxB,MAAMC,gBAAkB,CACtBC,MAAO,WADe,CAIxB,OAAO,CACLC,KAAM,YADD,CAELC,iBAAkB,CAAA,CAFb,CAGLC,QAAS,CAAC,KAAD,CAHJ,CAILC,SAAU,CACRC,QAAS,sKADD,CAERC,QAAS,uBAFD,CAGRC,SAAU,2CAHF,CAJL;AASLC,SAAU,CACRT,eADQ,CAERD,IAAKW,CAAAA,OAAL,CAAaX,IAAKY,CAAAA,iBAAlB,CAAqC,CACnCF,SAAU,CAACT,eAAD,CADyB,CAArC,CAFQ,CAKRD,IAAKa,CAAAA,OAAL,CAAa,GAAb,CAAkB,GAAlB,CAAuB,CACrBC,UAAW,CADU,CAAvB,CALQ,CAQRd,IAAKe,CAAAA,oBARG,CASR,CACEC,UAAW,QADb,CAEEd,MAAOF,IAAKiB,CAAAA,SAFd,CAGEH,UAAW,CAHb,CATQ,CAcR,CAIEE,UAAW,UAJb,CAKEd,MAAO,oBALT,CAdQ,CAqBR,CACEc,UAAW,UADb,CAEEd,MAAO,oBAFT,CArBQ,CA0BR,CAIEc,UAAW,OAJb,CAKEE,SAAU,CACR,CACEhB,MAAO,sBADT,CADQ,CAIR,CACEA,MAAO,qBADT,CAIEY,UAAW,CAJb,CAJQ,CALZ,CA1BQ,CA2CR,CACEE,UAAW,MADb,CAEEd,MAAO,YAFT,CAGEiB,IAAK,GAHP,CAIEL,UAAW,CAJb,CA3CQ,CAiDR,CACEE,UAAW,UADb,CAEEd,MAAO,gBAFT,CAjDQ;AAqDR,CAEEA,MAAO,QAFT,CArDQ,CATL,CALiB,CATgG;",
"sources":["node_modules/highlight_DOT_js/lib/languages/autohotkey.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$autohotkey\"] = function(global,require,module,exports) {\n/*\nLanguage: AutoHotkey\nAuthor: Seongwon Lee <dlimpid@gmail.com>\nDescription: AutoHotkey language definition\nCategory: scripting\n*/\n\n/** @type LanguageFn */\nfunction autohotkey(hljs) {\n  const BACKTICK_ESCAPE = {\n    begin: '`[\\\\s\\\\S]'\n  };\n\n  return {\n    name: 'AutoHotkey',\n    case_insensitive: true,\n    aliases: ['ahk'],\n    keywords: {\n      keyword: 'Break Continue Critical Exit ExitApp Gosub Goto New OnExit Pause return SetBatchLines SetTimer Suspend Thread Throw Until ahk_id ahk_class ahk_pid ahk_exe ahk_group',\n      literal: 'true false NOT AND OR',\n      built_in: 'ComSpec Clipboard ClipboardAll ErrorLevel'\n    },\n    contains: [\n      BACKTICK_ESCAPE,\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {\n        contains: [BACKTICK_ESCAPE]\n      }),\n      hljs.COMMENT(';', '$', {\n        relevance: 0\n      }),\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'number',\n        begin: hljs.NUMBER_RE,\n        relevance: 0\n      },\n      {\n        // subst would be the most accurate however fails the point of\n        // highlighting. variable is comparably the most accurate that actually\n        // has some effect\n        className: 'variable',\n        begin: '%[a-zA-Z0-9#_$@]+%'\n      },\n      {\n        className: 'built_in',\n        begin: '^\\\\s*\\\\w+\\\\s*(,|%)'\n        // I don't really know if this is totally relevant\n      },\n      {\n        // symbol would be most accurate however is highlighted just like\n        // built_in and that makes up a lot of AutoHotkey code meaning that it\n        // would fail to highlight anything\n        className: 'title',\n        variants: [\n          {\n            begin: '^[^\\\\n\";]+::(?!=)'\n          },\n          {\n            begin: '^[^\\\\n\";]+:(?!=)',\n            // zero relevance as it catches a lot of things\n            // followed by a single ':' in many languages\n            relevance: 0\n          }\n        ]\n      },\n      {\n        className: 'meta',\n        begin: '^\\\\s*#\\\\w+',\n        end: '$',\n        relevance: 0\n      },\n      {\n        className: 'built_in',\n        begin: 'A_[a-zA-Z0-9]+'\n      },\n      {\n        // consecutive commas, not for highlighting but just for relevance\n        begin: ',\\\\s*,'\n      }\n    ]\n  };\n}\n\nmodule.exports = autohotkey;\n\n};"],
"names":["shadow$provide","global","require","module","exports","autohotkey","hljs","BACKTICK_ESCAPE","begin","name","case_insensitive","aliases","keywords","keyword","literal","built_in","contains","inherit","QUOTE_STRING_MODE","COMMENT","relevance","C_BLOCK_COMMENT_MODE","className","NUMBER_RE","variants","end"]
}
