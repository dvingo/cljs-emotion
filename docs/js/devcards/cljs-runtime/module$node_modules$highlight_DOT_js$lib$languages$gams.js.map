{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$gams.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/highlight_DOT_js/lib/languages/gams.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$gams\"] = function(global,require,module,exports) {\n/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction anyNumberOfTimes(re) {\n  return concat('(', re, ')*');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/** @type LanguageFn */\nfunction gams(hljs) {\n  const KEYWORDS = {\n    keyword:\n      'abort acronym acronyms alias all and assign binary card diag display ' +\n      'else eq file files for free ge gt if integer le loop lt maximizing ' +\n      'minimizing model models ne negative no not option options or ord ' +\n      'positive prod put putpage puttl repeat sameas semicont semiint smax ' +\n      'smin solve sos1 sos2 sum system table then until using while xor yes',\n    literal:\n      'eps inf na',\n    built_in:\n      'abs arccos arcsin arctan arctan2 Beta betaReg binomial ceil centropy ' +\n      'cos cosh cvPower div div0 eDist entropy errorf execSeed exp fact ' +\n      'floor frac gamma gammaReg log logBeta logGamma log10 log2 mapVal max ' +\n      'min mod ncpCM ncpF ncpVUpow ncpVUsin normal pi poly power ' +\n      'randBinomial randLinear randTriangle round rPower sigmoid sign ' +\n      'signPower sin sinh slexp sllog10 slrec sqexp sqlog10 sqr sqrec sqrt ' +\n      'tan tanh trunc uniform uniformInt vcPower bool_and bool_eqv bool_imp ' +\n      'bool_not bool_or bool_xor ifThen rel_eq rel_ge rel_gt rel_le rel_lt ' +\n      'rel_ne gday gdow ghour gleap gmillisec gminute gmonth gsecond gyear ' +\n      'jdate jnow jstart jtime errorLevel execError gamsRelease gamsVersion ' +\n      'handleCollect handleDelete handleStatus handleSubmit heapFree ' +\n      'heapLimit heapSize jobHandle jobKill jobStatus jobTerminate ' +\n      'licenseLevel licenseStatus maxExecError sleep timeClose timeComp ' +\n      'timeElapsed timeExec timeStart'\n  };\n  const PARAMS = {\n    className: 'params',\n    begin: /\\(/,\n    end: /\\)/,\n    excludeBegin: true,\n    excludeEnd: true\n  };\n  const SYMBOLS = {\n    className: 'symbol',\n    variants: [\n      {\n        begin: /=[lgenxc]=/\n      },\n      {\n        begin: /\\$/\n      }\n    ]\n  };\n  const QSTR = { // One-line quoted comment string\n    className: 'comment',\n    variants: [\n      {\n        begin: '\\'',\n        end: '\\''\n      },\n      {\n        begin: '\"',\n        end: '\"'\n      }\n    ],\n    illegal: '\\\\n',\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  const ASSIGNMENT = {\n    begin: '/',\n    end: '/',\n    keywords: KEYWORDS,\n    contains: [\n      QSTR,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.APOS_STRING_MODE,\n      hljs.C_NUMBER_MODE\n    ]\n  };\n  const COMMENT_WORD = /[a-z0-9&#*=?@\\\\><:,()$[\\]_.{}!+%^-]+/;\n  const DESCTEXT = { // Parameter/set/variable description text\n    begin: /[a-z][a-z0-9_]*(\\([a-z0-9_, ]*\\))?[ \\t]+/,\n    excludeBegin: true,\n    end: '$',\n    endsWithParent: true,\n    contains: [\n      QSTR,\n      ASSIGNMENT,\n      {\n        className: 'comment',\n        // one comment word, then possibly more\n        begin: concat(\n          COMMENT_WORD,\n          // [ ] because \\s would be too broad (matching newlines)\n          anyNumberOfTimes(concat(/[ ]+/, COMMENT_WORD))\n        ),\n        relevance: 0\n      }\n    ]\n  };\n\n  return {\n    name: 'GAMS',\n    aliases: ['gms'],\n    case_insensitive: true,\n    keywords: KEYWORDS,\n    contains: [\n      hljs.COMMENT(/^\\$ontext/, /^\\$offtext/),\n      {\n        className: 'meta',\n        begin: '^\\\\$[a-z0-9]+',\n        end: '$',\n        returnBegin: true,\n        contains: [\n          {\n            className: 'meta-keyword',\n            begin: '^\\\\$[a-z0-9]+'\n          }\n        ]\n      },\n      hljs.COMMENT('^\\\\*', '$'),\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.APOS_STRING_MODE,\n      // Declarations\n      {\n        beginKeywords:\n          'set sets parameter parameters variable variables ' +\n          'scalar scalars equation equations',\n        end: ';',\n        contains: [\n          hljs.COMMENT('^\\\\*', '$'),\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          hljs.QUOTE_STRING_MODE,\n          hljs.APOS_STRING_MODE,\n          ASSIGNMENT,\n          DESCTEXT\n        ]\n      },\n      { // table environment\n        beginKeywords: 'table',\n        end: ';',\n        returnBegin: true,\n        contains: [\n          { // table header row\n            beginKeywords: 'table',\n            end: '$',\n            contains: [DESCTEXT]\n          },\n          hljs.COMMENT('^\\\\*', '$'),\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          hljs.QUOTE_STRING_MODE,\n          hljs.APOS_STRING_MODE,\n          hljs.C_NUMBER_MODE\n          // Table does not contain DESCTEXT or ASSIGNMENT\n        ]\n      },\n      // Function definitions\n      {\n        className: 'function',\n        begin: /^[a-z][a-z0-9_,\\-+' ()$]+\\.{2}/,\n        returnBegin: true,\n        contains: [\n          { // Function title\n            className: 'title',\n            begin: /^[a-z0-9_]+/\n          },\n          PARAMS,\n          SYMBOLS\n        ]\n      },\n      hljs.C_NUMBER_MODE,\n      SYMBOLS\n    ]\n  };\n}\n\nmodule.exports = gams;\n\n};"],
"names":["shadow$provide","global","require","module","exports","concat","args","map","x","source","join","joined","gams","hljs","KEYWORDS","keyword","literal","built_in","SYMBOLS","className","variants","begin","QSTR","end","illegal","contains","BACKSLASH_ESCAPE","ASSIGNMENT","keywords","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","QUOTE_STRING_MODE","APOS_STRING_MODE","C_NUMBER_MODE","COMMENT_WORD","DESCTEXT","excludeBegin","endsWithParent","re","relevance","name","aliases","case_insensitive","COMMENT","returnBegin","beginKeywords","PARAMS","excludeEnd"]
}
