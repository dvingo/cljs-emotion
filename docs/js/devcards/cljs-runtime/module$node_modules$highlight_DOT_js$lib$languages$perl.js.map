{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$perl.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/highlight_DOT_js/lib/languages/perl.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$perl\"] = function(global,require,module,exports) {\n/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/**\n * Any of the passed expresssions may match\n *\n * Creates a huge this | this | that | that match\n * @param {(RegExp | string)[] } args\n * @returns {string}\n */\nfunction either(...args) {\n  const joined = '(' + args.map((x) => source(x)).join(\"|\") + \")\";\n  return joined;\n}\n\n/*\nLanguage: Perl\nAuthor: Peter Leonov <gojpeg@yandex.ru>\nWebsite: https://www.perl.org\nCategory: common\n*/\n\n/** @type LanguageFn */\nfunction perl(hljs) {\n  const KEYWORDS = [\n    'abs',\n    'accept',\n    'alarm',\n    'and',\n    'atan2',\n    'bind',\n    'binmode',\n    'bless',\n    'break',\n    'caller',\n    'chdir',\n    'chmod',\n    'chomp',\n    'chop',\n    'chown',\n    'chr',\n    'chroot',\n    'close',\n    'closedir',\n    'connect',\n    'continue',\n    'cos',\n    'crypt',\n    'dbmclose',\n    'dbmopen',\n    'defined',\n    'delete',\n    'die',\n    'do',\n    'dump',\n    'each',\n    'else',\n    'elsif',\n    'endgrent',\n    'endhostent',\n    'endnetent',\n    'endprotoent',\n    'endpwent',\n    'endservent',\n    'eof',\n    'eval',\n    'exec',\n    'exists',\n    'exit',\n    'exp',\n    'fcntl',\n    'fileno',\n    'flock',\n    'for',\n    'foreach',\n    'fork',\n    'format',\n    'formline',\n    'getc',\n    'getgrent',\n    'getgrgid',\n    'getgrnam',\n    'gethostbyaddr',\n    'gethostbyname',\n    'gethostent',\n    'getlogin',\n    'getnetbyaddr',\n    'getnetbyname',\n    'getnetent',\n    'getpeername',\n    'getpgrp',\n    'getpriority',\n    'getprotobyname',\n    'getprotobynumber',\n    'getprotoent',\n    'getpwent',\n    'getpwnam',\n    'getpwuid',\n    'getservbyname',\n    'getservbyport',\n    'getservent',\n    'getsockname',\n    'getsockopt',\n    'given',\n    'glob',\n    'gmtime',\n    'goto',\n    'grep',\n    'gt',\n    'hex',\n    'if',\n    'index',\n    'int',\n    'ioctl',\n    'join',\n    'keys',\n    'kill',\n    'last',\n    'lc',\n    'lcfirst',\n    'length',\n    'link',\n    'listen',\n    'local',\n    'localtime',\n    'log',\n    'lstat',\n    'lt',\n    'ma',\n    'map',\n    'mkdir',\n    'msgctl',\n    'msgget',\n    'msgrcv',\n    'msgsnd',\n    'my',\n    'ne',\n    'next',\n    'no',\n    'not',\n    'oct',\n    'open',\n    'opendir',\n    'or',\n    'ord',\n    'our',\n    'pack',\n    'package',\n    'pipe',\n    'pop',\n    'pos',\n    'print',\n    'printf',\n    'prototype',\n    'push',\n    'q|0',\n    'qq',\n    'quotemeta',\n    'qw',\n    'qx',\n    'rand',\n    'read',\n    'readdir',\n    'readline',\n    'readlink',\n    'readpipe',\n    'recv',\n    'redo',\n    'ref',\n    'rename',\n    'require',\n    'reset',\n    'return',\n    'reverse',\n    'rewinddir',\n    'rindex',\n    'rmdir',\n    'say',\n    'scalar',\n    'seek',\n    'seekdir',\n    'select',\n    'semctl',\n    'semget',\n    'semop',\n    'send',\n    'setgrent',\n    'sethostent',\n    'setnetent',\n    'setpgrp',\n    'setpriority',\n    'setprotoent',\n    'setpwent',\n    'setservent',\n    'setsockopt',\n    'shift',\n    'shmctl',\n    'shmget',\n    'shmread',\n    'shmwrite',\n    'shutdown',\n    'sin',\n    'sleep',\n    'socket',\n    'socketpair',\n    'sort',\n    'splice',\n    'split',\n    'sprintf',\n    'sqrt',\n    'srand',\n    'stat',\n    'state',\n    'study',\n    'sub',\n    'substr',\n    'symlink',\n    'syscall',\n    'sysopen',\n    'sysread',\n    'sysseek',\n    'system',\n    'syswrite',\n    'tell',\n    'telldir',\n    'tie',\n    'tied',\n    'time',\n    'times',\n    'tr',\n    'truncate',\n    'uc',\n    'ucfirst',\n    'umask',\n    'undef',\n    'unless',\n    'unlink',\n    'unpack',\n    'unshift',\n    'untie',\n    'until',\n    'use',\n    'utime',\n    'values',\n    'vec',\n    'wait',\n    'waitpid',\n    'wantarray',\n    'warn',\n    'when',\n    'while',\n    'write',\n    'x|0',\n    'xor',\n    'y|0'\n  ];\n\n  // https://perldoc.perl.org/perlre#Modifiers\n  const REGEX_MODIFIERS = /[dualxmsipngr]{0,12}/; // aa and xx are valid, making max length 12\n  const PERL_KEYWORDS = {\n    $pattern: /[\\w.]+/,\n    keyword: KEYWORDS.join(\" \")\n  };\n  const SUBST = {\n    className: 'subst',\n    begin: '[$@]\\\\{',\n    end: '\\\\}',\n    keywords: PERL_KEYWORDS\n  };\n  const METHOD = {\n    begin: /->\\{/,\n    end: /\\}/\n    // contains defined later\n  };\n  const VAR = {\n    variants: [\n      {\n        begin: /\\$\\d/\n      },\n      {\n        begin: concat(\n          /[$%@](\\^\\w\\b|#\\w+(::\\w+)*|\\{\\w+\\}|\\w+(::\\w*)*)/,\n          // negative look-ahead tries to avoid matching patterns that are not\n          // Perl at all like $ident$, @ident@, etc.\n          `(?![A-Za-z])(?![@$%])`\n        )\n      },\n      {\n        begin: /[$%@][^\\s\\w{]/,\n        relevance: 0\n      }\n    ]\n  };\n  const STRING_CONTAINS = [\n    hljs.BACKSLASH_ESCAPE,\n    SUBST,\n    VAR\n  ];\n  const REGEX_DELIMS = [\n    /!/,\n    /\\//,\n    /\\|/,\n    /\\?/,\n    /'/,\n    /\"/, // valid but infrequent and weird\n    /#/ // valid but infrequent and weird\n  ];\n  /**\n   * @param {string|RegExp} prefix\n   * @param {string|RegExp} open\n   * @param {string|RegExp} close\n   */\n  const PAIRED_DOUBLE_RE = (prefix, open, close = '\\\\1') => {\n    const middle = (close === '\\\\1')\n      ? close\n      : concat(close, open);\n    return concat(\n      concat(\"(?:\", prefix, \")\"),\n      open,\n      /(?:\\\\.|[^\\\\\\/])*?/,\n      middle,\n      /(?:\\\\.|[^\\\\\\/])*?/,\n      close,\n      REGEX_MODIFIERS\n    );\n  };\n  /**\n   * @param {string|RegExp} prefix\n   * @param {string|RegExp} open\n   * @param {string|RegExp} close\n   */\n  const PAIRED_RE = (prefix, open, close) => {\n    return concat(\n      concat(\"(?:\", prefix, \")\"),\n      open,\n      /(?:\\\\.|[^\\\\\\/])*?/,\n      close,\n      REGEX_MODIFIERS\n    );\n  };\n  const PERL_DEFAULT_CONTAINS = [\n    VAR,\n    hljs.HASH_COMMENT_MODE,\n    hljs.COMMENT(\n      /^=\\w/,\n      /=cut/,\n      {\n        endsWithParent: true\n      }\n    ),\n    METHOD,\n    {\n      className: 'string',\n      contains: STRING_CONTAINS,\n      variants: [\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\(',\n          end: '\\\\)',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\[',\n          end: '\\\\]',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\{',\n          end: '\\\\}',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\|',\n          end: '\\\\|',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*<',\n          end: '>',\n          relevance: 5\n        },\n        {\n          begin: 'qw\\\\s+q',\n          end: 'q',\n          relevance: 5\n        },\n        {\n          begin: '\\'',\n          end: '\\'',\n          contains: [ hljs.BACKSLASH_ESCAPE ]\n        },\n        {\n          begin: '\"',\n          end: '\"'\n        },\n        {\n          begin: '`',\n          end: '`',\n          contains: [ hljs.BACKSLASH_ESCAPE ]\n        },\n        {\n          begin: /\\{\\w+\\}/,\n          relevance: 0\n        },\n        {\n          begin: '-?\\\\w+\\\\s*=>',\n          relevance: 0\n        }\n      ]\n    },\n    {\n      className: 'number',\n      begin: '(\\\\b0[0-7_]+)|(\\\\b0x[0-9a-fA-F_]+)|(\\\\b[1-9][0-9_]*(\\\\.[0-9_]+)?)|[0_]\\\\b',\n      relevance: 0\n    },\n    { // regexp container\n      begin: '(\\\\/\\\\/|' + hljs.RE_STARTERS_RE + '|\\\\b(split|return|print|reverse|grep)\\\\b)\\\\s*',\n      keywords: 'split return print reverse grep',\n      relevance: 0,\n      contains: [\n        hljs.HASH_COMMENT_MODE,\n        {\n          className: 'regexp',\n          variants: [\n            // allow matching common delimiters\n            { begin: PAIRED_DOUBLE_RE(\"s|tr|y\", either(...REGEX_DELIMS)) },\n            // and then paired delmis\n            { begin: PAIRED_DOUBLE_RE(\"s|tr|y\", \"\\\\(\", \"\\\\)\") },\n            { begin: PAIRED_DOUBLE_RE(\"s|tr|y\", \"\\\\[\", \"\\\\]\") },\n            { begin: PAIRED_DOUBLE_RE(\"s|tr|y\", \"\\\\{\", \"\\\\}\") }\n          ],\n          relevance: 2\n        },\n        {\n          className: 'regexp',\n          variants: [\n            {\n              // could be a comment in many languages so do not count\n              // as relevant\n              begin: /(m|qr)\\/\\//,\n              relevance: 0\n            },\n            // prefix is optional with /regex/\n            { begin: PAIRED_RE(\"(?:m|qr)?\", /\\//, /\\//)},\n            // allow matching common delimiters\n            { begin: PAIRED_RE(\"m|qr\", either(...REGEX_DELIMS), /\\1/)},\n            // allow common paired delmins\n            { begin: PAIRED_RE(\"m|qr\", /\\(/, /\\)/)},\n            { begin: PAIRED_RE(\"m|qr\", /\\[/, /\\]/)},\n            { begin: PAIRED_RE(\"m|qr\", /\\{/, /\\}/)}\n          ]\n        }\n      ]\n    },\n    {\n      className: 'function',\n      beginKeywords: 'sub',\n      end: '(\\\\s*\\\\(.*?\\\\))?[;{]',\n      excludeEnd: true,\n      relevance: 5,\n      contains: [ hljs.TITLE_MODE ]\n    },\n    {\n      begin: '-\\\\w\\\\b',\n      relevance: 0\n    },\n    {\n      begin: \"^__DATA__$\",\n      end: \"^__END__$\",\n      subLanguage: 'mojolicious',\n      contains: [\n        {\n          begin: \"^@@.*\",\n          end: \"$\",\n          className: \"comment\"\n        }\n      ]\n    }\n  ];\n  SUBST.contains = PERL_DEFAULT_CONTAINS;\n  METHOD.contains = PERL_DEFAULT_CONTAINS;\n\n  return {\n    name: 'Perl',\n    aliases: [\n      'pl',\n      'pm'\n    ],\n    keywords: PERL_KEYWORDS,\n    contains: PERL_DEFAULT_CONTAINS\n  };\n}\n\nmodule.exports = perl;\n\n};"],
"names":["shadow$provide","global","require","module","exports","concat","args","map","x","source","join","joined","either","perl","hljs","REGEX_MODIFIERS","PERL_KEYWORDS","$pattern","keyword","SUBST","className","begin","end","keywords","METHOD","VAR","variants","relevance","STRING_CONTAINS","BACKSLASH_ESCAPE","REGEX_DELIMS","PAIRED_DOUBLE_RE","prefix","open","close","middle","PAIRED_RE","PERL_DEFAULT_CONTAINS","HASH_COMMENT_MODE","COMMENT","endsWithParent","contains","RE_STARTERS_RE","beginKeywords","excludeEnd","TITLE_MODE","subLanguage","name","aliases"]
}
