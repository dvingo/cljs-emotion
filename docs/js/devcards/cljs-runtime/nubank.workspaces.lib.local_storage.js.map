{"version":3,"sources":["nubank/workspaces/lib/local_storage.cljs"],"mappings":"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","names":["nubank.workspaces.lib.local-storage/local-storage","js/window","var_args","G__55451","nubank.workspaces.lib.local-storage/get","js/Error","key","nubank.workspaces.lib.local_storage.get","default","temp__5751__auto__","value","cljs.core.pr_str","cljs.reader.read_string","nubank.workspaces.lib.local-storage/set!","args__4870__auto__","len__4864__auto__","i__4865__auto__","argseq__4871__auto__","cljs.core/IndexedSeq","nubank.workspaces.lib.local-storage/update!","seq55467","G__55468","cljs.core/first","cljs.core/next","G__55469","self__4851__auto__","f","args","cljs.core.apply","nubank.workspaces.lib.local-storage/remove!","nubank.workspaces.lib.local-storage/read-transit","s","reader","cognitect.transit.reader","cognitect.transit/read","nubank.workspaces.lib.local-storage/write-transit","x","writer","cognitect.transit.writer","cognitect.transit/write","G__55487","nubank.workspaces.lib.local-storage/tget","nubank.workspaces.lib.local_storage.tget","nubank.workspaces.lib.local-storage/tset!","nubank.workspaces.lib.local-storage/tupdate!","seq55495","G__55496","G__55497"],"sourcesContent":["(ns nubank.workspaces.lib.local-storage\n  (:refer-clojure :exclude [get set!])\n  (:require [cljs.reader :refer [read-string]]\n            [cognitect.transit :as t]))\n\n(def local-storage (.-localStorage js/window))\n\n;; edn\n\n(defn get\n  ([key] (get key nil))\n  ([key default]\n   (if-let [value (.getItem local-storage (pr-str key))]\n     (read-string value)\n     default)))\n\n(defn set! [key value]\n  (.setItem local-storage (pr-str key) (pr-str value)))\n\n(defn update! [key f & args]\n  (.setItem local-storage (pr-str key) (pr-str (apply f (get key) args))))\n\n(defn remove! [key]\n  (.removeItem local-storage key))\n\n;; transit\n\n(defn read-transit [s]\n  (let [reader (t/reader :json)]\n    (t/read reader s)))\n\n(defn write-transit [x]\n  (let [writer (t/writer :json)]\n    (t/write writer x)))\n\n(defn tget\n  ([key] (tget key nil))\n  ([key default]\n   (if-let [value (.getItem local-storage (pr-str key))]\n     (read-transit value)\n     default)))\n\n(defn tset! [key value]\n  (.setItem local-storage (pr-str key) (write-transit value)))\n\n(defn tupdate! [key f & args]\n  (.setItem local-storage (pr-str key) (write-transit (apply f (tget key) args))))\n\n(comment\n  (-> `(:hello {})\n      type)\n\n  (-> `(:hello {})\n      (write-transit)\n      (read-transit)\n      type)\n\n  (-> `(:hello {})\n    (pr-str)\n    (read-string)\n    type))\n"]}