{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$shell.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,wDAAA,CAA6E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA8BrHD,MAAOC,CAAAA,OAAP,CApBAC,QAAc,CAACC,IAAD,CAAO,CACnB,MAAO,CACLC,KAAM,eADD,CAELC,QAAS,CAAE,SAAF,CAFJ,CAGLC,SAAU,CACR,CACEC,UAAW,MADb,CAKEC,MAAO,gCALT,CAMEC,OAAQ,CACNC,IAAK,eADC,CAENC,YAAa,MAFP,CANV,CADQ,CAHL,CADY,CAVgG;",
"sources":["node_modules/highlight_DOT_js/lib/languages/shell.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$shell\"] = function(global,require,module,exports) {\n/*\nLanguage: Shell Session\nRequires: bash.js\nAuthor: TSUYUSATO Kitsune <make.just.on@gmail.com>\nCategory: common\nAudit: 2020\n*/\n\n/** @type LanguageFn */\nfunction shell(hljs) {\n  return {\n    name: 'Shell Session',\n    aliases: [ 'console' ],\n    contains: [\n      {\n        className: 'meta',\n        // We cannot add \\s (spaces) in the regular expression otherwise it will be too broad and produce unexpected result.\n        // For instance, in the following example, it would match \"echo /path/to/home >\" as a prompt:\n        // echo /path/to/home > t.exe\n        begin: /^\\s{0,3}[/~\\w\\d[\\]()@-]*[>%$#]/,\n        starts: {\n          end: /[^\\\\](?=\\s*$)/,\n          subLanguage: 'bash'\n        }\n      }\n    ]\n  };\n}\n\nmodule.exports = shell;\n\n};"],
"names":["shadow$provide","global","require","module","exports","shell","hljs","name","aliases","contains","className","begin","starts","end","subLanguage"]
}
