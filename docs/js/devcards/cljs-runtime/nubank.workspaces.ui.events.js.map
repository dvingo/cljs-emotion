{"version":3,"sources":["nubank/workspaces/ui/events.cljs"],"mappings":"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","names":["nubank.workspaces.ui.events/KEYS","cljs.spec.alpha/def-impl","cljs.core/set","cljs.core/keys","cljs.spec.alpha/and-spec-impl","cljs.core/string?","cljs.spec.alpha.spec_impl","p1__56314#","p1__56315#","clojure.string.split","clojure.string.join","cljs.spec.alpha/cat-impl","cljs.spec.alpha/rep-impl","cljs.core/pos-int?","nubank.workspaces.ui.events/pd","f","e","nubank.workspaces.ui.events/parse-keystroke","keystroke","temp__5751__auto__","map__56340","cljs.core/--destructure-map","cljs.core.get","modifiers","key","cljs.spec.alpha/conform","nubank.workspaces.ui.events/match-key?","key-code","cljs.core._EQ_","nubank.workspaces.ui.events.goog$module$goog$object.get","nubank.workspaces.ui.events/match-modifiers?","p1__56344#","cljs.core/every?","p__56353","map__56354","nubank.workspaces.ui.events/match-keystroke?","nubank.workspaces.ui.events/get-target","target","cljs.core/fn?","js/document.body","nubank.workspaces.ui.events/attach-event","this","map__56368","event","action","com.fulcrologic.fulcro.components/props","js/Error","nubank.workspaces.ui.events.goog$module$goog$object.set","nubank.workspaces.ui.events/dettach-event","handler","map__56376","options__48885__auto__","com.fulcrologic.fulcro.components/wrapped-render","js/nubank","js/nubank.workspaces","js/nubank.workspaces.ui","js/nubank.workspaces.ui.events","js/nubank.workspaces.ui.events.DomListener","props__48886__auto__","this__48887__auto__","init-state__48888__auto__","obj56456","G__56457","G__56458","com.fulcrologic.fulcro.components/isoget","obj56460","com.fulcrologic.fulcro.components/configure-component!","nubank.workspaces.ui.events/DomListener","props","com.fulcrologic.fulcro.dom/macro-create-element*","nubank.workspaces.ui.events/dom-listener*","com.fulcrologic.fulcro.components.factory","p__56470","map__56472","nubank.workspaces.ui.events/dom-listener","click","G__56479","cljs.core.assoc","matcher","G__56488","p1__56468#","js/console.warn","p__56494","map__56497","nubank.workspaces.ui.events/create-event","G__56499","js/document.createEvent","nubank.workspaces.ui.events/trigger-event","evt"],"sourcesContent":["(ns nubank.workspaces.ui.events\n  (:require [cljs.spec.alpha :as s]\n            [clojure.string :as str]\n            [goog.object :as gobj]\n            [com.fulcrologic.fulcro.dom :as dom]\n            [com.fulcrologic.fulcro.components :as fp]))\n\n(def KEYS\n  {\"backspace\" 8\n   \"tab\"       9\n   \"return\"    13\n   \"escape\"    27\n   \"space\"     32\n   \"left\"      37\n   \"up\"        38\n   \"right\"     39\n   \"down\"      40\n   \"slash\"     191\n   \"0\"         48\n   \"1\"         49\n   \"2\"         50\n   \"3\"         51\n   \"4\"         52\n   \"5\"         53\n   \"6\"         54\n   \"7\"         55\n   \"8\"         56\n   \"9\"         57\n   \"a\"         65\n   \"b\"         66\n   \"c\"         67\n   \"d\"         68\n   \"e\"         69\n   \"f\"         70\n   \"g\"         71\n   \"h\"         72\n   \"i\"         73\n   \"j\"         74\n   \"k\"         75\n   \"l\"         76\n   \"m\"         77\n   \"n\"         78\n   \"o\"         79\n   \"p\"         80\n   \"q\"         81\n   \"r\"         82\n   \"s\"         83\n   \"t\"         84\n   \"u\"         85\n   \"v\"         86\n   \"w\"         87\n   \"x\"         88\n   \"y\"         89\n   \"z\"         90\n   \";\"         186\n   \"=\"         187\n   \",\"         188\n   \"minus\"     189\n   \".\"         190\n   \"/\"         191\n   \"[\"         219\n   \"\\\\\"        220\n   \"]\"         221\n   \"'\"         222})\n\n(s/def ::key-string (set (keys KEYS)))\n(s/def ::modifier #{\"ctrl\" \"alt\" \"meta\" \"shift\"})\n(s/def ::keystroke\n  (s/and string?\n    (s/conformer #(str/split % #\"-\") #(str/join \"-\" %))\n    (s/cat :modifiers (s/* ::modifier) :key ::key-string)))\n(s/def ::key-code pos-int?)\n\n(defn pd\n  \"Wraps function f with a call to .preventDefault on the event. This is a helper\n  to compose with event callback functions so they also cancel the default browser\n  event handler.\n\n  Usage:\n\n  (dom/a {:href \\\"#\\\" :onClick (pd #(console.log :clicked))} \\\"No default\\\")\"\n  [f]\n  (fn [e]\n    (.preventDefault e)\n    (f e)))\n\n(defn parse-keystroke [keystroke]\n  (if-let [{:keys [modifiers key]} (s/conform ::keystroke keystroke)]\n    {::key-code  (get KEYS key)\n     ::modifiers modifiers}))\n\n(defn match-key? [e key-code]\n  (if key-code\n    (= (gobj/get e \"keyCode\") key-code)\n    true))\n\n(defn match-modifiers? [e modifiers]\n  (if modifiers\n    (every? #(gobj/get e (str % \"Key\")) modifiers)\n    true))\n\n(defn match-keystroke? [e {::keys [modifiers key-code]}]\n  (and (match-key? e key-code) (match-modifiers? e modifiers)))\n\n(defn get-target [target]\n  (cond\n    (fn? target) (target)\n    target target\n    :else js/document.body))\n\n(defn attach-event [this]\n  (let [{::keys [target event action]} (fp/props this)\n        target (get-target target)]\n    (assert event \"You must provide an event to dom-listener\")\n    (gobj/set this \"handler\" action)\n    (if target\n      (.addEventListener target event action))))\n\n(defn dettach-event [this]\n  (if-let [handler (gobj/get this \"handler\")]\n    (let [{::keys [target event]} (fp/props this)\n          target (get-target target)]\n      (if target\n        (.removeEventListener target event handler)))))\n\n(fp/defsc DomListener [this props]\n  {:componentDidMount    (fn [this] (attach-event this))\n   :componentWillUnmount (fn [this] (dettach-event this))}\n\n  (dom/noscript nil))\n\n(def dom-listener* (fp/factory DomListener))\n\n(defn dom-listener [{::keys [keystroke click action] :as event}]\n  (cond\n    click\n    (dom-listener* (assoc event ::event \"click\" ::action click))\n\n    keystroke\n    (if-let [matcher (parse-keystroke keystroke)]\n      (dom-listener* (assoc event\n                       ::event \"keydown\"\n                       ::action #(if (match-keystroke? % matcher) (action %))))\n      (js/console.warn (str \"Keystroke `\" keystroke \"` is not valid.\")))\n\n    :else\n    (dom-listener* event)))\n\n(defn create-event [{::keys [event]}]\n  (doto (js/document.createEvent \"HTMLEvents\")\n    (.initEvent event true true)))\n\n(defn trigger-event [target evt]\n  (.dispatchEvent target (create-event evt)))\n"]}