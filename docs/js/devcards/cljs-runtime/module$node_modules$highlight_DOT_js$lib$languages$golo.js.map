{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$golo.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,uDAAA,CAA4E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAiCpHD,MAAOC,CAAAA,OAAP,CAzBAC,QAAa,CAACC,IAAD,CAAO,CAClB,MAAO,CACLC,KAAM,MADD,CAELC,SAAU,CACRC,QACI,yTAFI,CAORC,QACI,iBARI,CAFL;AAYLC,SAAU,CACRL,IAAKM,CAAAA,iBADG,CAERN,IAAKO,CAAAA,iBAFG,CAGRP,IAAKQ,CAAAA,aAHG,CAIR,CACEC,UAAW,MADb,CAEEC,MAAO,YAFT,CAJQ,CAZL,CADW,CARgG;",
"sources":["node_modules/highlight_DOT_js/lib/languages/golo.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$golo\"] = function(global,require,module,exports) {\n/*\nLanguage: Golo\nAuthor: Philippe Charriere <ph.charriere@gmail.com>\nDescription: a lightweight dynamic language for the JVM\nWebsite: http://golo-lang.org/\n*/\n\nfunction golo(hljs) {\n  return {\n    name: 'Golo',\n    keywords: {\n      keyword:\n          'println readln print import module function local return let var ' +\n          'while for foreach times in case when match with break continue ' +\n          'augment augmentation each find filter reduce ' +\n          'if then else otherwise try catch finally raise throw orIfNull ' +\n          'DynamicObject|10 DynamicVariable struct Observable map set vector list array',\n      literal:\n          'true false null'\n    },\n    contains: [\n      hljs.HASH_COMMENT_MODE,\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_NUMBER_MODE,\n      {\n        className: 'meta',\n        begin: '@[A-Za-z]+'\n      }\n    ]\n  };\n}\n\nmodule.exports = golo;\n\n};"],
"names":["shadow$provide","global","require","module","exports","golo","hljs","name","keywords","keyword","literal","contains","HASH_COMMENT_MODE","QUOTE_STRING_MODE","C_NUMBER_MODE","className","begin"]
}
