{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$bash.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,CAAA,uDAAA,CAA4E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAqBpHC,QAASA,OAAM,CAAC,GAAGC,IAAJ,CAAU,CAEvB,MADeA,KAAKC,CAAAA,GAAL,CAAUC,CAAD,EAAO,CAVH,CAAA,CAUUA,CAXtC,CACkB,QAAlB,GAAI,MAUkCA,EAVtC,CAUsCA,CAVtC,CAUsCA,CAR5BC,CAAAA,MAHV,CAAgB,IAWe,OAAA,EAAA,CAAhB,CAA2BC,CAAAA,IAA3BC,CAAgC,EAAhCA,CADQ,CAoJzBR,MAAOC,CAAAA,OAAP,CAtIAQ,QAAa,CAACC,IAAD,CAAO,CAClB,MAAMC,IAAM,EACZ,KAAMC,WAAa,CACjBC,MAAO,MADU,CAEjBC,IAAI,IAFa,CAGjBC,SAAU,CACR,MADQ,CAER,CACEF,MAAO,IADT,CAEEE,SAAU,CAAEJ,GAAF,CAFZ,CAFQ,CAHO,CAWnBK,OAAOC,CAAAA,MAAP,CAAcN,GAAd,CAAkB,CAChBO,UAAW,UADK,CAEhBC,SAAU,CACR,CAACN,MAAOX,MAAA,CAAO,oBAAP,CAGL,qBAHK,CAAR,CADQ,CAKRU,UALQ,CAFM,CAAlB,CAWA,KAAMQ,MAAQ,CACZF,UAAW,OADC,CAEZL,MAAO,MAFK;AAEGC,IAAK,IAFR,CAGZC,SAAU,CAACL,IAAKW,CAAAA,gBAAN,CAHE,CAKRC,WAAAA,CAAW,CACfT,MAAO,gBADQ,CAEfU,OAAQ,CACNR,SAAU,CACRL,IAAKc,CAAAA,iBAAL,CAAuB,CACrBX,MAAO,OADc,CAErBC,IAAK,OAFgB,CAGrBI,UAAW,QAHU,CAAvB,CADQ,CADJ,CAFO,CAYjB,OAAMO,aAAe,CACnBP,UAAW,QADQ,CAEnBL,MAAO,GAFY,CAEPC,IAAK,GAFE,CAGnBC,SAAU,CACRL,IAAKW,CAAAA,gBADG,CAERV,GAFQ,CAGRS,KAHQ,CAHS,CASrBA,MAAML,CAAAA,QAASW,CAAAA,IAAf,CAAoBD,YAApB,CAUME,MAAAA,CAAa,CACjBd,MAAO,QADU,CAEjBC,IAAK,MAFY,CAGjBC,SAAU,CACR,CAAEF,MAAO,eAAT,CAA0BK,UAAW,QAArC,CADQ,CAERR,IAAKkB,CAAAA,WAFG,CAGRjB,GAHQ,CAHO,CAoBnB,OAAMkB,cAAgBnB,IAAKoB,CAAAA,OAAL,CAAa,CACjCC,OAAQ,2CADyB,CAEjCC,UAAW,EAFsB,CAAb,CAAtB;AAIMC,SAAW,CACff,UAAW,UADI,CAEfL,MAAO,2BAFQ,CAGfqB,YAAa,CAAA,CAHE,CAIfnB,SAAU,CAACL,IAAKyB,CAAAA,OAAL,CAAazB,IAAK0B,CAAAA,UAAlB,CAA8B,CAACvB,MAAO,YAAR,CAA9B,CAAD,CAJK,CAKfmB,UAAW,CALI,CAQjB,OAAO,CACLK,KAAM,MADD,CAELC,QAAS,CAAC,IAAD,CAAO,KAAP,CAFJ,CAGLC,SAAU,CACRC,SAAU,eADF,CAERC,QACE,8DAHM,CAIRC,QACE,YALM,CAMRC,SAGE,2uBATM,CAHL;AA2BL5B,SAAU,CACRc,aADQ,CAERnB,IAAKoB,CAAAA,OAAL,EAFQ,CAGRG,QAHQ,CAIRN,KAJQ,CAKRjB,IAAKkC,CAAAA,iBALG,CAMRtB,UANQ,CAORG,YAPQ,CApEUoB,CACpB3B,UAAW,EADS2B,CAEpBhC,MAAO,KAFagC,CAoEV,CA/DQC,CAClB5B,UAAW,QADO4B,CAElBjC,MAAO,GAFWiC,CAENhC,IAAK,GAFCgC,CA+DR,CAURnC,GAVQ,CA3BL,CA5FW,CAnCgG;",
"sources":["node_modules/highlight_DOT_js/lib/languages/bash.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$bash\"] = function(global,require,module,exports) {\n/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: Bash\nAuthor: vah <vahtenberg@gmail.com>\nContributrors: Benjamin Pannell <contact@sierrasoftworks.com>\nWebsite: https://www.gnu.org/software/bash/\nCategory: common\n*/\n\n/** @type LanguageFn */\nfunction bash(hljs) {\n  const VAR = {};\n  const BRACED_VAR = {\n    begin: /\\$\\{/,\n    end:/\\}/,\n    contains: [\n      \"self\",\n      {\n        begin: /:-/,\n        contains: [ VAR ]\n      } // default values\n    ]\n  };\n  Object.assign(VAR,{\n    className: 'variable',\n    variants: [\n      {begin: concat(/\\$[\\w\\d#@][\\w\\d_]*/,\n        // negative look-ahead tries to avoid matching patterns that are not\n        // Perl at all like $ident$, @ident@, etc.\n        `(?![\\\\w\\\\d])(?![$])`) },\n      BRACED_VAR\n    ]\n  });\n\n  const SUBST = {\n    className: 'subst',\n    begin: /\\$\\(/, end: /\\)/,\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  const HERE_DOC = {\n    begin: /<<-?\\s*(?=\\w+)/,\n    starts: {\n      contains: [\n        hljs.END_SAME_AS_BEGIN({\n          begin: /(\\w+)/,\n          end: /(\\w+)/,\n          className: 'string'\n        })\n      ]\n    }\n  };\n  const QUOTE_STRING = {\n    className: 'string',\n    begin: /\"/, end: /\"/,\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      VAR,\n      SUBST\n    ]\n  };\n  SUBST.contains.push(QUOTE_STRING);\n  const ESCAPED_QUOTE = {\n    className: '',\n    begin: /\\\\\"/\n\n  };\n  const APOS_STRING = {\n    className: 'string',\n    begin: /'/, end: /'/\n  };\n  const ARITHMETIC = {\n    begin: /\\$\\(\\(/,\n    end: /\\)\\)/,\n    contains: [\n      { begin: /\\d+#[0-9a-f]+/, className: \"number\" },\n      hljs.NUMBER_MODE,\n      VAR\n    ]\n  };\n  const SH_LIKE_SHELLS = [\n    \"fish\",\n    \"bash\",\n    \"zsh\",\n    \"sh\",\n    \"csh\",\n    \"ksh\",\n    \"tcsh\",\n    \"dash\",\n    \"scsh\",\n  ];\n  const KNOWN_SHEBANG = hljs.SHEBANG({\n    binary: `(${SH_LIKE_SHELLS.join(\"|\")})`,\n    relevance: 10\n  });\n  const FUNCTION = {\n    className: 'function',\n    begin: /\\w[\\w\\d_]*\\s*\\(\\s*\\)\\s*\\{/,\n    returnBegin: true,\n    contains: [hljs.inherit(hljs.TITLE_MODE, {begin: /\\w[\\w\\d_]*/})],\n    relevance: 0\n  };\n\n  return {\n    name: 'Bash',\n    aliases: ['sh', 'zsh'],\n    keywords: {\n      $pattern: /\\b[a-z._-]+\\b/,\n      keyword:\n        'if then else elif fi for while in do done case esac function',\n      literal:\n        'true false',\n      built_in:\n        // Shell built-ins\n        // http://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n        'break cd continue eval exec exit export getopts hash pwd readonly return shift test times ' +\n        'trap umask unset ' +\n        // Bash built-ins\n        'alias bind builtin caller command declare echo enable help let local logout mapfile printf ' +\n        'read readarray source type typeset ulimit unalias ' +\n        // Shell modifiers\n        'set shopt ' +\n        // Zsh built-ins\n        'autoload bg bindkey bye cap chdir clone comparguments compcall compctl compdescribe compfiles ' +\n        'compgroups compquote comptags comptry compvalues dirs disable disown echotc echoti emulate ' +\n        'fc fg float functions getcap getln history integer jobs kill limit log noglob popd print ' +\n        'pushd pushln rehash sched setcap setopt stat suspend ttyctl unfunction unhash unlimit ' +\n        'unsetopt vared wait whence where which zcompile zformat zftp zle zmodload zparseopts zprof ' +\n        'zpty zregexparse zsocket zstyle ztcp'\n    },\n    contains: [\n      KNOWN_SHEBANG, // to catch known shells and boost relevancy\n      hljs.SHEBANG(), // to catch unknown shells but still highlight the shebang\n      FUNCTION,\n      ARITHMETIC,\n      hljs.HASH_COMMENT_MODE,\n      HERE_DOC,\n      QUOTE_STRING,\n      ESCAPED_QUOTE,\n      APOS_STRING,\n      VAR\n    ]\n  };\n}\n\nmodule.exports = bash;\n\n};"],
"names":["shadow$provide","global","require","module","exports","concat","args","map","x","source","join","joined","bash","hljs","VAR","BRACED_VAR","begin","end","contains","Object","assign","className","variants","SUBST","BACKSLASH_ESCAPE","HERE_DOC","starts","END_SAME_AS_BEGIN","QUOTE_STRING","push","ARITHMETIC","NUMBER_MODE","KNOWN_SHEBANG","SHEBANG","binary","relevance","FUNCTION","returnBegin","inherit","TITLE_MODE","name","aliases","keywords","$pattern","keyword","literal","built_in","HASH_COMMENT_MODE","ESCAPED_QUOTE","APOS_STRING"]
}
