{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$ruby.js",
"lineCount":9,
"mappings":"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",
"sources":["node_modules/highlight_DOT_js/lib/languages/ruby.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$ruby\"] = function(global,require,module,exports) {\n/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: Ruby\nDescription: Ruby is a dynamic, open source programming language with a focus on simplicity and productivity.\nWebsite: https://www.ruby-lang.org/\nAuthor: Anton Kovalyov <anton@kovalyov.net>\nContributors: Peter Leonov <gojpeg@yandex.ru>, Vasily Polovnyov <vast@whiteants.net>, Loren Segal <lsegal@soen.ca>, Pascal Hurni <phi@ruby-reactive.org>, Cedric Sohrauer <sohrauer@googlemail.com>\nCategory: common\n*/\n\nfunction ruby(hljs) {\n  const RUBY_METHOD_RE = '([a-zA-Z_]\\\\w*[!?=]?|[-+~]@|<<|>>|=~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~`|]|\\\\[\\\\]=?)';\n  const RUBY_KEYWORDS = {\n    keyword:\n      'and then defined module in return redo if BEGIN retry end for self when ' +\n      'next until do begin unless END rescue else break undef not super class case ' +\n      'require yield alias while ensure elsif or include attr_reader attr_writer attr_accessor ' +\n      '__FILE__',\n    built_in: 'proc lambda',\n    literal:\n      'true false nil'\n  };\n  const YARDOCTAG = {\n    className: 'doctag',\n    begin: '@[A-Za-z]+'\n  };\n  const IRB_OBJECT = {\n    begin: '#<',\n    end: '>'\n  };\n  const COMMENT_MODES = [\n    hljs.COMMENT(\n      '#',\n      '$',\n      {\n        contains: [ YARDOCTAG ]\n      }\n    ),\n    hljs.COMMENT(\n      '^=begin',\n      '^=end',\n      {\n        contains: [ YARDOCTAG ],\n        relevance: 10\n      }\n    ),\n    hljs.COMMENT('^__END__', '\\\\n$')\n  ];\n  const SUBST = {\n    className: 'subst',\n    begin: /#\\{/,\n    end: /\\}/,\n    keywords: RUBY_KEYWORDS\n  };\n  const STRING = {\n    className: 'string',\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      SUBST\n    ],\n    variants: [\n      {\n        begin: /'/,\n        end: /'/\n      },\n      {\n        begin: /\"/,\n        end: /\"/\n      },\n      {\n        begin: /`/,\n        end: /`/\n      },\n      {\n        begin: /%[qQwWx]?\\(/,\n        end: /\\)/\n      },\n      {\n        begin: /%[qQwWx]?\\[/,\n        end: /\\]/\n      },\n      {\n        begin: /%[qQwWx]?\\{/,\n        end: /\\}/\n      },\n      {\n        begin: /%[qQwWx]?</,\n        end: />/\n      },\n      {\n        begin: /%[qQwWx]?\\//,\n        end: /\\//\n      },\n      {\n        begin: /%[qQwWx]?%/,\n        end: /%/\n      },\n      {\n        begin: /%[qQwWx]?-/,\n        end: /-/\n      },\n      {\n        begin: /%[qQwWx]?\\|/,\n        end: /\\|/\n      },\n      // in the following expressions, \\B in the beginning suppresses recognition of ?-sequences\n      // where ? is the last character of a preceding identifier, as in: `func?4`\n      {\n        begin: /\\B\\?(\\\\\\d{1,3})/\n      },\n      {\n        begin: /\\B\\?(\\\\x[A-Fa-f0-9]{1,2})/\n      },\n      {\n        begin: /\\B\\?(\\\\u\\{?[A-Fa-f0-9]{1,6}\\}?)/\n      },\n      {\n        begin: /\\B\\?(\\\\M-\\\\C-|\\\\M-\\\\c|\\\\c\\\\M-|\\\\M-|\\\\C-\\\\M-)[\\x20-\\x7e]/\n      },\n      {\n        begin: /\\B\\?\\\\(c|C-)[\\x20-\\x7e]/\n      },\n      {\n        begin: /\\B\\?\\\\?\\S/\n      },\n      { // heredocs\n        begin: /<<[-~]?'?(\\w+)\\n(?:[^\\n]*\\n)*?\\s*\\1\\b/,\n        returnBegin: true,\n        contains: [\n          {\n            begin: /<<[-~]?'?/\n          },\n          hljs.END_SAME_AS_BEGIN({\n            begin: /(\\w+)/,\n            end: /(\\w+)/,\n            contains: [\n              hljs.BACKSLASH_ESCAPE,\n              SUBST\n            ]\n          })\n        ]\n      }\n    ]\n  };\n\n  // Ruby syntax is underdocumented, but this grammar seems to be accurate\n  // as of version 2.7.2 (confirmed with (irb and `Ripper.sexp(...)`)\n  // https://docs.ruby-lang.org/en/2.7.0/doc/syntax/literals_rdoc.html#label-Numbers\n  const decimal = '[1-9](_?[0-9])*|0';\n  const digits = '[0-9](_?[0-9])*';\n  const NUMBER = {\n    className: 'number',\n    relevance: 0,\n    variants: [\n      // decimal integer/float, optionally exponential or rational, optionally imaginary\n      {\n        begin: `\\\\b(${decimal})(\\\\.(${digits}))?([eE][+-]?(${digits})|r)?i?\\\\b`\n      },\n\n      // explicit decimal/binary/octal/hexadecimal integer,\n      // optionally rational and/or imaginary\n      {\n        begin: \"\\\\b0[dD][0-9](_?[0-9])*r?i?\\\\b\"\n      },\n      {\n        begin: \"\\\\b0[bB][0-1](_?[0-1])*r?i?\\\\b\"\n      },\n      {\n        begin: \"\\\\b0[oO][0-7](_?[0-7])*r?i?\\\\b\"\n      },\n      {\n        begin: \"\\\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*r?i?\\\\b\"\n      },\n\n      // 0-prefixed implicit octal integer, optionally rational and/or imaginary\n      {\n        begin: \"\\\\b0(_?[0-7])+r?i?\\\\b\"\n      }\n    ]\n  };\n\n  const PARAMS = {\n    className: 'params',\n    begin: '\\\\(',\n    end: '\\\\)',\n    endsParent: true,\n    keywords: RUBY_KEYWORDS\n  };\n\n  const RUBY_DEFAULT_CONTAINS = [\n    STRING,\n    {\n      className: 'class',\n      beginKeywords: 'class module',\n      end: '$|;',\n      illegal: /=/,\n      contains: [\n        hljs.inherit(hljs.TITLE_MODE, {\n          begin: '[A-Za-z_]\\\\w*(::\\\\w+)*(\\\\?|!)?'\n        }),\n        {\n          begin: '<\\\\s*',\n          contains: [\n            {\n              begin: '(' + hljs.IDENT_RE + '::)?' + hljs.IDENT_RE,\n              // we already get points for <, we don't need poitns\n              // for the name also\n              relevance: 0\n            }\n          ]\n        }\n      ].concat(COMMENT_MODES)\n    },\n    {\n      className: 'function',\n      // def method_name(\n      // def method_name;\n      // def method_name (end of line)\n      begin: concat(/def\\s*/, lookahead(RUBY_METHOD_RE + \"\\\\s*(\\\\(|;|$)\")),\n      relevance: 0, // relevance comes from kewords\n      keywords: \"def\",\n      end: '$|;',\n      contains: [\n        hljs.inherit(hljs.TITLE_MODE, {\n          begin: RUBY_METHOD_RE\n        }),\n        PARAMS\n      ].concat(COMMENT_MODES)\n    },\n    {\n      // swallow namespace qualifiers before symbols\n      begin: hljs.IDENT_RE + '::'\n    },\n    {\n      className: 'symbol',\n      begin: hljs.UNDERSCORE_IDENT_RE + '(!|\\\\?)?:',\n      relevance: 0\n    },\n    {\n      className: 'symbol',\n      begin: ':(?!\\\\s)',\n      contains: [\n        STRING,\n        {\n          begin: RUBY_METHOD_RE\n        }\n      ],\n      relevance: 0\n    },\n    NUMBER,\n    {\n      // negative-look forward attemps to prevent false matches like:\n      // @ident@ or $ident$ that might indicate this is not ruby at all\n      className: \"variable\",\n      begin: '(\\\\$\\\\W)|((\\\\$|@@?)(\\\\w+))(?=[^@$?])' + `(?![A-Za-z])(?![@$?'])`\n    },\n    {\n      className: 'params',\n      begin: /\\|/,\n      end: /\\|/,\n      relevance: 0, // this could be a lot of things (in other languages) other than params\n      keywords: RUBY_KEYWORDS\n    },\n    { // regexp container\n      begin: '(' + hljs.RE_STARTERS_RE + '|unless)\\\\s*',\n      keywords: 'unless',\n      contains: [\n        {\n          className: 'regexp',\n          contains: [\n            hljs.BACKSLASH_ESCAPE,\n            SUBST\n          ],\n          illegal: /\\n/,\n          variants: [\n            {\n              begin: '/',\n              end: '/[a-z]*'\n            },\n            {\n              begin: /%r\\{/,\n              end: /\\}[a-z]*/\n            },\n            {\n              begin: '%r\\\\(',\n              end: '\\\\)[a-z]*'\n            },\n            {\n              begin: '%r!',\n              end: '![a-z]*'\n            },\n            {\n              begin: '%r\\\\[',\n              end: '\\\\][a-z]*'\n            }\n          ]\n        }\n      ].concat(IRB_OBJECT, COMMENT_MODES),\n      relevance: 0\n    }\n  ].concat(IRB_OBJECT, COMMENT_MODES);\n\n  SUBST.contains = RUBY_DEFAULT_CONTAINS;\n  PARAMS.contains = RUBY_DEFAULT_CONTAINS;\n\n  // >>\n  // ?>\n  const SIMPLE_PROMPT = \"[>?]>\";\n  // irb(main):001:0>\n  const DEFAULT_PROMPT = \"[\\\\w#]+\\\\(\\\\w+\\\\):\\\\d+:\\\\d+>\";\n  const RVM_PROMPT = \"(\\\\w+-)?\\\\d+\\\\.\\\\d+\\\\.\\\\d+(p\\\\d+)?[^\\\\d][^>]+>\";\n\n  const IRB_DEFAULT = [\n    {\n      begin: /^\\s*=>/,\n      starts: {\n        end: '$',\n        contains: RUBY_DEFAULT_CONTAINS\n      }\n    },\n    {\n      className: 'meta',\n      begin: '^(' + SIMPLE_PROMPT + \"|\" + DEFAULT_PROMPT + '|' + RVM_PROMPT + ')(?=[ ])',\n      starts: {\n        end: '$',\n        contains: RUBY_DEFAULT_CONTAINS\n      }\n    }\n  ];\n\n  COMMENT_MODES.unshift(IRB_OBJECT);\n\n  return {\n    name: 'Ruby',\n    aliases: [\n      'rb',\n      'gemspec',\n      'podspec',\n      'thor',\n      'irb'\n    ],\n    keywords: RUBY_KEYWORDS,\n    illegal: /\\/\\*/,\n    contains: [\n      hljs.SHEBANG({\n        binary: \"ruby\"\n      })\n    ]\n      .concat(IRB_DEFAULT)\n      .concat(COMMENT_MODES)\n      .concat(RUBY_DEFAULT_CONTAINS)\n  };\n}\n\nmodule.exports = ruby;\n\n};"],
"names":["shadow$provide","global","require","module","exports","concat","args","map","x","source","join","joined","ruby","hljs","RUBY_KEYWORDS","keyword","built_in","literal","YARDOCTAG","className","begin","IRB_OBJECT","end","COMMENT_MODES","COMMENT","contains","relevance","SUBST","keywords","STRING","BACKSLASH_ESCAPE","variants","returnBegin","END_SAME_AS_BEGIN","PARAMS","endsParent","RUBY_DEFAULT_CONTAINS","beginKeywords","illegal","inherit","TITLE_MODE","IDENT_RE","re","RUBY_METHOD_RE","UNDERSCORE_IDENT_RE","NUMBER","RE_STARTERS_RE","IRB_DEFAULT","starts","unshift","name","aliases","SHEBANG","binary"]
}
