{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$nix.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,sDAAA,CAA2E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAiEnHD,MAAOC,CAAAA,OAAP,CAzDAC,QAAY,CAACC,IAAD,CAAO,CACjB,MAAMC,aAAe,CACnBC,QACE,6CAFiB,CAGnBC,QACE,wBAJiB,CAKnBC,SACE,yFANiB,CAArB,CASMC,UAAY,CAChBC,UAAW,OADK,CAEhBC,MAAO,MAFS,CAGhBC,IAAK,IAHW,CAIhBC,SAAUR,YAJM,CA+BZS,KAAAA,CAAc,CAClBV,IAAKW,CAAAA,WADa,CAElBX,IAAKY,CAAAA,iBAFa,CAGlBZ,IAAKa,CAAAA,oBAHa,CAdLC,CACbR,UAAW,QADEQ;AAEbC,SAAU,CAAEV,SAAF,CAFGS,CAGbE,SAAU,CACR,CACET,MAAO,IADT,CAEEC,IAAK,IAFP,CADQ,CAKR,CACED,MAAO,GADT,CAEEC,IAAK,GAFP,CALQ,CAHGM,CAcK,CAzBNG,CACZV,MAAO,sBADKU,CAEZC,YAAa,CAAA,CAFDD,CAGZE,UAAW,CAHCF,CAIZF,SAAU,CACR,CACET,UAAW,MADb,CAEEC,MAAO,KAFT,CADQ,CAJEU,CAyBM,CAOpBZ,UAAUU,CAAAA,QAAV,CAAqBL,IACrB,OAAO,CACLU,KAAM,KADD,CAELC,QAAS,CAAE,OAAF,CAFJ,CAGLZ,SAAUR,YAHL,CAILc,SAAUL,IAJL,CAjDU,CARgG;",
"sources":["node_modules/highlight_DOT_js/lib/languages/nix.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$nix\"] = function(global,require,module,exports) {\n/*\nLanguage: Nix\nAuthor: Domen Ko\u017ear <domen@dev.si>\nDescription: Nix functional language\nWebsite: http://nixos.org/nix\n*/\n\nfunction nix(hljs) {\n  const NIX_KEYWORDS = {\n    keyword:\n      'rec with let in inherit assert if else then',\n    literal:\n      'true false or and null',\n    built_in:\n      'import abort baseNameOf dirOf isNull builtins map removeAttrs throw ' +\n      'toString derivation'\n  };\n  const ANTIQUOTE = {\n    className: 'subst',\n    begin: /\\$\\{/,\n    end: /\\}/,\n    keywords: NIX_KEYWORDS\n  };\n  const ATTRS = {\n    begin: /[a-zA-Z0-9-_]+(\\s*=)/,\n    returnBegin: true,\n    relevance: 0,\n    contains: [\n      {\n        className: 'attr',\n        begin: /\\S+/\n      }\n    ]\n  };\n  const STRING = {\n    className: 'string',\n    contains: [ ANTIQUOTE ],\n    variants: [\n      {\n        begin: \"''\",\n        end: \"''\"\n      },\n      {\n        begin: '\"',\n        end: '\"'\n      }\n    ]\n  };\n  const EXPRESSIONS = [\n    hljs.NUMBER_MODE,\n    hljs.HASH_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    STRING,\n    ATTRS\n  ];\n  ANTIQUOTE.contains = EXPRESSIONS;\n  return {\n    name: 'Nix',\n    aliases: [ \"nixos\" ],\n    keywords: NIX_KEYWORDS,\n    contains: EXPRESSIONS\n  };\n}\n\nmodule.exports = nix;\n\n};"],
"names":["shadow$provide","global","require","module","exports","nix","hljs","NIX_KEYWORDS","keyword","literal","built_in","ANTIQUOTE","className","begin","end","keywords","EXPRESSIONS","NUMBER_MODE","HASH_COMMENT_MODE","C_BLOCK_COMMENT_MODE","STRING","contains","variants","ATTRS","returnBegin","relevance","name","aliases"]
}
