{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$asciidoc.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/highlight_DOT_js/lib/languages/asciidoc.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$asciidoc\"] = function(global,require,module,exports) {\n/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: AsciiDoc\nRequires: xml.js\nAuthor: Dan Allen <dan.j.allen@gmail.com>\nWebsite: http://asciidoc.org\nDescription: A semantic, text-based document format that can be exported to HTML, DocBook and other backends.\nCategory: markup\n*/\n\n/** @type LanguageFn */\nfunction asciidoc(hljs) {\n  const HORIZONTAL_RULE = {\n    begin: '^\\'{3,}[ \\\\t]*$',\n    relevance: 10\n  };\n  const ESCAPED_FORMATTING = [\n    // escaped constrained formatting marks (i.e., \\* \\_ or \\`)\n    {\n      begin: /\\\\[*_`]/\n    },\n    // escaped unconstrained formatting marks (i.e., \\\\** \\\\__ or \\\\``)\n    // must ignore until the next formatting marks\n    // this rule might not be 100% compliant with Asciidoctor 2.0 but we are entering undefined behavior territory...\n    {\n      begin: /\\\\\\\\\\*{2}[^\\n]*?\\*{2}/\n    },\n    {\n      begin: /\\\\\\\\_{2}[^\\n]*_{2}/\n    },\n    {\n      begin: /\\\\\\\\`{2}[^\\n]*`{2}/\n    },\n    // guard: constrained formatting mark may not be preceded by \":\", \";\" or\n    // \"}\". match these so the constrained rule doesn't see them\n    {\n      begin: /[:;}][*_`](?![*_`])/\n    }\n  ];\n  const STRONG = [\n    // inline unconstrained strong (single line)\n    {\n      className: 'strong',\n      begin: /\\*{2}([^\\n]+?)\\*{2}/\n    },\n    // inline unconstrained strong (multi-line)\n    {\n      className: 'strong',\n      begin: concat(\n        /\\*\\*/,\n        /((\\*(?!\\*)|\\\\[^\\n]|[^*\\n\\\\])+\\n)+/,\n        /(\\*(?!\\*)|\\\\[^\\n]|[^*\\n\\\\])*/,\n        /\\*\\*/\n      ),\n      relevance: 0\n    },\n    // inline constrained strong (single line)\n    {\n      className: 'strong',\n      // must not precede or follow a word character\n      begin: /\\B\\*(\\S|\\S[^\\n]*?\\S)\\*(?!\\w)/\n    },\n    // inline constrained strong (multi-line)\n    {\n      className: 'strong',\n      // must not precede or follow a word character\n      begin: /\\*[^\\s]([^\\n]+\\n)+([^\\n]+)\\*/\n    }\n  ];\n  const EMPHASIS = [\n    // inline unconstrained emphasis (single line)\n    {\n      className: 'emphasis',\n      begin: /_{2}([^\\n]+?)_{2}/\n    },\n    // inline unconstrained emphasis (multi-line)\n    {\n      className: 'emphasis',\n      begin: concat(\n        /__/,\n        /((_(?!_)|\\\\[^\\n]|[^_\\n\\\\])+\\n)+/,\n        /(_(?!_)|\\\\[^\\n]|[^_\\n\\\\])*/,\n        /__/\n      ),\n      relevance: 0\n    },\n    // inline constrained emphasis (single line)\n    {\n      className: 'emphasis',\n      // must not precede or follow a word character\n      begin: /\\b_(\\S|\\S[^\\n]*?\\S)_(?!\\w)/\n    },\n    // inline constrained emphasis (multi-line)\n    {\n      className: 'emphasis',\n      // must not precede or follow a word character\n      begin: /_[^\\s]([^\\n]+\\n)+([^\\n]+)_/\n    },\n    // inline constrained emphasis using single quote (legacy)\n    {\n      className: 'emphasis',\n      // must not follow a word character or be followed by a single quote or space\n      begin: '\\\\B\\'(?![\\'\\\\s])',\n      end: '(\\\\n{2}|\\')',\n      // allow escaped single quote followed by word char\n      contains: [{\n        begin: '\\\\\\\\\\'\\\\w',\n        relevance: 0\n      }],\n      relevance: 0\n    }\n  ];\n  const ADMONITION = {\n    className: 'symbol',\n    begin: '^(NOTE|TIP|IMPORTANT|WARNING|CAUTION):\\\\s+',\n    relevance: 10\n  };\n  const BULLET_LIST = {\n    className: 'bullet',\n    begin: '^(\\\\*+|-+|\\\\.+|[^\\\\n]+?::)\\\\s+'\n  };\n\n  return {\n    name: 'AsciiDoc',\n    aliases: ['adoc'],\n    contains: [\n      // block comment\n      hljs.COMMENT(\n        '^/{4,}\\\\n',\n        '\\\\n/{4,}$',\n        // can also be done as...\n        // '^/{4,}$',\n        // '^/{4,}$',\n        {\n          relevance: 10\n        }\n      ),\n      // line comment\n      hljs.COMMENT(\n        '^//',\n        '$',\n        {\n          relevance: 0\n        }\n      ),\n      // title\n      {\n        className: 'title',\n        begin: '^\\\\.\\\\w.*$'\n      },\n      // example, admonition & sidebar blocks\n      {\n        begin: '^[=\\\\*]{4,}\\\\n',\n        end: '\\\\n^[=\\\\*]{4,}$',\n        relevance: 10\n      },\n      // headings\n      {\n        className: 'section',\n        relevance: 10,\n        variants: [\n          {\n            begin: '^(={1,6})[ \\t].+?([ \\t]\\\\1)?$'\n          },\n          {\n            begin: '^[^\\\\[\\\\]\\\\n]+?\\\\n[=\\\\-~\\\\^\\\\+]{2,}$'\n          }\n        ]\n      },\n      // document attributes\n      {\n        className: 'meta',\n        begin: '^:.+?:',\n        end: '\\\\s',\n        excludeEnd: true,\n        relevance: 10\n      },\n      // block attributes\n      {\n        className: 'meta',\n        begin: '^\\\\[.+?\\\\]$',\n        relevance: 0\n      },\n      // quoteblocks\n      {\n        className: 'quote',\n        begin: '^_{4,}\\\\n',\n        end: '\\\\n_{4,}$',\n        relevance: 10\n      },\n      // listing and literal blocks\n      {\n        className: 'code',\n        begin: '^[\\\\-\\\\.]{4,}\\\\n',\n        end: '\\\\n[\\\\-\\\\.]{4,}$',\n        relevance: 10\n      },\n      // passthrough blocks\n      {\n        begin: '^\\\\+{4,}\\\\n',\n        end: '\\\\n\\\\+{4,}$',\n        contains: [{\n          begin: '<',\n          end: '>',\n          subLanguage: 'xml',\n          relevance: 0\n        }],\n        relevance: 10\n      },\n\n      BULLET_LIST,\n      ADMONITION,\n      ...ESCAPED_FORMATTING,\n      ...STRONG,\n      ...EMPHASIS,\n\n      // inline smart quotes\n      {\n        className: 'string',\n        variants: [\n          {\n            begin: \"``.+?''\"\n          },\n          {\n            begin: \"`.+?'\"\n          }\n        ]\n      },\n      // inline unconstrained emphasis\n      {\n        className: 'code',\n        begin: /`{2}/,\n        end: /(\\n{2}|`{2})/\n      },\n      // inline code snippets (TODO should get same treatment as strong and emphasis)\n      {\n        className: 'code',\n        begin: '(`.+?`|\\\\+.+?\\\\+)',\n        relevance: 0\n      },\n      // indented literal block\n      {\n        className: 'code',\n        begin: '^[ \\\\t]',\n        end: '$',\n        relevance: 0\n      },\n      HORIZONTAL_RULE,\n      // images and links\n      {\n        begin: '(link:)?(http|https|ftp|file|irc|image:?):\\\\S+?\\\\[[^[]*?\\\\]',\n        returnBegin: true,\n        contains: [\n          {\n            begin: '(link|image:?):',\n            relevance: 0\n          },\n          {\n            className: 'link',\n            begin: '\\\\w',\n            end: '[^\\\\[]+',\n            relevance: 0\n          },\n          {\n            className: 'string',\n            begin: '\\\\[',\n            end: '\\\\]',\n            excludeBegin: true,\n            excludeEnd: true,\n            relevance: 0\n          }\n        ],\n        relevance: 10\n      }\n    ]\n  };\n}\n\nmodule.exports = asciidoc;\n\n};"],
"names":["shadow$provide","global","require","module","exports","concat","args","map","x","source","join","joined","asciidoc","hljs","STRONG","className","begin","relevance","EMPHASIS","end","contains","name","aliases","COMMENT","variants","excludeEnd","subLanguage","BULLET_LIST","ADMONITION","HORIZONTAL_RULE","returnBegin","excludeBegin"]
}
