{"version":3,"sources":["camel_snake_kebab/internals/alter_name.cljc"],"mappings":";AAGA,AAAA;AAAA;;;mDAAA,nDAAaO;;AAAb,IAAAP,wEAAA,WACeQ,MAAKC;AADpB,AAAA,IAAAR,kBAAA,EAAA,UAAA,OAAA,hBACeO,qBAAAA;IADfN,kBAAA,CAAAC,kDAAA,AAAAC,YAAAH;AAAA,AAAA,GAAA,GAAA,CAAAC,mBAAA;AAAA,QAAAA,gDAAAA,yDAAAA,XACeM,qCAAAA,/BAAKC,qCAAAA;;AADpB,IAAAJ,kBAAA,CAAAF,kDAAA;AAAA,AAAA,GAAA,GAAA,CAAAE,mBAAA;AAAA,QAAAA,gDAAAA,yDAAAA,XACeG,qCAAAA,/BAAKC,qCAAAA;;AADpB,MAAA,AAAAH,2BAAA,uBACeE;;;;AADf,AAAA;;;oDAAA,pDACGL,gHAAYK,MAAKC;AADpB,AAAA,GAAA,EAAA,GAAA,UAAA,aAAA,GAAA,CAAA,6EAAA,vGACeD,0BAAAA;AADf,OACeA,0EAAAA,MAAKC;;AADpB,OAAAT,sEACeQ,MAAKC;;;;AADpB,AAGA,AAAA,AAAA,CAAAF,iDAAA,YAAA;;AAAA,CAAAJ,kDAAA,YAGE,WAAaK,MAAKC;AAAlB,AACE,0EAAID,qBAAAA,vFAAKC,kCAAAA,yCAAAA;;;AAJb,AAAA,CAAA,AAAA,gFAAAC,hFAMEC;;AANF,CAAA,AAAA,AAMEA,kGACA,WAAaH,MAAKC;AAAlB,AAAA,gBAAA,ZAAaD;AAAb,AACE,oBAAI,AAACI,oBAAUJ;AACb,MAAO,gDAAA,wCAAA,2CAAA,nIAACK,yLAAwDL;;AAChE,uDAAA,iBAAAM,WAAA,eAAIN,fAAKO,5EAAOC;AAAhB,AAAA,0EAAAF,wBAAAA,1FAAcL,kCAAAA,4CAAAA;;;;;AAVpB,AAAA,CAAA,AAAA,+EAAAC,/EAYEO;;AAZF,CAAA,AAAA,AAYEA,iGACA,WAAaT,MAAKC;AAAlB,AAAA,gBAAA,ZAAaD;AAAb,AACE,oBAAI,AAACI,oBAAUJ;AACb,MAAO,gDAAA,uCAAA,2CAAA,lIAACK,wLAAuDL;;AAC/D,sDAAA,iBAAAU,WAAA,eAAIV,fAAKO,3EAAOI;AAAhB,AAAA,0EAAAD,wBAAAA,1FAAcT,kCAAAA,4CAAAA","names":["camel-snake-kebab$internals$alter-name$AlterName$alter_name$dyn","x__4550__auto__","m__4551__auto__","camel-snake-kebab.internals.alter-name/alter-name","goog/typeOf","m__4549__auto__","cljs.core/missing-protocol","camel-snake-kebab.internals.alter-name/AlterName","this","f","cljs.core/PROTOCOL_SENTINEL","cljs.core/Keyword","cljs.core/namespace","cljs.core.ex_info","G__46982","cljs.core/name","cljs.core.keyword","cljs.core/Symbol","G__46988","cljs.core.symbol"],"sourcesContent":["(ns ^:no-doc camel-snake-kebab.internals.alter-name\n  #?(:clj (:import (clojure.lang Keyword Symbol))))\n\n(defprotocol AlterName\n  (alter-name [this f] \"Alters the name of this with f.\"))\n\n(extend-protocol AlterName\n  #?(:clj String\n     :cljs string)\n  (alter-name [this f]\n    (-> this f))\n\n  Keyword\n  (alter-name [this f]\n    (if (namespace this)\n      (throw (ex-info \"Namespaced keywords are not supported\" {:input this}))\n      (-> this name f keyword)))\n\n  Symbol\n  (alter-name [this f]\n    (if (namespace this)\n      (throw (ex-info \"Namespaced symbols are not supported\" {:input this}))\n      (-> this name f symbol))))\n"]}