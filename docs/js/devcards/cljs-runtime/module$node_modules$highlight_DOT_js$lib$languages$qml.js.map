{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$qml.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/highlight_DOT_js/lib/languages/qml.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$qml\"] = function(global,require,module,exports) {\n/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: QML\nRequires: javascript.js, xml.js\nAuthor: John Foster <jfoster@esri.com>\nDescription: Syntax highlighting for the Qt Quick QML scripting language, based mostly off\n             the JavaScript parser.\nWebsite: https://doc.qt.io/qt-5/qmlapplications.html\nCategory: scripting\n*/\n\nfunction qml(hljs) {\n  const KEYWORDS = {\n    keyword:\n      'in of on if for while finally var new function do return void else break catch ' +\n      'instanceof with throw case default try this switch continue typeof delete ' +\n      'let yield const export super debugger as async await import',\n    literal:\n      'true false null undefined NaN Infinity',\n    built_in:\n      'eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent ' +\n      'encodeURI encodeURIComponent escape unescape Object Function Boolean Error ' +\n      'EvalError InternalError RangeError ReferenceError StopIteration SyntaxError ' +\n      'TypeError URIError Number Math Date String RegExp Array Float32Array ' +\n      'Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array ' +\n      'Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require ' +\n      'module console window document Symbol Set Map WeakSet WeakMap Proxy Reflect ' +\n      'Behavior bool color coordinate date double enumeration font geocircle georectangle ' +\n      'geoshape int list matrix4x4 parent point quaternion real rect ' +\n      'size string url variant vector2d vector3d vector4d ' +\n      'Promise'\n  };\n\n  const QML_IDENT_RE = '[a-zA-Z_][a-zA-Z0-9\\\\._]*';\n\n  // Isolate property statements. Ends at a :, =, ;, ,, a comment or end of line.\n  // Use property class.\n  const PROPERTY = {\n    className: 'keyword',\n    begin: '\\\\bproperty\\\\b',\n    starts: {\n      className: 'string',\n      end: '(:|=|;|,|//|/\\\\*|$)',\n      returnEnd: true\n    }\n  };\n\n  // Isolate signal statements. Ends at a ) a comment or end of line.\n  // Use property class.\n  const SIGNAL = {\n    className: 'keyword',\n    begin: '\\\\bsignal\\\\b',\n    starts: {\n      className: 'string',\n      end: '(\\\\(|:|=|;|,|//|/\\\\*|$)',\n      returnEnd: true\n    }\n  };\n\n  // id: is special in QML. When we see id: we want to mark the id: as attribute and\n  // emphasize the token following.\n  const ID_ID = {\n    className: 'attribute',\n    begin: '\\\\bid\\\\s*:',\n    starts: {\n      className: 'string',\n      end: QML_IDENT_RE,\n      returnEnd: false\n    }\n  };\n\n  // Find QML object attribute. An attribute is a QML identifier followed by :.\n  // Unfortunately it's hard to know where it ends, as it may contain scalars,\n  // objects, object definitions, or javascript. The true end is either when the parent\n  // ends or the next attribute is detected.\n  const QML_ATTRIBUTE = {\n    begin: QML_IDENT_RE + '\\\\s*:',\n    returnBegin: true,\n    contains: [\n      {\n        className: 'attribute',\n        begin: QML_IDENT_RE,\n        end: '\\\\s*:',\n        excludeEnd: true,\n        relevance: 0\n      }\n    ],\n    relevance: 0\n  };\n\n  // Find QML object. A QML object is a QML identifier followed by { and ends at the matching }.\n  // All we really care about is finding IDENT followed by { and just mark up the IDENT and ignore the {.\n  const QML_OBJECT = {\n    begin: concat(QML_IDENT_RE, /\\s*\\{/),\n    end: /\\{/,\n    returnBegin: true,\n    relevance: 0,\n    contains: [\n      hljs.inherit(hljs.TITLE_MODE, {\n        begin: QML_IDENT_RE\n      })\n    ]\n  };\n\n  return {\n    name: 'QML',\n    aliases: [ 'qt' ],\n    case_insensitive: false,\n    keywords: KEYWORDS,\n    contains: [\n      {\n        className: 'meta',\n        begin: /^\\s*['\"]use (strict|asm)['\"]/\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      { // template string\n        className: 'string',\n        begin: '`',\n        end: '`',\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          {\n            className: 'subst',\n            begin: '\\\\$\\\\{',\n            end: '\\\\}'\n          }\n        ]\n      },\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'number',\n        variants: [\n          {\n            begin: '\\\\b(0[bB][01]+)'\n          },\n          {\n            begin: '\\\\b(0[oO][0-7]+)'\n          },\n          {\n            begin: hljs.C_NUMBER_RE\n          }\n        ],\n        relevance: 0\n      },\n      { // \"value\" container\n        begin: '(' + hljs.RE_STARTERS_RE + '|\\\\b(case|return|throw)\\\\b)\\\\s*',\n        keywords: 'return throw case',\n        contains: [\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          hljs.REGEXP_MODE,\n          { // E4X / JSX\n            begin: /</,\n            end: />\\s*[);\\]]/,\n            relevance: 0,\n            subLanguage: 'xml'\n          }\n        ],\n        relevance: 0\n      },\n      SIGNAL,\n      PROPERTY,\n      {\n        className: 'function',\n        beginKeywords: 'function',\n        end: /\\{/,\n        excludeEnd: true,\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, {\n            begin: /[A-Za-z$_][0-9A-Za-z$_]*/\n          }),\n          {\n            className: 'params',\n            begin: /\\(/,\n            end: /\\)/,\n            excludeBegin: true,\n            excludeEnd: true,\n            contains: [\n              hljs.C_LINE_COMMENT_MODE,\n              hljs.C_BLOCK_COMMENT_MODE\n            ]\n          }\n        ],\n        illegal: /\\[|%/\n      },\n      {\n        // hack: prevents detection of keywords after dots\n        begin: '\\\\.' + hljs.IDENT_RE,\n        relevance: 0\n      },\n      ID_ID,\n      QML_ATTRIBUTE,\n      QML_OBJECT\n    ],\n    illegal: /#/\n  };\n}\n\nmodule.exports = qml;\n\n};"],
"names":["shadow$provide","global","require","module","exports","concat","args","map","x","source","join","joined","qml","hljs","QML_OBJECT","begin","QML_IDENT_RE","end","returnBegin","relevance","contains","inherit","TITLE_MODE","name","aliases","case_insensitive","keywords","KEYWORDS","keyword","literal","built_in","className","APOS_STRING_MODE","QUOTE_STRING_MODE","BACKSLASH_ESCAPE","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","variants","C_NUMBER_RE","RE_STARTERS_RE","REGEXP_MODE","subLanguage","SIGNAL","starts","returnEnd","PROPERTY","beginKeywords","excludeEnd","excludeBegin","illegal","IDENT_RE","ID_ID","QML_ATTRIBUTE"]
}
