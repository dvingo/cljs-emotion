{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$ceylon.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,yDAAA,CAA8E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAkFtHD,MAAOC,CAAAA,OAAP,CA1EAC,QAAe,CAACC,IAAD,CAAO,CAcpB,MAAMC,MAAQ,CACZC,UAAW,OADC,CAEZC,aAAc,CAAA,CAFF,CAGZC,WAAY,CAAA,CAHA,CAIZC,MAAO,IAJK,CAKZC,IAAK,IALO,CAMZC,SAjBAC,gRAWY;AAOZC,UAAW,EAPC,CAAd,CASMC,YAAc,CAClB,CAEER,UAAW,QAFb,CAGEG,MAAO,KAHT,CAIEC,IAAK,KAJP,CAKEG,UAAW,EALb,CADkB,CAQlB,CAEEP,UAAW,QAFb,CAGEG,MAAO,GAHT,CAIEC,IAAK,GAJP,CAKEK,SAAU,CAACV,KAAD,CALZ,CARkB,CAelB,CAEEC,UAAW,QAFb,CAGEG,MAAO,GAHT,CAIEC,IAAK,GAJP,CAfkB,CAqBlB,CAEEJ,UAAW,QAFb,CAGEG,MAAO,+EAHT,CAIEI,UAAW,CAJb,CArBkB,CA4BpBR,MAAMU,CAAAA,QAAN,CAAiBD,WAEjB,OAAO,CACLE,KAAM,QADD,CAELL,SAAU,CACRM,QAAS,qYADD;AAERC,KA5CFC,kCA0CU,CAFL,CAMLC,QAAS,wBANJ,CAOLL,SAAU,CACRX,IAAKiB,CAAAA,mBADG,CAERjB,IAAKkB,CAAAA,OAAL,CAAa,MAAb,CAAqB,MAArB,CAA6B,CAC3BP,SAAU,CAAC,MAAD,CADiB,CAA7B,CAFQ,CAKR,CAEET,UAAW,MAFb,CAGEG,MAAO,yBAHT,CALQ,CAURc,CAAAA,MAVQ,CAUDT,WAVC,CAPL,CArDa,CARgG;",
"sources":["node_modules/highlight_DOT_js/lib/languages/ceylon.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$ceylon\"] = function(global,require,module,exports) {\n/*\nLanguage: Ceylon\nAuthor: Lucas Werkmeister <mail@lucaswerkmeister.de>\nWebsite: https://ceylon-lang.org\n*/\n\n/** @type LanguageFn */\nfunction ceylon(hljs) {\n  // 2.3. Identifiers and keywords\n  const KEYWORDS =\n    'assembly module package import alias class interface object given value ' +\n    'assign void function new of extends satisfies abstracts in out return ' +\n    'break continue throw assert dynamic if else switch case for while try ' +\n    'catch finally then let this outer super is exists nonempty';\n  // 7.4.1 Declaration Modifiers\n  const DECLARATION_MODIFIERS =\n    'shared abstract formal default actual variable late native deprecated ' +\n    'final sealed annotation suppressWarnings small';\n  // 7.4.2 Documentation\n  const DOCUMENTATION =\n    'doc by license see throws tagged';\n  const SUBST = {\n    className: 'subst',\n    excludeBegin: true,\n    excludeEnd: true,\n    begin: /``/,\n    end: /``/,\n    keywords: KEYWORDS,\n    relevance: 10\n  };\n  const EXPRESSIONS = [\n    {\n      // verbatim string\n      className: 'string',\n      begin: '\"\"\"',\n      end: '\"\"\"',\n      relevance: 10\n    },\n    {\n      // string literal or template\n      className: 'string',\n      begin: '\"',\n      end: '\"',\n      contains: [SUBST]\n    },\n    {\n      // character literal\n      className: 'string',\n      begin: \"'\",\n      end: \"'\"\n    },\n    {\n      // numeric literal\n      className: 'number',\n      begin: '#[0-9a-fA-F_]+|\\\\$[01_]+|[0-9_]+(?:\\\\.[0-9_](?:[eE][+-]?\\\\d+)?)?[kMGTPmunpf]?',\n      relevance: 0\n    }\n  ];\n  SUBST.contains = EXPRESSIONS;\n\n  return {\n    name: 'Ceylon',\n    keywords: {\n      keyword: KEYWORDS + ' ' + DECLARATION_MODIFIERS,\n      meta: DOCUMENTATION\n    },\n    illegal: '\\\\$[^01]|#[^0-9a-fA-F]',\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.COMMENT('/\\\\*', '\\\\*/', {\n        contains: ['self']\n      }),\n      {\n        // compiler annotation\n        className: 'meta',\n        begin: '@[a-z]\\\\w*(?::\"[^\"]*\")?'\n      }\n    ].concat(EXPRESSIONS)\n  };\n}\n\nmodule.exports = ceylon;\n\n};"],
"names":["shadow$provide","global","require","module","exports","ceylon","hljs","SUBST","className","excludeBegin","excludeEnd","begin","end","keywords","KEYWORDS","relevance","EXPRESSIONS","contains","name","keyword","meta","DOCUMENTATION","illegal","C_LINE_COMMENT_MODE","COMMENT","concat"]
}
