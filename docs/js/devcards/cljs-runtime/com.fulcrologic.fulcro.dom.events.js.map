{"version":3,"sources":["com/fulcrologic/fulcro/dom/events.cljc"],"mappings":"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","names":["com.fulcrologic.fulcro.dom.events/stop-propagation!","evt","com.fulcrologic.fulcro.dom.events/prevent-default!","com.fulcrologic.fulcro.dom.events/target-value","com.fulcrologic.fulcro.dom.events/is-key?","code","cljs.core._EQ_","com.fulcrologic.fulcro.dom.events/enter-key?","com.fulcrologic.fulcro.dom.events/escape-key?","com.fulcrologic.fulcro.dom.events/left-arrow?","com.fulcrologic.fulcro.dom.events/right-arrow?","com.fulcrologic.fulcro.dom.events/up-arrow?","com.fulcrologic.fulcro.dom.events/down-arrow?","com.fulcrologic.fulcro.dom.events/page-up?","com.fulcrologic.fulcro.dom.events/page-down?","com.fulcrologic.fulcro.dom.events/enter?","com.fulcrologic.fulcro.dom.events/escape?","com.fulcrologic.fulcro.dom.events/delete?","com.fulcrologic.fulcro.dom.events/tab?","com.fulcrologic.fulcro.dom.events/end?","com.fulcrologic.fulcro.dom.events/home?","com.fulcrologic.fulcro.dom.events/alt?","com.fulcrologic.fulcro.dom.events/ctrl?","com.fulcrologic.fulcro.dom.events/shift?","com.fulcrologic.fulcro.dom.events/F1?","com.fulcrologic.fulcro.dom.events/F2?","com.fulcrologic.fulcro.dom.events/F3?","com.fulcrologic.fulcro.dom.events/F4?","com.fulcrologic.fulcro.dom.events/F5?","com.fulcrologic.fulcro.dom.events/F6?","com.fulcrologic.fulcro.dom.events/F7?","com.fulcrologic.fulcro.dom.events/F8?","com.fulcrologic.fulcro.dom.events/F9?","com.fulcrologic.fulcro.dom.events/F10?","com.fulcrologic.fulcro.dom.events/F11?","com.fulcrologic.fulcro.dom.events/F12?"],"sourcesContent":["(ns com.fulcrologic.fulcro.dom.events\n  \"Utility functions for working with low-level synthetic js events on the DOM\")\n\n(defn stop-propagation!\n  \"Calls .stopPropagation on the given event. Safe to use in CLJC files.\"\n  [evt] #?(:cljs (.stopPropagation ^js evt)))\n\n(defn prevent-default!\n  \"Calls .preventDefault on the given event. Safe to use in CLJC files.\"\n  [evt] #?(:cljs (.preventDefault ^js evt)))\n\n(defn target-value\n  \"Returns the event #js evt.target.value. Safe to use in CLJC.\"\n  [evt]\n  #?(:cljs (.. evt -target -value)))\n\n(defn is-key?\n  \"Is the given key code on the given event?\"\n  #?(:cljs {:tag boolean})\n  [code evt] (= code (.-keyCode evt)))\n\n(defn enter-key? \"Returns true if the event has the keyCode of the function name.\" #?(:cljs {:tag boolean}) [evt] (is-key? 13 evt))\n(defn escape-key? \"Returns true if the event has the keyCode of the function name.\" #?(:cljs {:tag boolean}) [evt] (is-key? 27 evt))\n(defn left-arrow? \"Returns true if the event has the keyCode of the function name.\" #?(:cljs {:tag boolean}) [evt] (is-key? 37 evt))\n(defn right-arrow? \"Returns true if the event has the keyCode of the function name.\" #?(:cljs {:tag boolean}) [evt] (is-key? 39 evt))\n(defn up-arrow? \"Returns true if the event has the keyCode of the function name.\" #?(:cljs {:tag boolean}) [evt] (is-key? 38 evt))\n(defn down-arrow? \"Returns true if the event has the keyCode of the function name.\" #?(:cljs {:tag boolean}) [evt] (is-key? 40 evt))\n(defn page-up? \"Returns true if the event has the keyCode of the function name.\" #?(:cljs {:tag boolean}) [evt] (is-key? 33 evt))\n(defn page-down? \"Returns true if the event has the keyCode of the function name.\" #?(:cljs {:tag boolean}) [evt] (is-key? 34 evt))\n(defn enter? \"Returns true if the event has the keyCode of the function name.\" #?(:cljs {:tag boolean}) [evt] (is-key? 13 evt))\n(defn escape? \"Returns true if the event has the keyCode of the function name.\" #?(:cljs {:tag boolean}) [evt] (is-key? 27 evt))\n(defn delete? \"Returns true if the event has the keyCode of the function name.\" #?(:cljs {:tag boolean}) [evt] (is-key? 46 evt))\n(defn tab? \"Returns true if the event has the keyCode of the function name.\" #?(:cljs {:tag boolean}) [evt] (is-key? 9 evt))\n(defn end? \"Returns true if the event has the keyCode of the function name.\" #?(:cljs {:tag boolean}) [evt] (is-key? 35 evt))\n(defn home? \"Returns true if the event has the keyCode of the function name.\" #?(:cljs {:tag boolean}) [evt] (is-key? 36 evt))\n(defn alt? \"Returns true if the event has the keyCode of the function name.\" #?(:cljs {:tag boolean}) [evt] (is-key? 18 evt))\n(defn ctrl? \"Returns true if the event has the keyCode of the function name.\" #?(:cljs {:tag boolean}) [evt] (is-key? 17 evt))\n(defn shift? \"Returns true if the event has the keyCode of the function name.\" #?(:cljs {:tag boolean}) [evt] (is-key? 16 evt))\n(defn F1? \"Returns true if the event has the keyCode of the function name.\" #?(:cljs {:tag boolean}) [evt] (is-key? 112 evt))\n(defn F2? \"Returns true if the event has the keyCode of the function name.\" #?(:cljs {:tag boolean}) [evt] (is-key? 113 evt))\n(defn F3? \"Returns true if the event has the keyCode of the function name.\" #?(:cljs {:tag boolean}) [evt] (is-key? 114 evt))\n(defn F4? \"Returns true if the event has the keyCode of the function name.\" #?(:cljs {:tag boolean}) [evt] (is-key? 115 evt))\n(defn F5? \"Returns true if the event has the keyCode of the function name.\" #?(:cljs {:tag boolean}) [evt] (is-key? 116 evt))\n(defn F6? \"Returns true if the event has the keyCode of the function name.\" #?(:cljs {:tag boolean}) [evt] (is-key? 117 evt))\n(defn F7? \"Returns true if the event has the keyCode of the function name.\" #?(:cljs {:tag boolean}) [evt] (is-key? 118 evt))\n(defn F8? \"Returns true if the event has the keyCode of the function name.\" #?(:cljs {:tag boolean}) [evt] (is-key? 119 evt))\n(defn F9? \"Returns true if the event has the keyCode of the function name.\" #?(:cljs {:tag boolean}) [evt] (is-key? 120 evt))\n(defn F10? \"Returns true if the event has the keyCode of the function name.\" #?(:cljs {:tag boolean}) [evt] (is-key? 121 evt))\n(defn F11? \"Returns true if the event has the keyCode of the function name.\" #?(:cljs {:tag boolean}) [evt] (is-key? 122 evt))\n(defn F12? \"Returns true if the event has the keyCode of the function name.\" #?(:cljs {:tag boolean}) [evt] (is-key? 123 evt))\n"]}