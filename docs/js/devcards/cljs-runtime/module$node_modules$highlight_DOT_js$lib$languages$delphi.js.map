{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$delphi.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,CAAA,yDAAA,CAA8E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA8HtHD,MAAOC,CAAAA,OAAP,CAvHAC,QAAe,CAACC,IAAD,CAAO,CAapB,MAAMC,cAAgB,CACpBD,IAAKE,CAAAA,mBADe,CAEpBF,IAAKG,CAAAA,OAAL,CAAa,IAAb,CAAmB,IAAnB,CAAyB,CACvBC,UAAW,CADY,CAAzB,CAFoB,CAKpBJ,IAAKG,CAAAA,OAAL,CAAa,MAAb,CAAqB,MAArB,CAA6B,CAC3BC,UAAW,EADgB,CAA7B,CALoB,CAAtB,CASMC,UAAY,CAChBC,UAAW,MADK,CAEhBC,SAAU,CACR,CACEC,MAAO,MADT,CAEEC,IAAK,IAFP,CADQ,CAKR,CACED,MAAO,QADT,CAEEC,IAAK,MAFP,CALQ,CAFM,CATlB,CAsBMC,OAAS,CACbJ,UAAW,QADE,CAEbE,MAAO,GAFM,CAGbC,IAAK,GAHQ,CAIbE,SAAU,CAAC,CACTH,MAAO,IADE,CAAD,CAJG,CAtBf,CAiDMI,YAAc,CAClBN,UAAW,QADO,CAElBE,MAAO,SAFW,CAjDpB,CAqDMK,MAAQ,CACZL,MAAOR,IAAKc,CAAAA,QAAZN;AAAuB,0BADX,CAEZO,YAAa,CAAA,CAFD,CAGZJ,SAAU,CAACX,IAAKgB,CAAAA,UAAN,CAHE,CArDd,CA0DMC,SAAW,CACfX,UAAW,UADI,CAEfY,cAAe,2CAFA,CAGfT,IAAK,MAHU,CAIfU,SAAU,oDAJK,CAKfR,SAAU,CACRX,IAAKgB,CAAAA,UADG,CAER,CACEV,UAAW,QADb,CAEEE,MAAO,IAFT,CAGEC,IAAK,IAHP,CAIEU,SAhFJC,06BA4EE;AAKET,SAAU,CACRD,MADQ,CAERE,WAFQ,CAGRP,SAHQ,CAIRgB,CAAAA,MAJQ,CAIDpB,aAJC,CALZ,CAFQ,CAaRI,SAbQ,CAcRgB,CAAAA,MAdQ,CAcDpB,aAdC,CALK,CAqBjB,OAAO,CACLqB,KAAM,QADD,CAELC,QAAS,+CAAA,CAAA,KAAA,CAAA,GAAA,CAFJ,CAYLC,iBAAkB,CAAA,CAZb,CAaLL,SAvGAC,06BA0FK;AAcLK,QAAS,0BAdJ,CAeLd,SAAU,CACRD,MADQ,CAERE,WAFQ,CAGRZ,IAAK0B,CAAAA,WAHG,CAhEGC,CACbrB,UAAW,QADEqB,CAEbvB,UAAW,CAFEuB,CAIbpB,SAAU,CACR,CAEEC,MAAO,iBAFT,CADQ,CAKR,CAEEA,MAAO,YAFT,CALQ,CASR,CAEEA,MAAO,QAFT,CATQ,CAJGmB,CAgEH,CAKRd,KALQ,CAMRI,QANQ,CAORZ,SAPQ,CAQRgB,CAAAA,MARQ,CAQDpB,aARC,CAfL,CA5Fa,CAPgG;",
"sources":["node_modules/highlight_DOT_js/lib/languages/delphi.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$delphi\"] = function(global,require,module,exports) {\n/*\nLanguage: Delphi\nWebsite: https://www.embarcadero.com/products/delphi\n*/\n\n/** @type LanguageFn */\nfunction delphi(hljs) {\n  const KEYWORDS =\n    'exports register file shl array record property for mod while set ally label uses raise not ' +\n    'stored class safecall var interface or private static exit index inherited to else stdcall ' +\n    'override shr asm far resourcestring finalization packed virtual out and protected library do ' +\n    'xorwrite goto near function end div overload object unit begin string on inline repeat until ' +\n    'destructor write message program with read initialization except default nil if case cdecl in ' +\n    'downto threadvar of try pascal const external constructor type public then implementation ' +\n    'finally published procedure absolute reintroduce operator as is abstract alias assembler ' +\n    'bitpacked break continue cppdecl cvar enumerator experimental platform deprecated ' +\n    'unimplemented dynamic export far16 forward generic helper implements interrupt iochecks ' +\n    'local name nodefault noreturn nostackframe oldfpccall otherwise saveregisters softfloat ' +\n    'specialize strict unaligned varargs ';\n  const COMMENT_MODES = [\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.COMMENT(/\\{/, /\\}/, {\n      relevance: 0\n    }),\n    hljs.COMMENT(/\\(\\*/, /\\*\\)/, {\n      relevance: 10\n    })\n  ];\n  const DIRECTIVE = {\n    className: 'meta',\n    variants: [\n      {\n        begin: /\\{\\$/,\n        end: /\\}/\n      },\n      {\n        begin: /\\(\\*\\$/,\n        end: /\\*\\)/\n      }\n    ]\n  };\n  const STRING = {\n    className: 'string',\n    begin: /'/,\n    end: /'/,\n    contains: [{\n      begin: /''/\n    }]\n  };\n  const NUMBER = {\n    className: 'number',\n    relevance: 0,\n    // Source: https://www.freepascal.org/docs-html/ref/refse6.html\n    variants: [\n      {\n        // Hexadecimal notation, e.g., $7F.\n        begin: '\\\\$[0-9A-Fa-f]+'\n      },\n      {\n        // Octal notation, e.g., &42.\n        begin: '&[0-7]+'\n      },\n      {\n        // Binary notation, e.g., %1010.\n        begin: '%[01]+'\n      }\n    ]\n  };\n  const CHAR_STRING = {\n    className: 'string',\n    begin: /(#\\d+)+/\n  };\n  const CLASS = {\n    begin: hljs.IDENT_RE + '\\\\s*=\\\\s*class\\\\s*\\\\(',\n    returnBegin: true,\n    contains: [hljs.TITLE_MODE]\n  };\n  const FUNCTION = {\n    className: 'function',\n    beginKeywords: 'function constructor destructor procedure',\n    end: /[:;]/,\n    keywords: 'function constructor|10 destructor|10 procedure|10',\n    contains: [\n      hljs.TITLE_MODE,\n      {\n        className: 'params',\n        begin: /\\(/,\n        end: /\\)/,\n        keywords: KEYWORDS,\n        contains: [\n          STRING,\n          CHAR_STRING,\n          DIRECTIVE\n        ].concat(COMMENT_MODES)\n      },\n      DIRECTIVE\n    ].concat(COMMENT_MODES)\n  };\n  return {\n    name: 'Delphi',\n    aliases: [\n      'dpr',\n      'dfm',\n      'pas',\n      'pascal',\n      'freepascal',\n      'lazarus',\n      'lpr',\n      'lfm'\n    ],\n    case_insensitive: true,\n    keywords: KEYWORDS,\n    illegal: /\"|\\$[G-Zg-z]|\\/\\*|<\\/|\\|/,\n    contains: [\n      STRING,\n      CHAR_STRING,\n      hljs.NUMBER_MODE,\n      NUMBER,\n      CLASS,\n      FUNCTION,\n      DIRECTIVE\n    ].concat(COMMENT_MODES)\n  };\n}\n\nmodule.exports = delphi;\n\n};"],
"names":["shadow$provide","global","require","module","exports","delphi","hljs","COMMENT_MODES","C_LINE_COMMENT_MODE","COMMENT","relevance","DIRECTIVE","className","variants","begin","end","STRING","contains","CHAR_STRING","CLASS","IDENT_RE","returnBegin","TITLE_MODE","FUNCTION","beginKeywords","keywords","KEYWORDS","concat","name","aliases","case_insensitive","illegal","NUMBER_MODE","NUMBER"]
}
