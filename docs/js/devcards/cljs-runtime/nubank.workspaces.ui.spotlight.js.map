{"version":3,"sources":["nubank/workspaces/ui/spotlight.cljs"],"mappings":"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","names":["nubank.workspaces.ui.spotlight/max-results","nubank.workspaces.ui.spotlight/spotlight-lookup-debounce-ms","p__59116","map__59117","cljs.core/--destructure-map","cljs.core.get","nubank.workspaces.ui.spotlight/value->label","id","label","or__4253__auto__","p__59124","map__59125","nubank.workspaces.ui.spotlight/value->key","type","opt","cljs.core._EQ_","G__59129","cljs.core/name","p__59135","map__59136","nubank.workspaces.ui.spotlight/fuzzy-match","options","search-input","com.wsscode.fuzzy/fuzzy-match","p1__59131#","cljs.core.map","cljs.core.assoc","com.fulcrologic.fulcro.ui-state-machines/register-state-machine!","nubank.workspaces.ui.spotlight/spotlight-sm","env","com.fulcrologic.fulcro.ui-state-machines/activate","map__59144","map__59150","data","com.fulcrologic.fulcro.ui-state-machines/aliased-data","com.fulcrologic.fulcro.ui_state_machines.set_aliased_value","cljs.core/count","nubank.workspaces.ui.spotlight/reset","com.fulcrologic.fulcro.mutations/->Mutation","com.fulcrologic.fulcro.mutations/mutate","fulcro-mutation-env-symbol","map__59154","p__59158","map__59159","*after-render*-orig-val__59160","com.fulcrologic.fulcro.raw.components/*after-render*","*after-render*-temp-val__59161","*after-render*-orig-val__59166","*after-render*-temp-val__59167","temp__5753__auto__","com.fulcrologic.fulcro.algorithms.lookup/app-algorithm","default-action","state","ref","map__59165","filter","cljs.core/deref","cljs.core.get_in","cljs.core.sort_by","filtered-options","cljs.core.swap_BANG_","cljs.core/update-in","cljs.core/assoc","options__48885__auto__","com.fulcrologic.fulcro.components/wrapped-render","map__59178","com.fulcrologic.fulcro.components/props","js/nubank","js/nubank.workspaces","js/nubank.workspaces.ui","js/nubank.workspaces.ui.spotlight","js/nubank.workspaces.ui.spotlight.SpotlightEntry","props__48886__auto__","this__48887__auto__","temp__5751__auto__","init-state__48888__auto__","obj59193","G__59194","G__59195","com.fulcrologic.fulcro.components/isoget","obj59200","com.fulcrologic.fulcro.components/configure-component!","nubank.workspaces.ui.spotlight/SpotlightEntry","this","value","on-change","on-select","p1__59174#","com.fulcrologic.fulcro_css.localized_dom.div","G__59182","G__59183","G__59186","G__59188","cljs.core.not_EQ_","com.fulcrologic.fulcro_css.localized_dom.span","nubank.workspaces.ui.spotlight/spotlight-entry","com.fulcrologic.fulcro.components.factory","map__59230","map__59231","com.fulcrologic.fulcro.components/get-computed","com.fulcrologic.fulcro.components/get-extra-props","props","js/nubank.workspaces.ui.spotlight.Spotlight","obj59265","G__59266","G__59267","obj59271","nubank.workspaces.ui.spotlight/Spotlight","cljs.core/identity","css","cljs.core/random-uuid","cljs.core/first","nubank.workspaces.ui.core/font-helvetica","nubank.workspaces.ui.core/font-open-sans","nubank.workspaces.ui.cursor/VerticalCursor","com.fulcrologic.fulcro.ui_state_machines.begin_BANG_","nubank.workspaces.ui.spotlight.goog$module$goog$object.get","com.fulcrologic.fulcro.ui_state_machines.trigger_BANG_","p1__59204#","com.fulcrologic.fulcro.mutations/set-value!","lookup","e","map__59248","G__59249","G__59252","G__59253","map__59255","map__59256","G__59257","com.fulcrologic.fulcro.ui-state-machines/set-string!","options'","cljs.core/seq","com.fulcrologic.fulcro.components.get_state","p1__59206#","com.fulcrologic.fulcro_css.localized_dom.input","nubank.workspaces.ui.spotlight.goog$module$goog$object.set","G__59235","nubank.workspaces.ui.cursor/vertical-cursor","cljs.core.take","nubank.workspaces.ui.spotlight/spotlight"],"sourcesContent":["(ns nubank.workspaces.ui.spotlight\n  (:require [com.wsscode.fuzzy :as fuzzy]\n            [com.fulcrologic.fulcro-css.localized-dom :as dom]\n            [com.fulcrologic.fulcro.mutations :as fm]\n            [com.fulcrologic.fulcro.components :as fp]\n            [com.fulcrologic.fulcro.ui-state-machines :as fsm]\n            [goog.functions :as gfun]\n            [goog.object :as gobj]\n            [nubank.workspaces.ui.core :as uc]\n            [nubank.workspaces.ui.cursor :as cursor]\n            [nubank.workspaces.ui.events :as dom-events]))\n\n(def max-results 50)\n(def spotlight-lookup-debounce-ms 150)\n\n(defn value->label [{::keys [id label]}]\n  (or label (str id)))\n\n(defn value->key [{::keys [type id] :as opt}]\n  (if (= type ::workspace)\n    (str id)\n    (str (some-> opt ::type name) \"-\" (value->label opt))))\n\n(defn fuzzy-match [{:keys [options search-input]}]\n  (fuzzy/fuzzy-match {::fuzzy/search-input search-input\n                      ::fuzzy/options      (map #(assoc % ::fuzzy/string (value->label %)) options)}))\n\n(fsm/defstatemachine spotlight-sm\n  {::fsm/aliases\n   {:search-input    [:spotlight ::filter]\n    :options         [:spotlight ::options]\n    :current-options [:spotlight ::filtered-options]}\n\n   ::fsm/states\n   {:initial\n    {::fsm/handler\n     (fn [env]\n       (-> env\n           (fsm/activate :searching)))}\n\n    :searching\n    {::fsm/events\n     {::fsm/value-changed\n      {}\n\n      :lookup!\n      {::fsm/handler\n       (fn [env]\n         (let [{:keys [search-input options] :as data} (fsm/aliased-data env)]\n           (-> env\n               (fsm/set-aliased-value :current-options\n                 (if (< (count search-input) 3)\n                   options\n                   (fuzzy-match data))))))}\n\n      :exit!\n      {::fsm/target-state ::fsm/exit}}}}})\n\n(fm/defmutation reset [{::keys [options]}]\n  (action [{:keys [state ref]}]\n    (let [{::keys [filter]} (get-in @state ref)\n          options          (sort-by value->label options)\n          filtered-options (fuzzy-match {:search-input filter :options options})]\n      (swap! state update-in ref assoc\n        ::options options\n        ::filtered-options filtered-options))))\n\n(fp/defsc SpotlightEntry\n  [this {::keys [opt value on-change on-select]}]\n  {:css [[:.option\n          {:color         \"#1d1d1d\"\n           :cursor        \"pointer\"\n           :font-size     \"16px\"\n           :padding       \"2px 3px\"\n           :white-space   \"nowrap\"\n           :overflow      \"hidden\"\n           :text-overflow \"ellipsis\"}\n\n          [:b\n           {:background \"#e2d610\"\n            :color      \"#000\"}]]\n\n         [:.option-type\n          {:font-size  \"11px\"\n           :font-style \"italic\"}]\n\n         [:.option-selected\n          {:background \"#582074\"\n           :color      \"#fff\"}]\n\n         [:.solo-hint\n          {:display \"none\"}]\n\n         [:$cljs-workspaces-extended-views\n          [:.option-selected\n           [:.solo-hint\n            {:display \"inline\"}]]]]}\n  (dom/div :.option {:classes [(if (= opt value) :.option-selected)]\n                     :onClick #(do\n                                 (on-change opt)\n                                 (on-select opt (.-altKey %)))}\n    (dom/div {:dangerouslySetInnerHTML {:__html (or (::fuzzy/match-hl opt) (value->label opt))}})\n    (dom/div :.option-type\n      (some-> opt ::type name)\n      (if (some-> opt ::type (not= ::workspace))\n        (dom/span :.solo-hint \" - open solo\")))))\n\n(def spotlight-entry (fp/factory SpotlightEntry))\n\n(fp/defsc Spotlight\n  [this\n   {::keys [options filter value filtered-options]}\n   {::keys [on-select]\n    :or    {on-select identity}}\n   css]\n  {:initial-state        (fn [options]\n                           (let [options (sort-by value->label options)]\n                             {::id               (random-uuid)\n                              ::options          options\n                              ::value            (first options)\n                              ::filter           \"\"\n                              ::filtered-options []}))\n   :ident                [::id ::id]\n   :query                [::id ::options ::filter ::filtered-options ::value]\n   :css                  [[:.area-container\n                           {:height \"600px\"}]\n\n                          [:.container\n                           {:background    \"#e2e2e2\"\n                            :border-radius \"3px\"\n                            :box-shadow    \"0 6px 6px rgba(0, 0, 0, 0.26), 0 10px 20px rgba(0, 0, 0, 0.19), 0 0 2px rgba(0,0,0,0.3)\"\n                            :padding       \"10px\"}]\n\n                          [:.search\n                           {:background  \"#cccbcd\"\n                            :border      \"0\"\n                            :box-sizing  \"border-box\"\n                            :color       \"#000\"\n                            :font-family uc/font-helvetica\n                            :font-size   \"32px\"\n                            :outline     \"0\"\n                            :padding     \"10px\"\n                            :width       \"100%\"}]\n\n                          [:.options\n                           {:font-family uc/font-open-sans\n                            :margin-top  \"10px\"}]]\n   :css-include          [cursor/VerticalCursor SpotlightEntry]\n   :componentDidMount    (fn [this]\n                           (fsm/begin! this spotlight-sm ::spotlight {:spotlight this})\n                           (.select (gobj/get this \"input\")))\n   :componentWillUnmount (fn [this]\n                           (fsm/trigger! this ::spotlight :exit!))\n   :initLocalState       (fn [this]\n                           (let [on-change #(fm/set-value! this ::value %)\n                                 lookup    (fn []\n                                             (fsm/trigger! this ::spotlight :lookup!))]\n                             {:cursor-select\n                              (fn [opt e]\n                                (let [{::keys [on-select]\n                                       :or    {on-select identity}}\n                                      (-> this fp/props fp/get-computed)]\n                                  (.stopPropagation e)\n                                  (on-select opt (.-altKey e))))\n\n                              :cursor-change\n                              on-change\n\n                              :cursor-factory\n                              (fn [opt]\n                                (let [{::keys [value] :as props} (fp/props this)\n                                      {::keys [on-select] :or {on-select identity}}\n                                      (-> props fp/get-computed)]\n                                  (spotlight-entry {::opt       opt\n                                                    ::value     value\n                                                    ::on-change on-change\n                                                    ::on-select on-select})))\n\n                              :cursor-target\n                              #(gobj/get this \"input\")\n\n                              :update-input\n                              (fn [e]\n                                (fsm/set-string! this ::spotlight :search-input e)\n                                (lookup))}))}\n  (let [options'  (if (seq filter) filtered-options options)\n        on-change (fp/get-state this :cursor-change)]\n    (dom/div :.area-container\n      (dom/div :.container\n        (dom/input :.search {:value     filter\n                             :autoFocus true\n                             :ref       #(gobj/set this \"input\" %)\n                             :onChange  (fp/get-state this :update-input)})\n        (if (seq options')\n          (dom/div :.options\n            (cursor/vertical-cursor\n              {:style              {:maxHeight \"500px\"}\n               ::cursor/value      value\n               ::cursor/options    (take max-results options')\n               ::cursor/on-change  on-change\n               ::cursor/on-select  (fp/get-state this :cursor-select)\n               ::cursor/factory    (fp/get-state this :cursor-factory)\n               ::cursor/value->key value->key\n               ::dom-events/target (fp/get-state this :cursor-target)})))))))\n\n(def spotlight (fp/factory Spotlight))\n"]}