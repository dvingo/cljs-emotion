{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$parser3.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,0DAAA,CAA+E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAyDvHD,MAAOC,CAAAA,OAAP,CAhDAC,QAAgB,CAACC,IAAD,CAAO,CACrB,MAAMC,iBAAmBD,IAAKE,CAAAA,OAAL,CACvB,IADuB,CAEvB,IAFuB,CAGvB,CACEC,SAAU,CAAE,MAAF,CADZ,CAHuB,CAOzB,OAAO,CACLC,KAAM,SADD,CAELC,YAAa,KAFR,CAGLC,UAAW,CAHN,CAILH,SAAU,CACRH,IAAKE,CAAAA,OAAL,CAAa,IAAb,CAAmB,GAAnB,CADQ,CAERF,IAAKE,CAAAA,OAAL,CACE,SADF,CAEE,IAFF,CAGE,CACEI,UAAW,EADb,CAEEH,SAAU,CAAEF,gBAAF,CAFZ,CAHF,CAFQ,CAUR,CACEM,UAAW,MADb,CAEEC,MAAO,+BAFT,CAGEF,UAAW,EAHb,CAVQ,CAeR,CACEC,UAAW,OADb,CAEEC,MAAO,0DAFT,CAfQ;AAmBR,CACED,UAAW,UADb,CAEEC,MAAO,mBAFT,CAnBQ,CAuBR,CACED,UAAW,SADb,CAEEC,MAAO,aAFT,CAvBQ,CA2BR,CACED,UAAW,QADb,CAEEC,MAAO,kBAFT,CA3BQ,CA+BRR,IAAKS,CAAAA,aA/BG,CAJL,CARc,CATgG;",
"sources":["node_modules/highlight_DOT_js/lib/languages/parser3.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$parser3\"] = function(global,require,module,exports) {\n/*\nLanguage: Parser3\nRequires: xml.js\nAuthor: Oleg Volchkov <oleg@volchkov.net>\nWebsite: https://www.parser.ru/en/\nCategory: template\n*/\n\nfunction parser3(hljs) {\n  const CURLY_SUBCOMMENT = hljs.COMMENT(\n    /\\{/,\n    /\\}/,\n    {\n      contains: [ 'self' ]\n    }\n  );\n  return {\n    name: 'Parser3',\n    subLanguage: 'xml',\n    relevance: 0,\n    contains: [\n      hljs.COMMENT('^#', '$'),\n      hljs.COMMENT(\n        /\\^rem\\{/,\n        /\\}/,\n        {\n          relevance: 10,\n          contains: [ CURLY_SUBCOMMENT ]\n        }\n      ),\n      {\n        className: 'meta',\n        begin: '^@(?:BASE|USE|CLASS|OPTIONS)$',\n        relevance: 10\n      },\n      {\n        className: 'title',\n        begin: '@[\\\\w\\\\-]+\\\\[[\\\\w^;\\\\-]*\\\\](?:\\\\[[\\\\w^;\\\\-]*\\\\])?(?:.*)$'\n      },\n      {\n        className: 'variable',\n        begin: /\\$\\{?[\\w\\-.:]+\\}?/\n      },\n      {\n        className: 'keyword',\n        begin: /\\^[\\w\\-.:]+/\n      },\n      {\n        className: 'number',\n        begin: '\\\\^#[0-9a-fA-F]+'\n      },\n      hljs.C_NUMBER_MODE\n    ]\n  };\n}\n\nmodule.exports = parser3;\n\n};"],
"names":["shadow$provide","global","require","module","exports","parser3","hljs","CURLY_SUBCOMMENT","COMMENT","contains","name","subLanguage","relevance","className","begin","C_NUMBER_MODE"]
}
