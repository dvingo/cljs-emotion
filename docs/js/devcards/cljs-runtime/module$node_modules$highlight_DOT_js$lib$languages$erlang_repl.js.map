{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$erlang_repl.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,8DAAA,CAAmF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAqB3HC,QAASA,OAAM,CAAC,GAAGC,IAAJ,CAAU,CAEvB,MADeA,KAAKC,CAAAA,GAAL,CAAUC,CAAD,EAAO,CAVH,CAAA,CAUUA,CAXtC,CACkB,QAAlB,GAAI,MAUkCA,EAVtC,CAUsCA,CAVtC,CAUsCA,CAR5BC,CAAAA,MAHV,CAAgB,IAWe,OAAA,EAAA,CAAhB,CAA2BC,CAAAA,IAA3BC,CAAgC,EAAhCA,CADQ,CAiEzBR,MAAOC,CAAAA,OAAP,CApDAQ,QAAmB,CAACC,IAAD,CAAO,CACxB,MAAO,CACLC,KAAM,aADD,CAELC,SAAU,CACRC,SACE,uBAFM,CAGRC,QACE,6IAJM,CAFL,CASLC,SAAU,CACR,CACEC,UAAW,MADb;AAEEC,MAAO,cAFT,CAGEC,UAAW,EAHb,CADQ,CAMRR,IAAKS,CAAAA,OAAL,CAAa,GAAb,CAAkB,GAAlB,CANQ,CAOR,CACEH,UAAW,QADb,CAEEC,MAAO,+FAFT,CAGEC,UAAW,CAHb,CAPQ,CAYRR,IAAKU,CAAAA,gBAZG,CAaRV,IAAKW,CAAAA,iBAbG,CAcR,CACEJ,MAAOf,MAAA,CACL,SADK,CAEL,YAFK,CAGL,iBAHK,CADT,CAdQ,CAqBR,CACEe,MAAO,OADT,CArBQ,CAwBR,CACEA,MAAO,IADT,CAxBQ,CA2BR,CACEA,MAAO,GADT,CA3BQ,CA8BR,CACEA,MAAO,0EADT,CAEEC,UAAW,CAFb,CA9BQ,CAkCR,CACED,MAAO,qBADT,CAEEC,UAAW,CAFb,CAlCQ,CATL,CADiB,CAlCiG;",
"sources":["node_modules/highlight_DOT_js/lib/languages/erlang-repl.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$erlang_repl\"] = function(global,require,module,exports) {\n/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/*\nLanguage: Erlang REPL\nAuthor: Sergey Ignatov <sergey@ignatov.spb.su>\nWebsite: https://www.erlang.org\nCategory: functional\n*/\n\n/** @type LanguageFn */\nfunction erlangRepl(hljs) {\n  return {\n    name: 'Erlang REPL',\n    keywords: {\n      built_in:\n        'spawn spawn_link self',\n      keyword:\n        'after and andalso|10 band begin bnot bor bsl bsr bxor case catch cond div end fun if ' +\n        'let not of or orelse|10 query receive rem try when xor'\n    },\n    contains: [\n      {\n        className: 'meta',\n        begin: '^[0-9]+> ',\n        relevance: 10\n      },\n      hljs.COMMENT('%', '$'),\n      {\n        className: 'number',\n        begin: '\\\\b(\\\\d+(_\\\\d+)*#[a-fA-F0-9]+(_[a-fA-F0-9]+)*|\\\\d+(_\\\\d+)*(\\\\.\\\\d+(_\\\\d+)*)?([eE][-+]?\\\\d+)?)',\n        relevance: 0\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      {\n        begin: concat(\n          /\\?(::)?/,\n          /([A-Z]\\w*)/, // at least one identifier\n          /((::)[A-Z]\\w*)*/ // perhaps more\n        )\n      },\n      {\n        begin: '->'\n      },\n      {\n        begin: 'ok'\n      },\n      {\n        begin: '!'\n      },\n      {\n        begin: '(\\\\b[a-z\\'][a-zA-Z0-9_\\']*:[a-z\\'][a-zA-Z0-9_\\']*)|(\\\\b[a-z\\'][a-zA-Z0-9_\\']*)',\n        relevance: 0\n      },\n      {\n        begin: '[A-Z][a-zA-Z0-9_\\']*',\n        relevance: 0\n      }\n    ]\n  };\n}\n\nmodule.exports = erlangRepl;\n\n};"],
"names":["shadow$provide","global","require","module","exports","concat","args","map","x","source","join","joined","erlangRepl","hljs","name","keywords","built_in","keyword","contains","className","begin","relevance","COMMENT","APOS_STRING_MODE","QUOTE_STRING_MODE"]
}
