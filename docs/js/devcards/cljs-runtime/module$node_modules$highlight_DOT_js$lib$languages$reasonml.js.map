{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$reasonml.js",
"lineCount":9,
"mappings":"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",
"sources":["node_modules/highlight_DOT_js/lib/languages/reasonml.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$reasonml\"] = function(global,require,module,exports) {\n/*\nLanguage: ReasonML\nDescription: Reason lets you write simple, fast and quality type safe code while leveraging both the JavaScript & OCaml ecosystems.\nWebsite: https://reasonml.github.io\nAuthor: Gidi Meir Morris <oss@gidi.io>\nCategory: functional\n*/\nfunction reasonml(hljs) {\n  function orReValues(ops) {\n    return ops\n      .map(function(op) {\n        return op\n          .split('')\n          .map(function(char) {\n            return '\\\\' + char;\n          })\n          .join('');\n      })\n      .join('|');\n  }\n\n  const RE_IDENT = '~?[a-z$_][0-9a-zA-Z$_]*';\n  const RE_MODULE_IDENT = '`?[A-Z$_][0-9a-zA-Z$_]*';\n\n  const RE_PARAM_TYPEPARAM = '\\'?[a-z$_][0-9a-z$_]*';\n  const RE_PARAM_TYPE = '\\\\s*:\\\\s*[a-z$_][0-9a-z$_]*(\\\\(\\\\s*(' + RE_PARAM_TYPEPARAM + '\\\\s*(,' + RE_PARAM_TYPEPARAM + '\\\\s*)*)?\\\\))?';\n  const RE_PARAM = RE_IDENT + '(' + RE_PARAM_TYPE + '){0,2}';\n  const RE_OPERATOR = \"(\" + orReValues([\n    '||',\n    '++',\n    '**',\n    '+.',\n    '*',\n    '/',\n    '*.',\n    '/.',\n    '...'\n  ]) + \"|\\\\|>|&&|==|===)\";\n  const RE_OPERATOR_SPACED = \"\\\\s+\" + RE_OPERATOR + \"\\\\s+\";\n\n  const KEYWORDS = {\n    keyword:\n      'and as asr assert begin class constraint do done downto else end exception external ' +\n      'for fun function functor if in include inherit initializer ' +\n      'land lazy let lor lsl lsr lxor match method mod module mutable new nonrec ' +\n      'object of open or private rec sig struct then to try type val virtual when while with',\n    built_in:\n      'array bool bytes char exn|5 float int int32 int64 list lazy_t|5 nativeint|5 ref string unit ',\n    literal:\n      'true false'\n  };\n\n  const RE_NUMBER = '\\\\b(0[xX][a-fA-F0-9_]+[Lln]?|' +\n    '0[oO][0-7_]+[Lln]?|' +\n    '0[bB][01_]+[Lln]?|' +\n    '[0-9][0-9_]*([Lln]|(\\\\.[0-9_]*)?([eE][-+]?[0-9_]+)?)?)';\n\n  const NUMBER_MODE = {\n    className: 'number',\n    relevance: 0,\n    variants: [\n      {\n        begin: RE_NUMBER\n      },\n      {\n        begin: '\\\\(-' + RE_NUMBER + '\\\\)'\n      }\n    ]\n  };\n\n  const OPERATOR_MODE = {\n    className: 'operator',\n    relevance: 0,\n    begin: RE_OPERATOR\n  };\n  const LIST_CONTENTS_MODES = [\n    {\n      className: 'identifier',\n      relevance: 0,\n      begin: RE_IDENT\n    },\n    OPERATOR_MODE,\n    NUMBER_MODE\n  ];\n\n  const MODULE_ACCESS_CONTENTS = [\n    hljs.QUOTE_STRING_MODE,\n    OPERATOR_MODE,\n    {\n      className: 'module',\n      begin: \"\\\\b\" + RE_MODULE_IDENT,\n      returnBegin: true,\n      end: \"\\.\",\n      contains: [\n        {\n          className: 'identifier',\n          begin: RE_MODULE_IDENT,\n          relevance: 0\n        }\n      ]\n    }\n  ];\n\n  const PARAMS_CONTENTS = [\n    {\n      className: 'module',\n      begin: \"\\\\b\" + RE_MODULE_IDENT,\n      returnBegin: true,\n      end: \"\\.\",\n      relevance: 0,\n      contains: [\n        {\n          className: 'identifier',\n          begin: RE_MODULE_IDENT,\n          relevance: 0\n        }\n      ]\n    }\n  ];\n\n  const PARAMS_MODE = {\n    begin: RE_IDENT,\n    end: '(,|\\\\n|\\\\))',\n    relevance: 0,\n    contains: [\n      OPERATOR_MODE,\n      {\n        className: 'typing',\n        begin: ':',\n        end: '(,|\\\\n)',\n        returnBegin: true,\n        relevance: 0,\n        contains: PARAMS_CONTENTS\n      }\n    ]\n  };\n\n  const FUNCTION_BLOCK_MODE = {\n    className: 'function',\n    relevance: 0,\n    keywords: KEYWORDS,\n    variants: [\n      {\n        begin: '\\\\s(\\\\(\\\\.?.*?\\\\)|' + RE_IDENT + ')\\\\s*=>',\n        end: '\\\\s*=>',\n        returnBegin: true,\n        relevance: 0,\n        contains: [\n          {\n            className: 'params',\n            variants: [\n              {\n                begin: RE_IDENT\n              },\n              {\n                begin: RE_PARAM\n              },\n              {\n                begin: /\\(\\s*\\)/\n              }\n            ]\n          }\n        ]\n      },\n      {\n        begin: '\\\\s\\\\(\\\\.?[^;\\\\|]*\\\\)\\\\s*=>',\n        end: '\\\\s=>',\n        returnBegin: true,\n        relevance: 0,\n        contains: [\n          {\n            className: 'params',\n            relevance: 0,\n            variants: [ PARAMS_MODE ]\n          }\n        ]\n      },\n      {\n        begin: '\\\\(\\\\.\\\\s' + RE_IDENT + '\\\\)\\\\s*=>'\n      }\n    ]\n  };\n  MODULE_ACCESS_CONTENTS.push(FUNCTION_BLOCK_MODE);\n\n  const CONSTRUCTOR_MODE = {\n    className: 'constructor',\n    begin: RE_MODULE_IDENT + '\\\\(',\n    end: '\\\\)',\n    illegal: '\\\\n',\n    keywords: KEYWORDS,\n    contains: [\n      hljs.QUOTE_STRING_MODE,\n      OPERATOR_MODE,\n      {\n        className: 'params',\n        begin: '\\\\b' + RE_IDENT\n      }\n    ]\n  };\n\n  const PATTERN_MATCH_BLOCK_MODE = {\n    className: 'pattern-match',\n    begin: '\\\\|',\n    returnBegin: true,\n    keywords: KEYWORDS,\n    end: '=>',\n    relevance: 0,\n    contains: [\n      CONSTRUCTOR_MODE,\n      OPERATOR_MODE,\n      {\n        relevance: 0,\n        className: 'constructor',\n        begin: RE_MODULE_IDENT\n      }\n    ]\n  };\n\n  const MODULE_ACCESS_MODE = {\n    className: 'module-access',\n    keywords: KEYWORDS,\n    returnBegin: true,\n    variants: [\n      {\n        begin: \"\\\\b(\" + RE_MODULE_IDENT + \"\\\\.)+\" + RE_IDENT\n      },\n      {\n        begin: \"\\\\b(\" + RE_MODULE_IDENT + \"\\\\.)+\\\\(\",\n        end: \"\\\\)\",\n        returnBegin: true,\n        contains: [\n          FUNCTION_BLOCK_MODE,\n          {\n            begin: '\\\\(',\n            end: '\\\\)',\n            skip: true\n          }\n        ].concat(MODULE_ACCESS_CONTENTS)\n      },\n      {\n        begin: \"\\\\b(\" + RE_MODULE_IDENT + \"\\\\.)+\\\\{\",\n        end: /\\}/\n      }\n    ],\n    contains: MODULE_ACCESS_CONTENTS\n  };\n\n  PARAMS_CONTENTS.push(MODULE_ACCESS_MODE);\n\n  return {\n    name: 'ReasonML',\n    aliases: [ 're' ],\n    keywords: KEYWORDS,\n    illegal: '(:-|:=|\\\\$\\\\{|\\\\+=)',\n    contains: [\n      hljs.COMMENT('/\\\\*', '\\\\*/', {\n        illegal: '^(#,\\\\/\\\\/)'\n      }),\n      {\n        className: 'character',\n        begin: '\\'(\\\\\\\\[^\\']+|[^\\'])\\'',\n        illegal: '\\\\n',\n        relevance: 0\n      },\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'literal',\n        begin: '\\\\(\\\\)',\n        relevance: 0\n      },\n      {\n        className: 'literal',\n        begin: '\\\\[\\\\|',\n        end: '\\\\|\\\\]',\n        relevance: 0,\n        contains: LIST_CONTENTS_MODES\n      },\n      {\n        className: 'literal',\n        begin: '\\\\[',\n        end: '\\\\]',\n        relevance: 0,\n        contains: LIST_CONTENTS_MODES\n      },\n      CONSTRUCTOR_MODE,\n      {\n        className: 'operator',\n        begin: RE_OPERATOR_SPACED,\n        illegal: '--\u003e',\n        relevance: 0\n      },\n      NUMBER_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      PATTERN_MATCH_BLOCK_MODE,\n      FUNCTION_BLOCK_MODE,\n      {\n        className: 'module-def',\n        begin: \"\\\\bmodule\\\\s+\" + RE_IDENT + \"\\\\s+\" + RE_MODULE_IDENT + \"\\\\s+=\\\\s+\\\\{\",\n        end: /\\}/,\n        returnBegin: true,\n        keywords: KEYWORDS,\n        relevance: 0,\n        contains: [\n          {\n            className: 'module',\n            relevance: 0,\n            begin: RE_MODULE_IDENT\n          },\n          {\n            begin: /\\{/,\n            end: /\\}/,\n            skip: true\n          }\n        ].concat(MODULE_ACCESS_CONTENTS)\n      },\n      MODULE_ACCESS_MODE\n    ]\n  };\n}\n\nmodule.exports = reasonml;\n\n};"],
"names":["shadow$provide","global","require","module","exports","reasonml","hljs","RE_OPERATOR","orReValues","ops","map","op","split","char","join","RE_OPERATOR_SPACED","KEYWORDS","keyword","built_in","literal","NUMBER_MODE","className","relevance","variants","begin","RE_NUMBER","OPERATOR_MODE","LIST_CONTENTS_MODES","RE_IDENT","MODULE_ACCESS_CONTENTS","QUOTE_STRING_MODE","returnBegin","end","contains","RE_MODULE_IDENT","PARAMS_CONTENTS","FUNCTION_BLOCK_MODE","keywords","RE_PARAM","PARAMS_MODE","push","CONSTRUCTOR_MODE","illegal","PATTERN_MATCH_BLOCK_MODE","MODULE_ACCESS_MODE","skip","concat","name","aliases","COMMENT","C_LINE_COMMENT_MODE"]
}
