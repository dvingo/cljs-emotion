{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$ini.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/highlight_DOT_js/lib/languages/ini.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$ini\"] = function(global,require,module,exports) {\n/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction lookahead(re) {\n  return concat('(?=', re, ')');\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/**\n * Any of the passed expresssions may match\n *\n * Creates a huge this | this | that | that match\n * @param {(RegExp | string)[] } args\n * @returns {string}\n */\nfunction either(...args) {\n  const joined = '(' + args.map((x) => source(x)).join(\"|\") + \")\";\n  return joined;\n}\n\n/*\nLanguage: TOML, also INI\nDescription: TOML aims to be a minimal configuration file format that's easy to read due to obvious semantics.\nContributors: Guillaume Gomez <guillaume1.gomez@gmail.com>\nCategory: common, config\nWebsite: https://github.com/toml-lang/toml\n*/\n\nfunction ini(hljs) {\n  const NUMBERS = {\n    className: 'number',\n    relevance: 0,\n    variants: [\n      {\n        begin: /([+-]+)?[\\d]+_[\\d_]+/\n      },\n      {\n        begin: hljs.NUMBER_RE\n      }\n    ]\n  };\n  const COMMENTS = hljs.COMMENT();\n  COMMENTS.variants = [\n    {\n      begin: /;/,\n      end: /$/\n    },\n    {\n      begin: /#/,\n      end: /$/\n    }\n  ];\n  const VARIABLES = {\n    className: 'variable',\n    variants: [\n      {\n        begin: /\\$[\\w\\d\"][\\w\\d_]*/\n      },\n      {\n        begin: /\\$\\{(.*?)\\}/\n      }\n    ]\n  };\n  const LITERALS = {\n    className: 'literal',\n    begin: /\\bon|off|true|false|yes|no\\b/\n  };\n  const STRINGS = {\n    className: \"string\",\n    contains: [hljs.BACKSLASH_ESCAPE],\n    variants: [\n      {\n        begin: \"'''\",\n        end: \"'''\",\n        relevance: 10\n      },\n      {\n        begin: '\"\"\"',\n        end: '\"\"\"',\n        relevance: 10\n      },\n      {\n        begin: '\"',\n        end: '\"'\n      },\n      {\n        begin: \"'\",\n        end: \"'\"\n      }\n    ]\n  };\n  const ARRAY = {\n    begin: /\\[/,\n    end: /\\]/,\n    contains: [\n      COMMENTS,\n      LITERALS,\n      VARIABLES,\n      STRINGS,\n      NUMBERS,\n      'self'\n    ],\n    relevance: 0\n  };\n\n  const BARE_KEY = /[A-Za-z0-9_-]+/;\n  const QUOTED_KEY_DOUBLE_QUOTE = /\"(\\\\\"|[^\"])*\"/;\n  const QUOTED_KEY_SINGLE_QUOTE = /'[^']*'/;\n  const ANY_KEY = either(\n    BARE_KEY, QUOTED_KEY_DOUBLE_QUOTE, QUOTED_KEY_SINGLE_QUOTE\n  );\n  const DOTTED_KEY = concat(\n    ANY_KEY, '(\\\\s*\\\\.\\\\s*', ANY_KEY, ')*',\n    lookahead(/\\s*=\\s*[^#\\s]/)\n  );\n\n  return {\n    name: 'TOML, also INI',\n    aliases: ['toml'],\n    case_insensitive: true,\n    illegal: /\\S/,\n    contains: [\n      COMMENTS,\n      {\n        className: 'section',\n        begin: /\\[+/,\n        end: /\\]+/\n      },\n      {\n        begin: DOTTED_KEY,\n        className: 'attr',\n        starts: {\n          end: /$/,\n          contains: [\n            COMMENTS,\n            ARRAY,\n            LITERALS,\n            VARIABLES,\n            STRINGS,\n            NUMBERS\n          ]\n        }\n      }\n    ]\n  };\n}\n\nmodule.exports = ini;\n\n};"],
"names":["shadow$provide","global","require","module","exports","concat","args","map","x","source","join","joined","either","ini","hljs","NUMBERS","className","relevance","variants","begin","NUMBER_RE","COMMENTS","COMMENT","end","VARIABLES","LITERALS","STRINGS","contains","BACKSLASH_ESCAPE","ARRAY","ANY_KEY","BARE_KEY","QUOTED_KEY_DOUBLE_QUOTE","QUOTED_KEY_SINGLE_QUOTE","DOTTED_KEY","re","name","aliases","case_insensitive","illegal","starts"]
}
