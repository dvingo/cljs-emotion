{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$elixir.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/highlight_DOT_js/lib/languages/elixir.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$elixir\"] = function(global,require,module,exports) {\n/*\nLanguage: Elixir\nAuthor: Josh Adams <josh@isotope11.com>\nDescription: language definition for Elixir source code files (.ex and .exs).  Based on ruby language support.\nCategory: functional\nWebsite: https://elixir-lang.org\n*/\n\n/** @type LanguageFn */\nfunction elixir(hljs) {\n  const ELIXIR_IDENT_RE = '[a-zA-Z_][a-zA-Z0-9_.]*(!|\\\\?)?';\n  const ELIXIR_METHOD_RE = '[a-zA-Z_]\\\\w*[!?=]?|[-+~]@|<<|>>|=~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~`|]|\\\\[\\\\]=?';\n  const ELIXIR_KEYWORDS = {\n    $pattern: ELIXIR_IDENT_RE,\n    keyword: 'and false then defined module in return redo retry end for true self when ' +\n    'next until do begin unless nil break not case cond alias while ensure or ' +\n    'include use alias fn quote require import with|0'\n  };\n  const SUBST = {\n    className: 'subst',\n    begin: /#\\{/,\n    end: /\\}/,\n    keywords: ELIXIR_KEYWORDS\n  };\n  const NUMBER = {\n    className: 'number',\n    begin: '(\\\\b0o[0-7_]+)|(\\\\b0b[01_]+)|(\\\\b0x[0-9a-fA-F_]+)|(-?\\\\b[1-9][0-9_]*(\\\\.[0-9_]+([eE][-+]?[0-9]+)?)?)',\n    relevance: 0\n  };\n  const SIGIL_DELIMITERS = '[/|([{<\"\\']';\n  const LOWERCASE_SIGIL = {\n    className: 'string',\n    begin: '~[a-z]' + '(?=' + SIGIL_DELIMITERS + ')',\n    contains: [\n      {\n        endsParent: true,\n        contains: [\n          {\n            contains: [\n              hljs.BACKSLASH_ESCAPE,\n              SUBST\n            ],\n            variants: [\n              {\n                begin: /\"/,\n                end: /\"/\n              },\n              {\n                begin: /'/,\n                end: /'/\n              },\n              {\n                begin: /\\//,\n                end: /\\//\n              },\n              {\n                begin: /\\|/,\n                end: /\\|/\n              },\n              {\n                begin: /\\(/,\n                end: /\\)/\n              },\n              {\n                begin: /\\[/,\n                end: /\\]/\n              },\n              {\n                begin: /\\{/,\n                end: /\\}/\n              },\n              {\n                begin: /</,\n                end: />/\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  };\n\n  const UPCASE_SIGIL = {\n    className: 'string',\n    begin: '~[A-Z]' + '(?=' + SIGIL_DELIMITERS + ')',\n    contains: [\n      {\n        begin: /\"/,\n        end: /\"/\n      },\n      {\n        begin: /'/,\n        end: /'/\n      },\n      {\n        begin: /\\//,\n        end: /\\//\n      },\n      {\n        begin: /\\|/,\n        end: /\\|/\n      },\n      {\n        begin: /\\(/,\n        end: /\\)/\n      },\n      {\n        begin: /\\[/,\n        end: /\\]/\n      },\n      {\n        begin: /\\{/,\n        end: /\\}/\n      },\n      {\n        begin: /</,\n        end: />/\n      }\n    ]\n  };\n\n  const STRING = {\n    className: 'string',\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      SUBST\n    ],\n    variants: [\n      {\n        begin: /\"\"\"/,\n        end: /\"\"\"/\n      },\n      {\n        begin: /'''/,\n        end: /'''/\n      },\n      {\n        begin: /~S\"\"\"/,\n        end: /\"\"\"/,\n        contains: [] // override default\n      },\n      {\n        begin: /~S\"/,\n        end: /\"/,\n        contains: [] // override default\n      },\n      {\n        begin: /~S'''/,\n        end: /'''/,\n        contains: [] // override default\n      },\n      {\n        begin: /~S'/,\n        end: /'/,\n        contains: [] // override default\n      },\n      {\n        begin: /'/,\n        end: /'/\n      },\n      {\n        begin: /\"/,\n        end: /\"/\n      }\n    ]\n  };\n  const FUNCTION = {\n    className: 'function',\n    beginKeywords: 'def defp defmacro',\n    end: /\\B\\b/, // the mode is ended by the title\n    contains: [\n      hljs.inherit(hljs.TITLE_MODE, {\n        begin: ELIXIR_IDENT_RE,\n        endsParent: true\n      })\n    ]\n  };\n  const CLASS = hljs.inherit(FUNCTION, {\n    className: 'class',\n    beginKeywords: 'defimpl defmodule defprotocol defrecord',\n    end: /\\bdo\\b|$|;/\n  });\n  const ELIXIR_DEFAULT_CONTAINS = [\n    STRING,\n    UPCASE_SIGIL,\n    LOWERCASE_SIGIL,\n    hljs.HASH_COMMENT_MODE,\n    CLASS,\n    FUNCTION,\n    {\n      begin: '::'\n    },\n    {\n      className: 'symbol',\n      begin: ':(?![\\\\s:])',\n      contains: [\n        STRING,\n        {\n          begin: ELIXIR_METHOD_RE\n        }\n      ],\n      relevance: 0\n    },\n    {\n      className: 'symbol',\n      begin: ELIXIR_IDENT_RE + ':(?!:)',\n      relevance: 0\n    },\n    NUMBER,\n    {\n      className: 'variable',\n      begin: '(\\\\$\\\\W)|((\\\\$|@@?)(\\\\w+))'\n    },\n    {\n      begin: '->'\n    },\n    { // regexp container\n      begin: '(' + hljs.RE_STARTERS_RE + ')\\\\s*',\n      contains: [\n        hljs.HASH_COMMENT_MODE,\n        {\n          // to prevent false regex triggers for the division function:\n          // /:\n          begin: /\\/: (?=\\d+\\s*[,\\]])/,\n          relevance: 0,\n          contains: [NUMBER]\n        },\n        {\n          className: 'regexp',\n          illegal: '\\\\n',\n          contains: [\n            hljs.BACKSLASH_ESCAPE,\n            SUBST\n          ],\n          variants: [\n            {\n              begin: '/',\n              end: '/[a-z]*'\n            },\n            {\n              begin: '%r\\\\[',\n              end: '\\\\][a-z]*'\n            }\n          ]\n        }\n      ],\n      relevance: 0\n    }\n  ];\n  SUBST.contains = ELIXIR_DEFAULT_CONTAINS;\n\n  return {\n    name: 'Elixir',\n    keywords: ELIXIR_KEYWORDS,\n    contains: ELIXIR_DEFAULT_CONTAINS\n  };\n}\n\nmodule.exports = elixir;\n\n};"],
"names":["shadow$provide","global","require","module","exports","elixir","hljs","ELIXIR_KEYWORDS","$pattern","ELIXIR_IDENT_RE","keyword","SUBST","className","begin","end","keywords","NUMBER","relevance","LOWERCASE_SIGIL","contains","endsParent","BACKSLASH_ESCAPE","variants","STRING","FUNCTION","beginKeywords","inherit","TITLE_MODE","CLASS","ELIXIR_DEFAULT_CONTAINS","UPCASE_SIGIL","HASH_COMMENT_MODE","ELIXIR_METHOD_RE","RE_STARTERS_RE","illegal","name"]
}
