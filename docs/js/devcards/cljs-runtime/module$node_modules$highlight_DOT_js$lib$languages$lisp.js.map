{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$lisp.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,CAAA,uDAAA,CAA4E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA+GpHD,MAAOC,CAAAA,OAAP,CAvGAC,QAAa,CAACC,IAAD,CAAO,CAIlB,IAAIC,QAAU,CACZC,UAAW,SADC,CAEZC,MAAO,kBAFK,CAAd,CAIIC,OAAS,CACXF,UAAW,QADA,CAEXG,SAAU,CACR,CAACF,MARuBG,oEAQxB,CAA+BC,UAAW,CAA1C,CADQ,CAER,CAACJ,MAAO,wBAAR,CAFQ,CAGR,CAACA,MAAO,wBAAR,CAHQ,CAIR,CAACA,MAAO,oCAAR,CAJQ,CAKR,CAACA,MAAO,iJAAR;AAA4EK,IAAK,KAAjF,CALQ,CAFC,CAJb,CAcIC,OAAST,IAAKU,CAAAA,OAAL,CAAaV,IAAKW,CAAAA,iBAAlB,CAAqC,CAACC,QAAS,IAAV,CAArC,CAdb,CAeIC,QAAUb,IAAKa,CAAAA,OAAL,CACZ,GADY,CACP,GADO,CAEZ,CACEN,UAAW,CADb,CAFY,CAfd,CAqBIO,SAAW,CACbX,MAAO,KADM,CACCK,IAAK,KADN,CArBf,CAwBIO,QAAU,CACZb,UAAW,QADC,CAEZC,MAAO,oFAFK,CAxBd,CA4BIa,MAAQ,CACVb,MAhCkBc,6EA+BR,CAEVV,UAAW,CAFD,CA5BZ,CAuCIW,OAAS,CACXC,SAAU,CAACf,MAAD,CAASK,MAAT,CAAiBK,QAAjB,CAA2BC,OAA3B,CALMK,CAChBjB,MAAO,KADSiB,CACFZ,IAAK,KADHY,CAEhBD,SAAU,CAAC,MAAD,CAASlB,OAAT,CAAkBQ,MAAlB,CAA0BL,MAA1B,CAAkCY,KAAlC,CAFMI,CAKN,CAAiDJ,KAAjD,CADC,CAEXX,SAAU,CACR,CACEF,MAAO,SADT;AACqBK,IAAK,KAD1B,CADQ,CAIR,CACEL,MAAO,WADT,CACsBK,IAAK,KAD3B,CAEEa,SAAU,CAACC,KAAM,OAAP,CAFZ,CAJQ,CAQR,CACEnB,MAAO,cADT,CARQ,CAFC,CAvCb,CAsDIoB,YAAc,CAChBlB,SAAU,CACR,CAACF,MAAO,8EAAR,CADQ,CAER,CAACA,MAAO,+JAAR,CAFQ,CADM,CAtDlB,CA4DIqB,KAAO,CACTrB,MAAO,SADE,CACSK,IAAK,KADd,CA5DX,CA+DIiB,KAAO,CACTC,eAAgB,CAAA,CADP,CAETnB,UAAW,CAFF,CAIXiB,KAAKL,CAAAA,QAAL,CAAgB,CACd,CACEjB,UAAW,MADb,CAEEG,SAAU,CACR,CACEF,MA3EYc,6EA0Ed;AAEEV,UAAW,CAFb,CADQ,CAKR,CAACJ,MA7EMwB,aA6EP,CALQ,CAFZ,CADc,CAWdF,IAXc,CAahBA,KAAKN,CAAAA,QAAL,CAAgB,CAACD,MAAD,CAASK,WAAT,CAAsBC,IAAtB,CAA4BvB,OAA5B,CAAqCG,MAArC,CAA6CK,MAA7C,CAAqDI,OAArD,CAA8DC,QAA9D,CAAwEC,OAAxE,CAhDNa,CACRzB,MAnCWwB,aAkCHC,CAgDM,CAAsFZ,KAAtF,CAEhB,OAAO,CACLM,KAAM,MADD,CAELV,QAAS,IAFJ,CAGLO,SAAU,CACRf,MADQ,CAERJ,IAAK6B,CAAAA,OAAL,EAFQ,CAGR5B,OAHQ,CAIRQ,MAJQ,CAKRI,OALQ,CAMRK,MANQ,CAORK,WAPQ,CAQRC,IARQ,CASRR,KATQ,CAHL,CAtFW,CARgG;",
"sources":["node_modules/highlight_DOT_js/lib/languages/lisp.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$lisp\"] = function(global,require,module,exports) {\n/*\nLanguage: Lisp\nDescription: Generic lisp syntax\nAuthor: Vasily Polovnyov <vast@whiteants.net>\nCategory: lisp\n*/\n\nfunction lisp(hljs) {\n  var LISP_IDENT_RE = '[a-zA-Z_\\\\-+\\\\*\\\\/<=>&#][a-zA-Z0-9_\\\\-+*\\\\/<=>&#!]*';\n  var MEC_RE = '\\\\|[^]*?\\\\|';\n  var LISP_SIMPLE_NUMBER_RE = '(-|\\\\+)?\\\\d+(\\\\.\\\\d+|\\\\/\\\\d+)?((d|e|f|l|s|D|E|F|L|S)(\\\\+|-)?\\\\d+)?';\n  var LITERAL = {\n    className: 'literal',\n    begin: '\\\\b(t{1}|nil)\\\\b'\n  };\n  var NUMBER = {\n    className: 'number',\n    variants: [\n      {begin: LISP_SIMPLE_NUMBER_RE, relevance: 0},\n      {begin: '#(b|B)[0-1]+(/[0-1]+)?'},\n      {begin: '#(o|O)[0-7]+(/[0-7]+)?'},\n      {begin: '#(x|X)[0-9a-fA-F]+(/[0-9a-fA-F]+)?'},\n      {begin: '#(c|C)\\\\(' + LISP_SIMPLE_NUMBER_RE + ' +' + LISP_SIMPLE_NUMBER_RE, end: '\\\\)'}\n    ]\n  };\n  var STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null});\n  var COMMENT = hljs.COMMENT(\n    ';', '$',\n    {\n      relevance: 0\n    }\n  );\n  var VARIABLE = {\n    begin: '\\\\*', end: '\\\\*'\n  };\n  var KEYWORD = {\n    className: 'symbol',\n    begin: '[:&]' + LISP_IDENT_RE\n  };\n  var IDENT = {\n    begin: LISP_IDENT_RE,\n    relevance: 0\n  };\n  var MEC = {\n    begin: MEC_RE\n  };\n  var QUOTED_LIST = {\n    begin: '\\\\(', end: '\\\\)',\n    contains: ['self', LITERAL, STRING, NUMBER, IDENT]\n  };\n  var QUOTED = {\n    contains: [NUMBER, STRING, VARIABLE, KEYWORD, QUOTED_LIST, IDENT],\n    variants: [\n      {\n        begin: '[\\'`]\\\\(', end: '\\\\)'\n      },\n      {\n        begin: '\\\\(quote ', end: '\\\\)',\n        keywords: {name: 'quote'}\n      },\n      {\n        begin: '\\'' + MEC_RE\n      }\n    ]\n  };\n  var QUOTED_ATOM = {\n    variants: [\n      {begin: '\\'' + LISP_IDENT_RE},\n      {begin: '#\\'' + LISP_IDENT_RE + '(::' + LISP_IDENT_RE + ')*'}\n    ]\n  };\n  var LIST = {\n    begin: '\\\\(\\\\s*', end: '\\\\)'\n  };\n  var BODY = {\n    endsWithParent: true,\n    relevance: 0\n  };\n  LIST.contains = [\n    {\n      className: 'name',\n      variants: [\n        {\n          begin: LISP_IDENT_RE,\n          relevance: 0,\n        },\n        {begin: MEC_RE}\n      ]\n    },\n    BODY\n  ];\n  BODY.contains = [QUOTED, QUOTED_ATOM, LIST, LITERAL, NUMBER, STRING, COMMENT, VARIABLE, KEYWORD, MEC, IDENT];\n\n  return {\n    name: 'Lisp',\n    illegal: /\\S/,\n    contains: [\n      NUMBER,\n      hljs.SHEBANG(),\n      LITERAL,\n      STRING,\n      COMMENT,\n      QUOTED,\n      QUOTED_ATOM,\n      LIST,\n      IDENT\n    ]\n  };\n}\n\nmodule.exports = lisp;\n\n};"],
"names":["shadow$provide","global","require","module","exports","lisp","hljs","LITERAL","className","begin","NUMBER","variants","LISP_SIMPLE_NUMBER_RE","relevance","end","STRING","inherit","QUOTE_STRING_MODE","illegal","COMMENT","VARIABLE","KEYWORD","IDENT","LISP_IDENT_RE","QUOTED","contains","QUOTED_LIST","keywords","name","QUOTED_ATOM","LIST","BODY","endsWithParent","MEC_RE","MEC","SHEBANG"]
}
