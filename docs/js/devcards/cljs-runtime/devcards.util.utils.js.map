{"version":3,"sources":["devcards/util/utils.cljs"],"mappings":";;;;;AASA,AAAKA,mCAAaC;AAElB,sCAAA,tCAAMC;AAAN,AACE,IAAAC,qBAAaE;AAAb,AAAA,oBAAAF;AAAA,UAAAA,NAASC;AAAT,AACE,2DAAA,pDAACE,gDAASF;;AADZ;;;AAGF,sCAAA,tCAAMG;AAAN,AAAmB,UAAK,2BAAA,1BAAMC;;AAE9B,iCAAA,jCAAMC,0EAAYC;AAAlB,AAGE,IAAA,AACE,IAAAE,mBAAA,KAAAC;AAAA,AAAA,IAAAC,kDAAAC;IAAAC,6CAAAC;IAAAC,kDAAA;IAAAC,6CAAA,WAAAC;AAAA,AAAA,OAAAR,wBAAAQ;;AAAA,AAAA,CAAAL,sCAAAG;;AAAA,CAAAD,iCAAAE;;AAAA,IAAA,AAAc,AAACE,iDAAcX;UAA7B,AAAA,CAAAO,iCAAAD;;AAAA,CAAAD,sCAAAD;;AAAA,mDAAAF;gBADF,GAAA,CAAAD,kBAESW;AAFT,SAAAX,LAEkBY;AAFlB,AAGI,IAAA,AACE,OAAWb;gBADb,GAAA,CAAAc,kBAESF;AAFT,SAAAE,LAEkBC;AAFlB,AAGI;;AAHJ,AAAA,MAAAD;;;;AAHJ,AAAA,MAAAb;;;;AAQD,kCAAA,lCAAMe,4EAAaC;AAAnB,AACE,IAAAC,oDAAAC;IAAAC,oDAA6BC;AAA7B,AAAA,CAAAF,gDAAAC;;AAAA,IAAA,AAAkD,OAACrB,+BAAWkB;UAA9D,AAAA,CAAAE,gDAAAD","names":["devcards.util.utils/react-holder","js/module$node_modules$react$index","devcards.util.utils/html-env?","temp__5751__auto__","doc","js/goog.global.document","devcards.util.utils.goog$module$goog$object.get","devcards.util.utils/node-env?","goog/nodeGlobalRequire","devcards.util.utils/pprint-str","obj","e50861","sb__4795__auto__","goog.string/StringBuffer","*print-newline*-orig-val__50871","cljs.core/*print-newline*","*print-fn*-orig-val__50872","cljs.core/*print-fn*","*print-newline*-temp-val__50873","*print-fn*-temp-val__50874","x__4796__auto__","cljs.pprint.pprint","js/Error","e1","e50864","e2","devcards.util.utils/pprint-code","code","*print-pprint-dispatch*-orig-val__50883","cljs.pprint/*print-pprint-dispatch*","*print-pprint-dispatch*-temp-val__50884","cljs.pprint/code-dispatch"],"sourcesContent":["(ns devcards.util.utils\n  (:require\n   [goog.object :as gobj]\n   [cljs.pprint :as pprint]\n   [react])\n  (:require-macros\n   [devcards.util.utils]))\n\n;; this is a reference\n(def react-holder react)\n\n(defn html-env? []\n  (if-let [doc js/goog.global.document]\n    (gobj/get doc \"write\")))\n\n(defn node-env? [] (not (nil? goog/nodeGlobalRequire)))\n\n(defn pprint-str [obj]\n  ;; this is currently only to handle the\n  ;; problem of printing JavaScript Symbols\n  (try\n    (with-out-str (pprint/pprint obj))\n    (catch js/Error e1\n      (try\n        (.toString obj)\n        (catch js/Error e2\n          (str \"<<Un-printable Type>>\"))))))\n \n (defn pprint-code [code]\n   (pprint/with-pprint-dispatch pprint/code-dispatch (pprint-str code)))\n"]}