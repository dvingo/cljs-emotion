{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$dts.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,CAAA,sDAAA,CAA2E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAyJnHD,MAAOC,CAAAA,OAAP,CA/IAC,QAAY,CAACC,IAAD,CAAO,CACjB,MAAMC,QAAU,CACdC,UAAW,QADG,CAEdC,SAAU,CACRH,IAAKI,CAAAA,OAAL,CAAaJ,IAAKK,CAAAA,iBAAlB,CAAqC,CACnCC,MAAO,eAD4B,CAArC,CADQ,CAIR,CACEA,MAAO,YADT,CAEEC,IAAK,GAFP,CAGEC,SAAU,CAACR,IAAKS,CAAAA,gBAAN,CAHZ,CAJQ,CASR,CACEH,MAAO,SADT,CAEEC,IAAK,GAFP,CAGEG,QAAS,GAHX,CATQ,CAFI,CAAhB,CAmBMC,QAAU,CACdT,UAAW,QADG,CAEdC,SAAU,CACR,CACEG,MAAO,gDADT,CADQ,CAIR,CACEA,MAAON,IAAKY,CAAAA,WADd,CAJQ,CAFI,CAUdC,UAAW,CAVG,CAnBhB,CAgCMC,aAAe,CACnBZ,UAAW,MADQ;AAEnBI,MAAO,GAFY,CAGnBC,IAAK,GAHc,CAInBQ,SAAU,CACR,eAAgB,8CADR,CAJS,CAOnBP,SAAU,CACR,CACEF,MAAO,MADT,CAEEO,UAAW,CAFb,CADQ,CAKR,CACEG,cAAe,SADjB,CAEET,IAAK,GAFP,CAGEQ,SAAU,CACR,eAAgB,SADR,CAHZ,CAMEP,SAAU,CACRR,IAAKI,CAAAA,OAAL,CAAaH,OAAb,CAAsB,CACpBC,UAAW,aADS,CAAtB,CADQ,CAIR,CACEA,UAAW,aADb,CAEEI,MAAO,MAFT,CAGEC,IAAK,MAHP,CAIEG,QAAS,KAJX,CAJQ,CANZ,CALQ,CAuBRT,OAvBQ,CAwBRD,IAAKiB,CAAAA,mBAxBG,CAyBRjB,IAAKkB,CAAAA,oBAzBG,CAPS,CAhCrB,CAoEMC,cAAgB,CACpBjB,UAAW,UADS,CAEpBI,MAAO,cAFa,CApEtB,CAyEMc,YAAc,CAClBlB,UAAW,cADO,CAElBI,MAAO,mBAFW,CAzEpB;AA8EMe,UAAY,CAChBnB,UAAW,QADK,CAEhBI,MAAO,8BAFS,CA9ElB,CAmFMgB,kBAAoB,CACxBpB,UAAW,QADa,CAExBI,MAAO,MAFiB,CAGxBC,IAAK,MAHmB,CAIxBC,SAAU,CACRG,OADQ,CAERQ,aAFQ,CAJc,CAnF1B,CA6FMI,SAAW,CACfrB,UAAW,OADI,CAEfI,MAAO,4BAFQ,CAGfC,IAAK,OAHU,CAIfiB,YAAa,CAAA,CAJE,CAKfC,WAAY,CAAA,CALG,CA0BjB,OAAO,CACLC,KAAM,aADD,CAELX,SAAU,EAFL,CAGLP,SAAU,CArBUmB,CACpBzB,UAAW,OADSyB,CAEpBrB,MAAO,UAFaqB,CAGpBpB,IAAK,KAHeoB,CAIpBd,UAAW,EAJSc,CAKpBnB,SAAU,CACRW,aADQ,CAERC,WAFQ,CAGRC,SAHQ,CAIRE,QAJQ,CAKRD,iBALQ,CAMRtB,IAAKiB,CAAAA,mBANG,CAORjB,IAAKkB,CAAAA,oBAPG,CAQRP,OARQ;AASRV,OATQ,CALU0B,CAqBV,CAERR,aAFQ,CAGRC,WAHQ,CAIRC,SAJQ,CAKRE,QALQ,CAMRD,iBANQ,CAORtB,IAAKiB,CAAAA,mBAPG,CAQRjB,IAAKkB,CAAAA,oBARG,CASRP,OATQ,CAURV,OAVQ,CAWRa,YAXQ,CAYR,CACER,MAAON,IAAK4B,CAAAA,QAAZtB,CAAuB,IADzB,CAEES,SAAU,EAFZ,CAZQ,CAHL,CAxHU,CAVgG;",
"sources":["node_modules/highlight_DOT_js/lib/languages/dts.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$dts\"] = function(global,require,module,exports) {\n/*\nLanguage: Device Tree\nDescription: *.dts files used in the Linux kernel\nAuthor: Martin Braun <martin.braun@ettus.com>, Moritz Fischer <moritz.fischer@ettus.com>\nWebsite: https://elinux.org/Device_Tree_Reference\nCategory: config\n*/\n\n/** @type LanguageFn */\nfunction dts(hljs) {\n  const STRINGS = {\n    className: 'string',\n    variants: [\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {\n        begin: '((u8?|U)|L)?\"'\n      }),\n      {\n        begin: '(u8?|U)?R\"',\n        end: '\"',\n        contains: [hljs.BACKSLASH_ESCAPE]\n      },\n      {\n        begin: '\\'\\\\\\\\?.',\n        end: '\\'',\n        illegal: '.'\n      }\n    ]\n  };\n\n  const NUMBERS = {\n    className: 'number',\n    variants: [\n      {\n        begin: '\\\\b(\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)(u|U|l|L|ul|UL|f|F)'\n      },\n      {\n        begin: hljs.C_NUMBER_RE\n      }\n    ],\n    relevance: 0\n  };\n\n  const PREPROCESSOR = {\n    className: 'meta',\n    begin: '#',\n    end: '$',\n    keywords: {\n      'meta-keyword': 'if else elif endif define undef ifdef ifndef'\n    },\n    contains: [\n      {\n        begin: /\\\\\\n/,\n        relevance: 0\n      },\n      {\n        beginKeywords: 'include',\n        end: '$',\n        keywords: {\n          'meta-keyword': 'include'\n        },\n        contains: [\n          hljs.inherit(STRINGS, {\n            className: 'meta-string'\n          }),\n          {\n            className: 'meta-string',\n            begin: '<',\n            end: '>',\n            illegal: '\\\\n'\n          }\n        ]\n      },\n      STRINGS,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ]\n  };\n\n  const DTS_REFERENCE = {\n    className: 'variable',\n    begin: /&[a-z\\d_]*\\b/\n  };\n\n  const DTS_KEYWORD = {\n    className: 'meta-keyword',\n    begin: '/[a-z][a-z\\\\d-]*/'\n  };\n\n  const DTS_LABEL = {\n    className: 'symbol',\n    begin: '^\\\\s*[a-zA-Z_][a-zA-Z\\\\d_]*:'\n  };\n\n  const DTS_CELL_PROPERTY = {\n    className: 'params',\n    begin: '<',\n    end: '>',\n    contains: [\n      NUMBERS,\n      DTS_REFERENCE\n    ]\n  };\n\n  const DTS_NODE = {\n    className: 'class',\n    begin: /[a-zA-Z_][a-zA-Z\\d_@]*\\s\\{/,\n    end: /[{;=]/,\n    returnBegin: true,\n    excludeEnd: true\n  };\n\n  const DTS_ROOT_NODE = {\n    className: 'class',\n    begin: '/\\\\s*\\\\{',\n    end: /\\};/,\n    relevance: 10,\n    contains: [\n      DTS_REFERENCE,\n      DTS_KEYWORD,\n      DTS_LABEL,\n      DTS_NODE,\n      DTS_CELL_PROPERTY,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      NUMBERS,\n      STRINGS\n    ]\n  };\n\n  return {\n    name: 'Device Tree',\n    keywords: \"\",\n    contains: [\n      DTS_ROOT_NODE,\n      DTS_REFERENCE,\n      DTS_KEYWORD,\n      DTS_LABEL,\n      DTS_NODE,\n      DTS_CELL_PROPERTY,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      NUMBERS,\n      STRINGS,\n      PREPROCESSOR,\n      {\n        begin: hljs.IDENT_RE + '::',\n        keywords: \"\"\n      }\n    ]\n  };\n}\n\nmodule.exports = dts;\n\n};"],
"names":["shadow$provide","global","require","module","exports","dts","hljs","STRINGS","className","variants","inherit","QUOTE_STRING_MODE","begin","end","contains","BACKSLASH_ESCAPE","illegal","NUMBERS","C_NUMBER_RE","relevance","PREPROCESSOR","keywords","beginKeywords","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","DTS_REFERENCE","DTS_KEYWORD","DTS_LABEL","DTS_CELL_PROPERTY","DTS_NODE","returnBegin","excludeEnd","name","DTS_ROOT_NODE","IDENT_RE"]
}
