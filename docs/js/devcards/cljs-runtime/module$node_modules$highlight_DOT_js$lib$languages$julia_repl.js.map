{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$julia_repl.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,6DAAA,CAAkF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAkD1HD,MAAOC,CAAAA,OAAP,CAzBAC,QAAkB,CAACC,IAAD,CAAO,CACvB,MAAO,CACLC,KAAM,YADD,CAELC,SAAU,CACR,CACEC,UAAW,MADb,CAEEC,MAAO,SAFT,CAGEC,UAAW,EAHb,CAIEC,OAAQ,CAGNC,IAAK,aAHC,CAINC,YAAa,OAJP,CAJV,CAeAC,QAAS,CAAC,WAAD,CAfT,CADQ,CAFL,CADgB,CAzBiG;",
"sources":["node_modules/highlight_DOT_js/lib/languages/julia-repl.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$julia_repl\"] = function(global,require,module,exports) {\n/*\nLanguage: Julia REPL\nDescription: Julia REPL sessions\nAuthor: Morten Piibeleht <morten.piibeleht@gmail.com>\nWebsite: https://julialang.org\nRequires: julia.js\n\nThe Julia REPL code blocks look something like the following:\n\n  julia> function foo(x)\n             x + 1\n         end\n  foo (generic function with 1 method)\n\nThey start on a new line with \"julia>\". Usually there should also be a space after this, but\nwe also allow the code to start right after the > character. The code may run over multiple\nlines, but the additional lines must start with six spaces (i.e. be indented to match\n\"julia>\"). The rest of the code is assumed to be output from the executed code and will be\nleft un-highlighted.\n\nUsing simply spaces to identify line continuations may get a false-positive if the output\nalso prints out six spaces, but such cases should be rare.\n*/\n\nfunction juliaRepl(hljs) {\n  return {\n    name: 'Julia REPL',\n    contains: [\n      {\n        className: 'meta',\n        begin: /^julia>/,\n        relevance: 10,\n        starts: {\n          // end the highlighting if we are on a new line and the line does not have at\n          // least six spaces in the beginning\n          end: /^(?![ ]{6})/,\n          subLanguage: 'julia'\n      },\n      // jldoctest Markdown blocks are used in the Julia manual and package docs indicate\n      // code snippets that should be verified when the documentation is built. They can be\n      // either REPL-like or script-like, but are usually REPL-like and therefore we apply\n      // julia-repl highlighting to them. More information can be found in Documenter's\n      // manual: https://juliadocs.github.io/Documenter.jl/latest/man/doctests.html\n      aliases: ['jldoctest']\n      }\n    ]\n  }\n}\n\nmodule.exports = juliaRepl;\n\n};"],
"names":["shadow$provide","global","require","module","exports","juliaRepl","hljs","name","contains","className","begin","relevance","starts","end","subLanguage","aliases"]
}
