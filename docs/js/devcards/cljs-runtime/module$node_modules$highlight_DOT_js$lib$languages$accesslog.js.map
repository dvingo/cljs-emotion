{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$accesslog.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,4DAAA,CAAiF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAqBzHC,QAASA,OAAM,CAAC,GAAGC,IAAJ,CAAU,CAEvB,MADeA,KAAKC,CAAAA,GAAL,CAAUC,CAAD,EAAcA,CAXtC,CACkB,QAAlB,GAAI,MAUkCA,EAVtC,CAUsCA,CAVtC,CAUsCA,CAR5BC,CAAAA,MAHV,CAAgB,IAWD,CAA2BC,CAAAA,IAA3BC,CAAgC,EAAhCA,CADQ,CAYzBC,QAASA,OAAM,CAAC,GAAGN,IAAJ,CAAU,CAEvB,MADe,GACf,CADqBA,IAAKC,CAAAA,GAAL,CAAUC,CAAD,EAAcA,CAvB5C,CACkB,QAAlB,GAAI,MAsBwCA,EAtB5C,CAsB4CA,CAtB5C,CAsB4CA,CApBlCC,CAAAA,MAHV,CAAgB,IAuBK,CAA2BC,CAAAA,IAA3B,CAAgC,GAAhC,CACrB,CAD4D,GADrC,CA8FzBP,MAAOC,CAAAA,OAAP,CAhFAS,QAAkB,CAACC,KAAD,CAAQ,CAElBC,KAAAA,CAAa,sDAAA,CAAA,KAAA,CAAA,GAAA,CAWnB,OAAO,CACLC,KAAM,mBADD,CAELC,SAAU,CAER,CACEC,UAAW,QADb,CAEEC,MAAO,kDAFT;AAGEC,UAAW,CAHb,CAFQ,CAQR,CACEF,UAAW,QADb,CAEEC,MAAO,SAFT,CAGEC,UAAW,CAHb,CARQ,CAcR,CACEF,UAAW,QADb,CAEEC,MAAOd,MAAA,CAAO,GAAP,CAAYO,MAAA,CAAO,GAAGG,KAAV,CAAZ,CAFT,CAGEM,IAAK,GAHP,CAIEC,SAAUP,KAJZ,CAKEQ,QAAS,IALX,CAMEH,UAAW,CANb,CAOEH,SAAU,CACR,CACEE,MAAO,iBADT,CAEEC,UAAW,CAFb,CADQ,CAPZ,CAdQ,CA6BR,CACEF,UAAW,QADb,CAKEC,MAAO,mBALT,CAMEI,QAAS,IANX,CAOEH,UAAW,CAPb,CA7BQ,CAsCR,CACEF,UAAW,QADb,CAEEC,MAAO,IAFT,CAGEE,IAAK,IAHP,CAIEE,QAAS,IAJX,CAKEH,UAAW,CALb,CAtCQ,CA8CR,CACEF,UAAW,QADb,CAEEC,MAAO,qBAFT,CAGEE,IAAK,GAHP,CAIEE,QAAS,IAJX,CAKEH,UAAW,CALb,CA9CQ,CAsDR,CACEF,UAAW,QADb,CAEEC,MAAO,GAFT,CAGEE,IAAK,GAHP,CAIEE,QAAS,IAJX,CAKEH,UAAW,CALb,CAtDQ,CAFL,CAbiB,CA/C+F;",
"sources":["node_modules/highlight_DOT_js/lib/languages/accesslog.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$accesslog\"] = function(global,require,module,exports) {\n/**\n * @param {string} value\n * @returns {RegExp}\n * */\n\n/**\n * @param {RegExp | string } re\n * @returns {string}\n */\nfunction source(re) {\n  if (!re) return null;\n  if (typeof re === \"string\") return re;\n\n  return re.source;\n}\n\n/**\n * @param {...(RegExp | string) } args\n * @returns {string}\n */\nfunction concat(...args) {\n  const joined = args.map((x) => source(x)).join(\"\");\n  return joined;\n}\n\n/**\n * Any of the passed expresssions may match\n *\n * Creates a huge this | this | that | that match\n * @param {(RegExp | string)[] } args\n * @returns {string}\n */\nfunction either(...args) {\n  const joined = '(' + args.map((x) => source(x)).join(\"|\") + \")\";\n  return joined;\n}\n\n/*\n Language: Apache Access Log\n Author: Oleg Efimov <efimovov@gmail.com>\n Description: Apache/Nginx Access Logs\n Website: https://httpd.apache.org/docs/2.4/logs.html#accesslog\n Audit: 2020\n */\n\n/** @type LanguageFn */\nfunction accesslog(_hljs) {\n  // https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods\n  const HTTP_VERBS = [\n    \"GET\",\n    \"POST\",\n    \"HEAD\",\n    \"PUT\",\n    \"DELETE\",\n    \"CONNECT\",\n    \"OPTIONS\",\n    \"PATCH\",\n    \"TRACE\"\n  ];\n  return {\n    name: 'Apache Access Log',\n    contains: [\n      // IP\n      {\n        className: 'number',\n        begin: /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}(:\\d{1,5})?\\b/,\n        relevance: 5\n      },\n      // Other numbers\n      {\n        className: 'number',\n        begin: /\\b\\d+\\b/,\n        relevance: 0\n      },\n      // Requests\n      {\n        className: 'string',\n        begin: concat(/\"/, either(...HTTP_VERBS)),\n        end: /\"/,\n        keywords: HTTP_VERBS,\n        illegal: /\\n/,\n        relevance: 5,\n        contains: [\n          {\n            begin: /HTTP\\/[12]\\.\\d'/,\n            relevance: 5\n          }\n        ]\n      },\n      // Dates\n      {\n        className: 'string',\n        // dates must have a certain length, this prevents matching\n        // simple array accesses a[123] and [] and other common patterns\n        // found in other languages\n        begin: /\\[\\d[^\\]\\n]{8,}\\]/,\n        illegal: /\\n/,\n        relevance: 1\n      },\n      {\n        className: 'string',\n        begin: /\\[/,\n        end: /\\]/,\n        illegal: /\\n/,\n        relevance: 0\n      },\n      // User agent / relevance boost\n      {\n        className: 'string',\n        begin: /\"Mozilla\\/\\d\\.\\d \\(/,\n        end: /\"/,\n        illegal: /\\n/,\n        relevance: 3\n      },\n      // Strings\n      {\n        className: 'string',\n        begin: /\"/,\n        end: /\"/,\n        illegal: /\\n/,\n        relevance: 0\n      }\n    ]\n  };\n}\n\nmodule.exports = accesslog;\n\n};"],
"names":["shadow$provide","global","require","module","exports","concat","args","map","x","source","join","joined","either","accesslog","_hljs","HTTP_VERBS","name","contains","className","begin","relevance","end","keywords","illegal"]
}
