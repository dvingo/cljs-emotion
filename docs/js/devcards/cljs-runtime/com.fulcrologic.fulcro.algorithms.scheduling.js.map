{"version":3,"sources":["com/fulcrologic/fulcro/algorithms/scheduling.cljc"],"mappings":";AAOA;;;qDAAA,rDAAMA,kHAEHC,EAAEC;AAFL,AAGW,OAACC,WAAcF,EAAEC;;AAY5B,AAAA;;;;;;;;8DAAA,sEAAAE,pIAAME;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,0FAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,0FAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAC,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,4FAAA,5FAAMD,uGAOFE,IAAIC,cAAcC,OAAOR;AAP7B,AAAA,mFAAA,uHAQ4CS,yBAASC,oBAAIC,qBAAKC,yCAAGC;;AAC9D,IAAAC,aAAgER;IAAhEQ,iBAAA,AAAAC,4BAAAD;mBAAA,AAAAE,4CAAAF,eAAA,1EAAiDG;AAAjD,AACE,oBAAU,4CAAA,AAAAC,5CAACF,4DAAKC,cAAaV;AAA7B;;AAAA,AACE,8FAAA,9FAACY,mDAAMF,aAAaG,gBAAMb;;AAC1B,OAACT,mDAAM;AAAA,AACE,8FAAA,9FAACqB,mDAAMF,aAAaG,gBAAMb;;AAC1B,QAACC,uCAAAA,4CAAAA,PAAOF,wBAAAA;GAAMN;;;;AAd9B,CAAA,4FAAA,5FAAMI,uGAeFE,IAAIC,cAAcC;AAftB,AAAA,mFAAA,uHAgB4CC,yBAASC,oBAAIE,yCAAGC;;AACzD,0HAAA,nHAACQ,0FAAUf,IAAIC,cAAcC;;;AAjBhC,CAAA,sFAAA,tFAAMJ;;AAAN,AAmBA,IAAMkB,YACa,wEAAA,WAAAC,jFAAI,QAAAC,wCACFA;AADF,AAEG,0DAAAD,iBAAA,pEAACzB;;AAHvB,AAIE;;;;;;wEAAA,xEAAM2B,wJAKFnB,IAAIC,cAAcC;AALtB,AAAA,mFAAA,uHAM4CC,yBAASC,oBAAIE,yCAAGC;;AAEhD,IAAAa,aAAgEpB;IAAhEoB,iBAAA,AAAAX,4BAAAW;mBAAA,AAAAV,4CAAAU,eAAA,1EAAiDT;AAAjD,AACE,oBAAU,4CAAA,AAAAC,5CAACF,4DAAKC,cAAaV;AAA7B;;AAAA,AACE,8FAAA,9FAACY,mDAAMF,aAAaG,gBAAMb;;AAC1B,IAAMR,IAAE;AAAA,AACE,8FAAA,9FAACoB,mDAAMF,aAAaG,gBAAMb;;AAC1B,QAACC,uCAAAA,yCAAAA;;AAFX,AAGE,QAACc,0CAAAA,6CAAAA,LAAIvB,yBAAAA","names":["com.fulcrologic.fulcro.algorithms.scheduling/defer","f","tm","js/setTimeout","var_args","G__48919","com.fulcrologic.fulcro.algorithms.scheduling/schedule!","js/Error","app","scheduled-key","action","cljs.core/keyword?","cljs.core/fn?","cljs.core/int?","com.fulcrologic.guardrails.core/=>","cljs.core/any?","map__48925","cljs.core/--destructure-map","cljs.core.get","runtime-atom","cljs.core/deref","cljs.core.swap_BANG_","cljs.core/assoc","com.fulcrologic.fulcro.algorithms.scheduling.schedule_BANG_","raf","p1__48933#","js/requestAnimationFrame","com.fulcrologic.fulcro.algorithms.scheduling/schedule-animation!","map__48937"],"sourcesContent":["(ns com.fulcrologic.fulcro.algorithms.scheduling\n  \"Algorithms for delaying some action by a particular amount of time.\"\n  (:require\n    [com.fulcrologic.guardrails.core :refer [>fdef =>]]\n    [clojure.core.async :as async]\n    [taoensso.timbre :as log]))\n\n(defn defer\n  \"Schedule f to run in `tm` ms.\"\n  [f tm]\n  #?(:cljs (js/setTimeout f tm)\n     :clj  (let [active (atom true)\n                 cancel (fn [] (reset! active false))]\n             (async/go\n               (async/<! (async/timeout tm))\n               (when (and @active f)\n                 (try\n                   (f)\n                   (catch Exception e\n                     (log/error e \"Deferred function crash\")))))\n             cancel)))\n\n(defn schedule!\n  \"Schedule the processing of a specific action in the runtime atom. This is a no-op if the item is already scheduled.\n  When the timeout arrives it runs the given action and sets the given flag back to false.\n\n  - `scheduled-key` - The runtime flag that tracks scheduling for the processing.\n  - `action` - The function to run when the scheduled time comes.\n  - `tm` - Number of ms to delay (default 0).\"\n  ([app scheduled-key action tm]\n   [:com.fulcrologic.fulcro.application/app keyword? fn? int? => any?]\n   (let [{:com.fulcrologic.fulcro.application/keys [runtime-atom]} app]\n     (when-not (get @runtime-atom scheduled-key)\n       (swap! runtime-atom assoc scheduled-key true)\n       (defer (fn []\n                (swap! runtime-atom assoc scheduled-key false)\n                (action app)) tm))))\n  ([app scheduled-key action]\n   [:com.fulcrologic.fulcro.application/app keyword? fn? => any?]\n   (schedule! app scheduled-key action 0)))\n\n(let [raf #?(:clj #(defer % 16)\n             :cljs (if (exists? js/requestAnimationFrame)\n                     js/requestAnimationFrame\n                     #(defer % 16)))]\n  (defn schedule-animation!\n    \"Schedule the processing of a specific action in the runtime atom on the next animation frame.\n\n    - `scheduled-key` - The runtime flag that tracks scheduling for the processing.\n    - `action` - The function to run when the scheduled time comes.\"\n    ([app scheduled-key action]\n     [:com.fulcrologic.fulcro.application/app keyword? fn? => any?]\n     #?(:clj  (action)\n        :cljs (let [{:com.fulcrologic.fulcro.application/keys [runtime-atom]} app]\n                (when-not (get @runtime-atom scheduled-key)\n                  (swap! runtime-atom assoc scheduled-key true)\n                  (let [f (fn []\n                            (swap! runtime-atom assoc scheduled-key false)\n                            (action))]\n                    (raf f))))))))\n"]}