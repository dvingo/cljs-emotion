{"version":3,"sources":["devtools/reporter.cljs"],"mappings":";AAKA,+BAAA,/BAAKA;AAIL,AAAA,gDAAA,wDAAAC,xGAAMM;AAAN,AAAA,IAAAL,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAK,mFAAA,CAAA,UAAA,MAAAF;;;AAAA,AAAA,CAAA,qFAAA,aAAAG,lGAAMD,gGAAwBS;AAA9B,AAAA,IAAAP,aAAAD;cAAA,AAAAE,4CAAAD,WAAA,IAAA,rEAAmCQ;aAAnC,AAAAP,4CAAAD,WAAA,IAAA,pEAA2CS;AAA3C,AACE,IAAMC,UAAQ,AAACC;AAAf,AACE,IAAA,AACE,IAAME,UAAQ,EAAI,cAAWC,bAASP,qBACtB,iBAAAQ,mBAAI,AAAWR;AAAf,AAAA,oBAAAQ;AAAAA;;AAAkBR;;KAClBA;aAFhB,CAAA,4BAAA,uFAAA,7HAGMS,yIAGY,CAAA,gDAASH;IACrBI,cAAY,CAAA,4IAAA,tIAAW,AAACC,6BAAmB,oGAAA,lFAAIV,SAAQ,CAAA,0DAAA,TAAUA;IACjEW,aAAW,EAAI,GAAA,WAAA,VAAOV,mBACTA,OACA,CAAA,OAAA,QAAA,iCAAqDlB;cAVxE,VAWM6B,WAAaH,YAAYV,EAAEY;AAXjC,AAYE,IAAME,kBAAgB,SAAA,RAAMX;IACtBY,MAAI,SAAA,RAAMZ;IACVa,YAAU,SAAA,RAAMb;AAFtB,AAGE,oBAAQW;AAAR;AAAA,AAAA,MAAA,KAAAP,MAAA;;;AACA,oBAAQQ;AAAR;AAAA,AAAA,MAAA,KAAAR,MAAA;;;AACA,oBAAQS;AAAR;AAAA,AAAA,MAAA,KAAAT,MAAA;;;AACA,AAAQO,sBAAgBX,QAAQM;;AAChC,AAAQM,UAAIZ,QAAQU;;AACpB,OAAOG,eAAUb;gBArBvB,YAAAE,RAsBkBL;AAtBlB,AAuBI,qBAAA,dAAQG,qDAA+CH;;;AAzB/D,CAAA,wEAAA,xEAAMT;;AAAN;AAAA,CAAA,kEAAA,WAAAI,7EAAMJ;AAAN,AAAA,IAAAK,WAAA,AAAAC,gBAAAF;IAAAA,eAAA,AAAAG,eAAAH;AAAA,AAAA,IAAAI,qBAAA;AAAA,AAAA,OAAAA,wDAAAH,SAAAD;;;AAAA","names":["devtools.reporter/issues-url","var_args","args__4870__auto__","len__4864__auto__","i__4865__auto__","argseq__4871__auto__","cljs.core/IndexedSeq","devtools.reporter/report-internal-error!","p__45391","vec__45392","cljs.core.nth","seq45385","G__45386","cljs.core/first","cljs.core/next","self__4851__auto__","e","context","footer","console","devtools.context/get-console","e45396","message","js/Error","or__4253__auto__","header","context-msg","devtools.util/get-lib-info","footer-msg","details","group-collapsed","log","group-end"],"sourcesContent":["(ns devtools.reporter\n  (:require-macros [devtools.oops :refer [oget]])\n  (:require [devtools.util :as util]\n            [devtools.context :as context]))\n\n(def issues-url \"https://github.com/binaryage/cljs-devtools/issues\")\n\n; -- internal errors  -------------------------------------------------------------------------------------------------------\n\n(defn report-internal-error! [e & [context footer]]\n  (let [console (context/get-console)]\n    (try\n      (let [message (if (instance? js/Error e)\n                      (or (.-message e) e)\n                      e)\n            header #js [\"%cCLJS DevTools Error%c%s\"\n                        \"background-color:red;color:white;font-weight:bold;padding:0px 3px;border-radius:2px;\"\n                        \"color:red\"\n                        (str \" \" message)]\n            context-msg (str \"In \" (util/get-lib-info) (if context (str \", \" context \".\") \".\") \"\\n\\n\")\n            footer-msg (if (some? footer)\n                         footer\n                         (str \"\\n\\n\" \"---\\n\" \"Please report the issue here: \" issues-url))\n            details #js [context-msg e footer-msg]]\n        (let [group-collapsed (oget console \"groupCollapsed\")\n              log (oget console \"log\")\n              group-end (oget console \"groupEnd\")]\n          (assert group-collapsed)\n          (assert log)\n          (assert group-end)\n          (.apply group-collapsed console header)\n          (.apply log console details)\n          (.call group-end console)))\n      (catch :default e\n        (.error console \"FATAL: report-internal-error! failed\" e)))))\n"]}